All Compile-time Calls invokes JDK:
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <init>(java.io.InputStream)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <init>(java.io.InputStream)> => <java.lang.Boolean: boolean parseBoolean(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <init>(java.io.InputStream)> => <java.util.Collections: java.util.Map emptyMap()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <init>(java.io.InputStream)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <init>(java.io.InputStream)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <init>(java.io.InputStream)> => <java.nio.charset.StandardCharsets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler$1: void windowDeactivated(java.awt.event.WindowEvent)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler$1: void windowDeactivated(java.awt.event.WindowEvent)> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.FlatSystemProperties: boolean getBoolean(java.lang.String,boolean)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatSystemProperties: boolean getBoolean(java.lang.String,boolean)> => <java.lang.Boolean: boolean parseBoolean(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatSystemProperties: boolean getBoolean(java.lang.String,boolean)> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatSystemProperties: boolean getBoolean(java.lang.String,boolean)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatSystemProperties: java.lang.Boolean getBooleanStrict(java.lang.String,java.lang.Boolean)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatSystemProperties: java.lang.Boolean getBooleanStrict(java.lang.String,java.lang.Boolean)> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatSystemProperties: java.lang.Boolean getBooleanStrict(java.lang.String,java.lang.Boolean)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatSystemProperties: java.lang.Boolean getBooleanStrict(java.lang.String,java.lang.Boolean)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledEmptyBorder: java.awt.Insets getBorderInsets()> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void addPropertyChangeListener(java.beans.PropertyChangeListener)> => <java.beans.PropertyChangeSupport: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: boolean isSystemScalingEnabled()> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: boolean isSystemScalingEnabled()> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: boolean isSystemScalingEnabled()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: boolean isSystemScalingEnabled()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: boolean isSystemScalingEnabled()> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: boolean isSystemScalingEnabled()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: float computeFontScaleFactor(java.awt.Font)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: float computeFontScaleFactor(java.awt.Font)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: float computeFontScaleFactor(java.awt.Font)> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: javax.swing.plaf.FontUIResource applyCustomScaleFactor(javax.swing.plaf.FontUIResource)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: javax.swing.plaf.FontUIResource applyCustomScaleFactor(javax.swing.plaf.FontUIResource)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: javax.swing.plaf.FontUIResource applyCustomScaleFactor(javax.swing.plaf.FontUIResource)> => <java.awt.Font: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: javax.swing.plaf.FontUIResource applyCustomScaleFactor(javax.swing.plaf.FontUIResource)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: int scale(int)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: int scale(int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: int unscale(int)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: int unscale(int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: java.awt.Dimension scale(java.awt.Dimension)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: java.awt.Dimension scale(java.awt.Dimension)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: java.awt.Insets scale(java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: java.awt.Insets scale(java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SoftCache: void <init>()> => <java.lang.ref.ReferenceQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SoftCache: void <init>(int)> => <java.lang.ref.ReferenceQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SoftCache: boolean containsValue(java.lang.Object)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SoftCache: java.lang.Object put(java.lang.Object,java.lang.Object)> => <java.lang.ref.Reference: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SoftCache: java.util.Collection values()> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SoftCache: java.util.Set entrySet()> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SoftCache: void forEach(java.util.function.BiConsumer)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SoftCache: void replaceAll(java.util.function.BiFunction)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils$1: void drawChars(char[],int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils$1: void drawChars(char[],int,int,int,int)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils$1: void drawBytes(byte[],int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils$1: void drawBytes(byte[],int,int,int,int)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: long scanVersion(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: long scanVersion(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: long scanVersion(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: long scanVersion(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: long scanVersion(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup publicLookup()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class[])>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.invoke.MethodType: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.Void: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: java.lang.String getClippedString(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup publicLookup()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: java.lang.String getClippedString(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class,java.lang.Class[])>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: java.lang.String getClippedString(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: java.lang.String getClippedString(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: java.lang.String getClippedString(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: java.lang.String getClippedString(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: java.lang.String getClippedString(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <java.lang.invoke.MethodType: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: java.lang.String getClippedString(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.JavaCompatibility: java.lang.String getClippedString(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Mix: void apply(float[])> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Mix: void apply(float[])> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Mix: java.lang.String toString()> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Mix: java.lang.String toString()> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Mix: java.lang.String toString()> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Mix: java.lang.String toString()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Mix: java.lang.String toString()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Mix: java.lang.String toString()> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.CubicBezierEasing: void <init>(float,float,float,float)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.CubicBezierEasing: float interpolate(float)> => <java.lang.Math: float abs(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.CubicBezierEasing: float interpolate(float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.DerivedColor: void <init>(java.awt.Color,com.formdev.flatlaf.util.ColorFunctions$ColorFunction[])> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.DerivedColor: java.lang.String toString()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.StringUtils: java.util.List split(java.lang.String,char,boolean,boolean)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.StringUtils: java.util.List split(java.lang.String,char,boolean,boolean)> => <java.util.Collections: java.util.List emptyList()>
Found compile-time invoke: <com.formdev.flatlaf.util.StringUtils: java.util.List split(java.lang.String,char,boolean,boolean)> => <java.util.Collections: java.util.List singletonList(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.util.StringUtils: java.util.List split(java.lang.String,char,boolean,boolean)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.StringUtils: java.util.List split(java.lang.String,char,boolean,boolean)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.LoggingFacadeImpl: void logSevere(java.lang.String,java.lang.Throwable)> => <java.util.logging.Level: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.LoggingFacadeImpl: void logConfig(java.lang.String,java.lang.Throwable)> => <java.util.logging.Level: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)> => <java.lang.Math: long round(double)>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)> => <java.lang.Math: long round(double)>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLIncreaseDecrease: java.lang.String toString()> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLIncreaseDecrease: java.lang.String toString()> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLIncreaseDecrease: java.lang.String toString()> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLIncreaseDecrease: java.lang.String toString()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLIncreaseDecrease: java.lang.String toString()> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.GrayFilter: void <init>(int,int,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.GrayFilter: void <init>(int,int,int)> => <java.lang.Math: double pow(double,double)>
Found compile-time invoke: <com.formdev.flatlaf.util.GrayFilter: void <init>(int,int,int)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.util.GrayFilter: void <init>(int,int,int)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.util.GrayFilter: void <init>(int,int,int)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.util.GrayFilter: void <init>(int,int,int)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.util.GrayFilter: void <init>(int,int,int)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.util.GrayFilter: void <init>(int,int,int)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: java.awt.Font getCompositeFont(java.lang.String,int,int)> => <javax.swing.text.StyleContext: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: java.awt.Font getCompositeFont(java.lang.String,int,int)> => <javax.swing.text.StyleContext: javax.swing.text.StyleContext getDefaultStyleContext()>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: boolean installFont(java.net.URL)> => <java.awt.Font: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: boolean installFont(java.net.URL)> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: boolean installFont(java.net.URL)> => <java.awt.Font: java.awt.Font createFont(int,java.io.InputStream)>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: boolean installFont(java.net.URL)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: java.lang.String[] getAvailableFontFamilyNames()> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: java.lang.String[] getAvailableFontFamilyNames()> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: java.lang.String[] getAvailableFontFamilyNames()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: java.awt.Font[] getAllFonts()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.FontUtils: java.awt.Font[] getAllFonts()> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Fade: java.lang.String toString()> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Fade: java.lang.String toString()> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Fade: java.lang.String toString()> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$Fade: java.lang.String toString()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLChange: java.lang.String toString()> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLChange: java.lang.String toString()> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLChange: java.lang.String toString()> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLChange: java.lang.String toString()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions$HSLChange: java.lang.String toString()> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.Animator: void <init>(int,com.formdev.flatlaf.util.Animator$TimingTarget,java.lang.Runnable)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.Animator: void setDuration(int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.Animator: void setResolution(int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.Animator: void start()> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.Animator: void start()> => <java.lang.System: long nanoTime()>
Found compile-time invoke: <com.formdev.flatlaf.util.MultiResolutionImageSupport: java.util.List getResolutionVariants(java.awt.Image)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.MultiResolutionImageSupport: java.util.List getResolutionVariants(java.awt.Image)> => <java.util.Collections: java.util.List singletonList(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color adjustShade(float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color adjustShade(float)> => <java.lang.Math: float max(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color adjustTone(float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color adjustTone(float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.lang.String toString()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: float[] fromRGB(java.awt.Color)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: float[] fromRGB(java.awt.Color)> => <java.lang.Math: float max(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: float[] fromRGB(java.awt.Color)> => <java.lang.Math: float max(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: float[] fromRGB(java.awt.Color)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: float[] fromRGB(java.awt.Color)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Math: float max(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Math: float max(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Math: float max(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HSLColor: java.awt.Color toRGB(float,float,float,float)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale$1: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale$1: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color fade(java.awt.Color,float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color fade(java.awt.Color,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color fade(java.awt.Color,float)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color mix(java.awt.Color,java.awt.Color,float)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color mix(java.awt.Color,java.awt.Color,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color mix(java.awt.Color,java.awt.Color,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color mix(java.awt.Color,java.awt.Color,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color mix(java.awt.Color,java.awt.Color,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color mix(java.awt.Color,java.awt.Color,float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color tint(java.awt.Color,float)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: java.awt.Color shade(java.awt.Color,float)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: double floor(double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: double floor(double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: double floor(double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: double floor(double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: double abs(double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: double abs(double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: double hypot(double,double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: double hypot(double,double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.awt.geom.AffineTransform: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.awt.geom.AffineTransform: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: void paintAtScale1x(java.awt.Graphics2D,int,int,int,int,com.formdev.flatlaf.util.HiDPIUtils$Painter)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader$ValueType: com.formdev.flatlaf.UIDefaultsLoader$ValueType valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatPropertiesLaf: void <init>(java.lang.String,java.io.File)> => <java.io.FileInputStream: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatInputMaps$LazyInputMapEx: java.lang.Object createValue(javax.swing.UIDefaults)> => <javax.swing.LookAndFeel: void loadKeyBindings(javax.swing.InputMap,java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: boolean setup(javax.swing.LookAndFeel)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: boolean setup(javax.swing.LookAndFeel)> => <javax.swing.UIManager: void setLookAndFeel(javax.swing.LookAndFeel)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: boolean setup(javax.swing.LookAndFeel)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void installLafInfo(java.lang.String,java.lang.Class)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void installLafInfo(java.lang.String,java.lang.Class)> => <javax.swing.UIManager: void installLookAndFeel(javax.swing.UIManager$LookAndFeelInfo)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.String getID()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: boolean isLafDark()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: boolean isLafDark()> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.Icon getDisabledIcon(javax.swing.JComponent,javax.swing.Icon)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.Icon getDisabledIcon(javax.swing.JComponent,javax.swing.Icon)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.Icon getDisabledIcon(javax.swing.JComponent,javax.swing.Icon)> => <javax.swing.ImageIcon: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initialize()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initialize()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initialize()> => <javax.swing.PopupFactory: void setSharedInstance(javax.swing.PopupFactory)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initialize()> => <javax.swing.PopupFactory: javax.swing.PopupFactory getSharedInstance()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initialize()> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initialize()> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initialize()> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void uninitialize()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void uninitialize()> => <javax.swing.PopupFactory: void setSharedInstance(javax.swing.PopupFactory)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void uninitialize()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void uninitialize()> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void uninitialize()> => <javax.swing.text.DefaultEditorKit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void uninitialize()> => <javax.swing.text.StyledEditorKit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void uninitialize()> => <javax.swing.text.html.HTMLEditorKit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void uninitialize()> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void uninitialize()> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <javax.swing.UIDefaults: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <java.lang.Boolean: boolean getBoolean(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <javax.swing.BorderFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <java.util.ServiceLoader: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.UIDefaults getDefaults()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initIconColors(javax.swing.UIDefaults,boolean)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void registerCustomDefaultsSource(java.lang.String,java.lang.ClassLoader)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void registerCustomDefaultsSource(java.net.URL)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void registerCustomDefaultsSource(java.io.File)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object parseDefaultsValue(java.lang.String,java.lang.String,java.lang.Class)> => <java.util.Collections: java.util.List emptyList()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object parseDefaultsValue(java.lang.String,java.lang.String,java.lang.Class)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void updateUI()> => <java.awt.Window: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void updateUI()> => <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void updateUI()> => <java.awt.Window: java.awt.Window[] getWindows()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void updateUI()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void updateUI()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void updateUI()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void updateUILater()> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void updateUILater()> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: boolean isUseNativeWindowDecorations()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: boolean isUseNativeWindowDecorations()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <java.awt.Window: java.awt.Window[] getWindows()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <java.awt.Window: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void setUseNativeWindowDecorations(boolean)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void revalidateAndRepaintAllFramesAndDialogs()> => <java.awt.Window: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void revalidateAndRepaintAllFramesAndDialogs()> => <java.awt.Window: java.awt.Window[] getWindows()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void revalidateAndRepaintAllFramesAndDialogs()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void revalidateAndRepaintAllFramesAndDialogs()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void repaintAllFramesAndDialogs()> => <java.awt.Window: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void repaintAllFramesAndDialogs()> => <java.awt.Window: java.awt.Window[] getWindows()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void repaintAllFramesAndDialogs()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void repaintAllFramesAndDialogs()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void registerUIDefaultsGetter(java.util.function.Function)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void runWithUIDefaultsGetter(java.util.function.Function,java.lang.Runnable)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void runWithUIDefaultsGetter(java.util.function.Function,java.lang.Runnable)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.FlatInputMaps$LazyModifyInputMap: java.lang.Object createValue(javax.swing.UIDefaults)> => <javax.swing.KeyStroke: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatInputMaps$LazyModifyInputMap: java.lang.Object createValue(javax.swing.UIDefaults)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatInputMaps$LazyModifyInputMap: java.lang.Object createValue(javax.swing.UIDefaults)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void <init>(com.formdev.flatlaf.json.JsonHandler)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void parse(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void parse(java.lang.String)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void parse(java.lang.String)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void parse(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void parse(java.lang.String)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void parse(java.io.Reader,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void parse(java.io.Reader,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.Json$DefaultHandler: java.util.List startArray()> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.Location: java.lang.String toString()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void stateChanged(javax.swing.event.ChangeEvent)> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void stateChanged(javax.swing.event.ChangeEvent)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatClientProperties: boolean clientPropertyEquals(javax.swing.JComponent,java.lang.String,java.lang.Object)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.FlatIconColors: com.formdev.flatlaf.FlatIconColors valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatDefaultsAddon: java.io.InputStream getDefaults(java.lang.Class)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Rectangle addInsets(java.awt.Rectangle,java.awt.Insets)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Rectangle subtractInsets(java.awt.Rectangle,java.awt.Insets)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Dimension addInsets(java.awt.Dimension,java.awt.Insets)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Insets addInsets(java.awt.Insets,java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getUIColor(java.lang.String,int)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getUIColor(java.lang.String,int)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getUIColor(java.lang.String,int)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getUIColor(java.lang.String,java.awt.Color)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getUIColor(java.lang.String,java.awt.Color)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean getUIBoolean(java.lang.String,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean getUIBoolean(java.lang.String,boolean)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: int getUIInt(java.lang.String,int)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: int getUIInt(java.lang.String,int)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: float getUIFloat(java.lang.String,float)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: float getUIFloat(java.lang.String,float)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.lang.Enum getUIEnum(java.lang.String,java.lang.Class,java.lang.Enum)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.lang.Enum getUIEnum(java.lang.String,java.lang.Class,java.lang.Enum)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.lang.Enum getUIEnum(java.lang.String,java.lang.Class,java.lang.Enum)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getSubUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getSubUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getSubUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getSubUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean getSubUIBoolean(java.lang.String,java.lang.String,boolean)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean getSubUIBoolean(java.lang.String,java.lang.String,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: int getSubUIInt(java.lang.String,java.lang.String,int)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: int getSubUIInt(java.lang.String,java.lang.String,int)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Insets getSubUIInsets(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Insets getSubUIInsets(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Insets getSubUIInsets(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Insets getSubUIInsets(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Dimension getSubUIDimension(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Dimension getSubUIDimension(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Dimension getSubUIDimension(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Dimension getSubUIDimension(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: javax.swing.Icon getSubUIIcon(java.lang.String,java.lang.String)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: javax.swing.Icon getSubUIIcon(java.lang.String,java.lang.String)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: javax.swing.Icon getSubUIIcon(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: javax.swing.Icon getSubUIIcon(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Font getSubUIFont(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Font getSubUIFont(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Font getSubUIFont(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Font getSubUIFont(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color nonUIResource(java.awt.Color)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean isCellEditor(java.awt.Component)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean isPermanentFocusOwner(java.awt.Component)> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean isPermanentFocusOwner(java.awt.Component)> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean isFullScreen(java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean isFullScreen(java.awt.Component)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: int getBorderFocusAndLineWidth(javax.swing.JComponent)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: int getBorderFocusAndLineWidth(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.lang.Object[] setRenderingHints(java.awt.Graphics)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void resetRenderingHints(java.awt.Graphics,java.lang.Object[])> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void resetRenderingHints(java.awt.Graphics,java.lang.Object[])> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void runWithoutRenderingHints(java.awt.Graphics,java.lang.Object[],java.lang.Runnable)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintOutline(java.awt.Graphics2D,float,float,float,float,float,float,float)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintOutline(java.awt.Graphics2D,float,float,float,float,float,float,float)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createComponentRectangle(float,float,float,float,float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createComponentRectangle(float,float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createComponentRectangle(float,float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintGrip(java.awt.Graphics,int,int,int,int,boolean,int,int,int,boolean)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintGrip(java.awt.Graphics,int,int,int,int,boolean,int,int,int,boolean)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintGrip(java.awt.Graphics,int,int,int,int,boolean,int,int,int,boolean)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintGrip(java.awt.Graphics,int,int,int,int,boolean,int,int,int,boolean)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintGrip(java.awt.Graphics,int,int,int,int,boolean,int,int,int,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintGrip(java.awt.Graphics,int,int,int,int,boolean,int,int,int,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getParentBackground(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getParentBackground(javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getParentBackground(javax.swing.JComponent)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Color getParentBackground(javax.swing.JComponent)> => <java.awt.SystemColor: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.geom.Path2D createRectangle(float,float,float,float,float)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.geom.Path2D createRectangle(float,float,float,float,float)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.geom.Path2D createRoundRectangle(float,float,float,float,float,float,float,float,float)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.geom.Path2D createRoundRectangle(float,float,float,float,float,float,float,float,float)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createRoundRectanglePath(float,float,float,float,float,float,float,float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createRoundRectanglePath(float,float,float,float,float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createRoundRectanglePath(float,float,float,float,float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createRoundRectanglePath(float,float,float,float,float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createRoundRectanglePath(float,float,float,float,float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createRoundRectanglePath(float,float,float,float,float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createRoundRectanglePath(float,float,float,float,float,float,float,float)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createRoundRectanglePath(float,float,float,float,float,float,float,float)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintArrow(java.awt.Graphics2D,int,int,int,int,int,boolean,int,float,float,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintArrow(java.awt.Graphics2D,int,int,int,int,int,boolean,int,float,float,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintArrow(java.awt.Graphics2D,int,int,int,int,int,boolean,int,float,float,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintArrow(java.awt.Graphics2D,int,int,int,int,int,boolean,int,float,float,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintArrow(java.awt.Graphics2D,int,int,int,int,int,boolean,int,float,float,float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintArrow(java.awt.Graphics2D,int,int,int,int,int,boolean,int,float,float,float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createArrowShape(int,boolean,float,float)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.Shape createArrowShape(int,boolean,float,float)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.geom.Path2D createPath(boolean,double[])> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.awt.geom.Path2D createPath(boolean,double[])> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void drawShapePure(java.awt.Graphics2D,java.awt.Shape)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean hasOpaqueBeenExplicitlySet(javax.swing.JComponent)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean hasOpaqueBeenExplicitlySet(javax.swing.JComponent)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean hasOpaqueBeenExplicitlySet(javax.swing.JComponent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean hasOpaqueBeenExplicitlySet(javax.swing.JComponent)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean hasOpaqueBeenExplicitlySet(javax.swing.JComponent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: javax.swing.plaf.ComponentUI createSharedUI(java.lang.Object,java.util.function.Supplier)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: javax.swing.plaf.ComponentUI createSharedUI(java.lang.Object,java.util.function.Supplier)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller$ArrowButton: void paint(java.awt.Graphics)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller$ArrowButton: void paint(java.awt.Graphics)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller$ArrowButton: void paint(java.awt.Graphics)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: javax.swing.text.View create(javax.swing.text.Element)> => <javax.swing.text.PasswordView: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: javax.swing.text.View create(javax.swing.text.Element)> => <javax.swing.text.View: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSeparatorUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSeparatorUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarSeparatorUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarSeparatorUI: java.awt.Dimension getMaximumSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarSeparatorUI: java.awt.Dimension getMaximumSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void install(javax.swing.text.JTextComponent)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void install(javax.swing.text.JTextComponent)> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void install(javax.swing.text.JTextComponent)> => <java.lang.System: long currentTimeMillis()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void install(javax.swing.text.JTextComponent)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void deinstall(javax.swing.text.JTextComponent)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void deinstall(javax.swing.text.JTextComponent)> => <java.lang.System: long currentTimeMillis()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mousePressed(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mousePressed(java.awt.event.MouseEvent)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mousePressed(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.text.Utilities: int getRowStart(javax.swing.text.JTextComponent,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.text.Utilities: int getWordStart(javax.swing.text.JTextComponent,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.text.Utilities: int getRowEnd(javax.swing.text.JTextComponent,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.text.Utilities: int getWordEnd(javax.swing.text.JTextComponent,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToggleButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$2: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$2: void layoutContainer(java.awt.Container)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$2: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$2: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI$FlatMenuBarLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI$FlatMenuBarLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI$FlatMenuBarLayout: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <javax.swing.plaf.basic.BasicInternalFrameTitlePane: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$1: java.awt.Dimension getPreferredSize()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void doLayout()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void doLayout()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void doLayout()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void doLayout()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void doLayout()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatOptionPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicOptionPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatEmptyBorder: java.awt.Insets getBorderInsets()> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatEmptyBorder: java.awt.Insets getStyleableValue()> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <init>(javax.swing.JRootPane)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <init>(javax.swing.JRootPane)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <init>(javax.swing.JRootPane)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <init>(javax.swing.JRootPane)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <init>(javax.swing.JRootPane)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <init>(javax.swing.JRootPane)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <init>(javax.swing.JRootPane)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <init>(javax.swing.JRootPane)> => <java.awt.Window$Type: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void addNotify()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void addNotify()> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void paint(java.awt.Graphics)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void paint(java.awt.Graphics)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void paint(java.awt.Graphics)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void paint(java.awt.Graphics)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void paint(java.awt.Graphics)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void paint(java.awt.Graphics)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPanelUI: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPanelUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPanelUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: void <init>()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: java.util.Map getStyleableInfos()> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI$FlatInternalFrameBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI: void installUI(javax.swing.JComponent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI: void installUI(javax.swing.JComponent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonMenuItemUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonMenuItemUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton: void <init>(int,java.lang.String,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.DefaultListCellRenderer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.JPopupMenu: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup$PopupListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.plaf.basic.BasicComboPopup: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatProgressBarUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicProgressBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatProgressBarUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatProgressBarUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatProgressBarUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatProgressBarUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatProgressBarUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatProgressBarUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.awt.geom.Area: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatProgressBarUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: java.awt.Component findFocusOwner(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutContainer(java.awt.Container)> => <java.awt.AWTEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFormattedTextFieldUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup: void show(java.awt.Component,int,int)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup: void show(java.awt.Component,int,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup: void show(java.awt.Component,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuBorder: java.lang.Object applyStyleProperty(java.lang.String,java.lang.Object)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder: void setNativeProvider(com.formdev.flatlaf.ui.FlatNativeWindowBorder$Provider)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder: void setNativeProvider(com.formdev.flatlaf.ui.FlatNativeWindowBorder$Provider)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder: void setNativeProvider(com.formdev.flatlaf.ui.FlatNativeWindowBorder$Provider)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI$AWTPeerMouseExitedFix: void mouseExited(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI$AWTPeerMouseExitedFix: void mouseExited(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.event.MouseEvent convertMouseEvent(java.awt.Component,java.awt.event.MouseEvent,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton: int getArrowWidth()> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton: float getArrowThickness()> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton: boolean isRoundBorderAutoXOffset()> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRoundBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRoundBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToolBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarUI: void setOrientation(int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseEntered(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseEntered(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseEntered(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseExited(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseExited(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseExited(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseReleased(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseReleased(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatArrowButton$1: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatMouseInputHandler: void mouseMoved(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatMouseInputHandler: void mouseMoved(java.awt.event.MouseEvent)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatMouseInputHandler: void mouseMoved(java.awt.event.MouseEvent)> => <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatMouseInputHandler: void mouseMoved(java.awt.event.MouseEvent)> => <java.awt.Cursor: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatMouseInputHandler: void mouseMoved(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils$1: void fillRect(int,int,int,int)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils$1: void fillRect(int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$EditorDelegateAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$EditorDelegateAction: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI$TakeFocusAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI$TakeFocusAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.metal.MetalFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void installComponents(javax.swing.JFileChooser)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void installComponents(javax.swing.JFileChooser)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: javax.swing.filechooser.FileView getFileView(javax.swing.JFileChooser)> => <javax.swing.plaf.metal.MetalFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: javax.swing.filechooser.FileView getFileView(javax.swing.JFileChooser)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void clearIconCache()> => <javax.swing.plaf.metal.MetalFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void clearIconCache()> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatOneTouchButton: int getDirection()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatOneTouchButton: int getDirection()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatOneTouchButton: java.lang.String getToolTipText(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatOneTouchButton: java.lang.String getToolTipText(java.awt.event.MouseEvent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatOneTouchButton: java.lang.String getToolTipText(java.awt.event.MouseEvent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatOneTouchButton: java.lang.String getToolTipText(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$ShortcutIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatScrollableTabButton: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatScrollableTabButton: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$1: void paint(java.awt.Graphics)> => <javax.swing.plaf.basic.BasicSplitPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: boolean isPermanentFocusOwner(javax.swing.JScrollPane)> => <javax.swing.SwingUtilities: boolean isDescendingFrom(java.awt.Component,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: boolean isPermanentFocusOwner(javax.swing.JScrollPane)> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: boolean isPermanentFocusOwner(javax.swing.JScrollPane)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: boolean isPermanentFocusOwner(javax.swing.JScrollPane)> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void mouseExited(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void mouseMoved(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatTableHeaderCellRendererPane: void <init>(com.formdev.flatlaf.ui.FlatTableHeaderUI)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatTableHeaderCellRendererPane: void <init>(com.formdev.flatlaf.ui.FlatTableHeaderUI)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatTableHeaderCellRendererPane: void <init>(com.formdev.flatlaf.ui.FlatTableHeaderUI)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatTableHeaderCellRendererPane: void paintComponent(java.awt.Graphics,java.awt.Component,java.awt.Container,int,int,int,int,boolean)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: int getBaseline(javax.swing.JComponent,int,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: int getBaseline(javax.swing.JComponent,int,int)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: int getBaseline(javax.swing.JComponent,int,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: int getBaseline(javax.swing.JComponent,int,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: java.awt.Dimension calcThumbSize(javax.swing.JSlider,java.awt.Dimension,int)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: java.awt.Dimension calcThumbSize(javax.swing.JSlider,java.awt.Dimension,int)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumb(java.awt.Graphics)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumb(java.awt.Graphics,javax.swing.JSlider,java.awt.Rectangle,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,int)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: java.awt.Shape createRoundThumbShape(float,float,float,float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: java.awt.Shape createRoundThumbShape(float,float,float,float)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: java.awt.Shape createDirectionalThumbShape(float,float,float,float,float)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: java.awt.Shape createDirectionalThumbShape(float,float,float,float,float)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void setThumbLocation(int,int)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void setThumbLocation(int,int)> => <java.lang.Math: double ceil(double)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void setThumbLocation(int,int)> => <javax.swing.SwingUtilities: java.awt.Rectangle computeUnion(int,int,int,int,java.awt.Rectangle)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void setThumbLocation(int,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void setThumbLocation(int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getPopup(java.awt.Component,java.awt.Component,int,int)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void update(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void paintCurrentValue(java.awt.Graphics,java.awt.Rectangle,boolean)> => <javax.swing.DefaultListCellRenderer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void paintCurrentValue(java.awt.Graphics,java.awt.Rectangle,boolean)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void paintCurrentValue(java.awt.Graphics,java.awt.Rectangle,boolean)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void paintCurrentValue(java.awt.Graphics,java.awt.Rectangle,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder$Selected: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder$Selected: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$3: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$3: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatKeySelectionManager: int selectionForKey(char,javax.swing.ComboBoxModel)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatKeySelectionManager: int selectionForKey(char,javax.swing.ComboBoxModel)> => <java.awt.EventQueue: long getMostRecentEventTime()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatKeySelectionManager: int selectionForKey(char,javax.swing.ComboBoxModel)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseDragged(java.awt.event.MouseEvent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void mouseDragged(java.awt.event.MouseEvent)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$2: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: int getArrowWidth()> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: int getArrowWidth()> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: int getArrowWidth()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: java.awt.Dimension getPreferredSize()> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: java.awt.Dimension getPreferredSize()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: java.awt.Dimension getMinimumSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: java.awt.Dimension getMaximumSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport$StyleableInfosMap: java.lang.Object put(java.lang.Object,java.lang.Object)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport$StyleableInfosMap: java.lang.Object put(java.lang.Object,java.lang.Object)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void update(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String,java.awt.Color)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Color buttonStateColor(java.awt.Component,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI$FlatTextFieldLayout: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$NonFlashingPopup: void show()> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$NonFlashingPopup: void show()> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$NonFlashingPopup: void show()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatWindowBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatWindowBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatWindowBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatWindowBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: void <init>(javax.swing.JFileChooser)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxMenuItemUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxMenuItemUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.util.Map getStyleableInfos(javax.swing.JComponent)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.lang.Object getStyleableValue(javax.swing.JComponent,java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.lang.Object getStyleableValue(javax.swing.JComponent,java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.lang.Object getStyleableValue(javax.swing.JComponent,java.lang.String)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.lang.Object getStyleableValue(javax.swing.JComponent,java.lang.String)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.lang.Boolean isTitleBarCaptionAt(int,int)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.lang.Boolean isTitleBarCaptionAt(int,int)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: void <init>(java.awt.Color,int,float)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: void <init>()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListUI$1: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListUI$1: void focusLost(java.awt.event.FocusEvent)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListUI$1: void focusLost(java.awt.event.FocusEvent)> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: java.awt.Dimension maximumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicMenuUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI: java.lang.invoke.MethodHandles$Lookup getLookupForStyling()> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>
Found compile-time invoke: <com.formdev.flatlaf.ui.MigLayoutVisualPadding: void install(javax.swing.JComponent)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextAreaUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$1: void updateUI()> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup publicLookup()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)> => <java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class[])>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)> => <java.lang.invoke.MethodType: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserShortcutPanelFiles(javax.swing.filechooser.FileSystemView)> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserShortcutPanelFiles(javax.swing.filechooser.FileSystemView)> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserShortcutPanelFiles(javax.swing.filechooser.FileSystemView)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserShortcutPanelFiles(javax.swing.filechooser.FileSystemView)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserShortcutPanelFiles(javax.swing.filechooser.FileSystemView)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserShortcutPanelFiles(javax.swing.filechooser.FileSystemView)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserShortcutPanelFiles(javax.swing.filechooser.FileSystemView)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserComboBoxFiles(javax.swing.filechooser.FileSystemView)> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserComboBoxFiles(javax.swing.filechooser.FileSystemView)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserComboBoxFiles(javax.swing.filechooser.FileSystemView)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.JavaCompatibility2: java.io.File[] getChooserComboBoxFiles(javax.swing.filechooser.FileSystemView)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$1: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatDividerLayout: void layoutContainer(java.awt.Container)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider$FlatDividerLayout: void layoutContainer(java.awt.Container)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopPaneUI$LayoutDockListener: void componentAdded(java.awt.event.ContainerEvent)> => <javax.swing.plaf.basic.BasicDesktopPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopPaneUI$LayoutDockListener: void componentRemoved(java.awt.event.ContainerEvent)> => <javax.swing.plaf.basic.BasicDesktopPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopPaneUI$LayoutDockListener: void componentResized(java.awt.event.ComponentEvent)> => <javax.swing.plaf.basic.BasicDesktopPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: java.awt.Rectangle getPathBounds(javax.swing.JTree,javax.swing.tree.TreePath)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: java.awt.Rectangle getPathBounds(javax.swing.JTree,javax.swing.tree.TreePath)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.util.HashSet: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI: boolean isPermanentFocusOwner(javax.swing.JSpinner)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI: void update(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI: void update(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarUI$1: void componentAdded(java.awt.event.ContainerEvent)> => <javax.swing.plaf.basic.BasicToolBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarUI$1: void componentRemoved(java.awt.event.ContainerEvent)> => <javax.swing.plaf.basic.BasicToolBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicSplitPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI: javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI: javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicInternalFrameTitlePane: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicInternalFrameTitlePane: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicInternalFrameTitlePane: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane$FlatPropertyChangeHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListCellBorder$Selected: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListCellBorder$Selected: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder: java.awt.Insets getBorderInsets(java.awt.Component,java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$CellPaddingBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: void paint(java.awt.Graphics)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: void paint(java.awt.Graphics)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JPopupMenu: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder$Focused: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder$Focused: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder$Focused: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder$Focused: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.Component getDeepestComponentAt(java.awt.Component,int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isRightMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI$FlatScrollPaneLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI$FlatScrollPaneLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI$FlatScrollPaneLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI$FlatScrollPaneLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatSelectedTabRepainter: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatSelectedTabRepainter: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicPopupMenuUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: javax.swing.Popup getPopup(javax.swing.JPopupMenu,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: javax.swing.Popup getPopup(javax.swing.JPopupMenu,int,int)> => <javax.swing.PopupFactory: javax.swing.PopupFactory getSharedInstance()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: javax.swing.Popup getPopup(javax.swing.JPopupMenu,int,int)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: javax.swing.Popup getPopup(javax.swing.JPopupMenu,int,int)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: javax.swing.Popup getPopup(javax.swing.JPopupMenu,int,int)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: javax.swing.Popup getPopup(javax.swing.JPopupMenu,int,int)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$6: java.awt.Dimension getMinimumSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextPaneUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextPaneUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport$1: void componentResized(java.awt.event.ComponentEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport$1: void componentResized(java.awt.event.ComponentEvent)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer$MinSizeIcon: int getIconWidth()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer$MinSizeIcon: int getIconWidth()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer$MinSizeIcon: int getIconWidth()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer$MinSizeIcon: int getIconHeight()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer$MinSizeIcon: int getIconHeight()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: void installUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$ContainerUIResource: void reshape(int,int,int,int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI: void installUI(javax.swing.JComponent)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI: void installUI(javax.swing.JComponent)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameUI: void installUI(javax.swing.JComponent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport$UnknownStyleException: java.lang.String getMessage()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <javax.swing.SwingUtilities: java.awt.Component getDeepestComponentAt(java.awt.Component,int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void mouseWheelMoved(java.awt.event.MouseWheelEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void menuKeyPressed(javax.swing.event.MenuKeyEvent)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void menuKeyPressed(javax.swing.event.MenuKeyEvent)> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void layoutContainer(java.awt.Container)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void layoutContainer(java.awt.Container)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void layoutContainer(java.awt.Container)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatEditorPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatEditorPaneUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatEditorPaneUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI$1: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI$1: void focusLost(java.awt.event.FocusEvent)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI$1: void focusLost(java.awt.event.FocusEvent)> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$4: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$4: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$4: java.awt.Dimension getPreferredSize()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void stateChanged(javax.swing.event.ChangeEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$RunWithOriginalLayoutManagerDelegateAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneBorder: int getLeftRightPadding(java.awt.Component)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneBorder: int getLeftRightPadding(java.awt.Component)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneBorder: int getLeftRightPadding(java.awt.Component)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicDesktopPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object joinStyles(java.lang.Object,java.lang.Object)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.String concatStyles(java.lang.String,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.util.Map parse(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.util.Map parse(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.util.Map parse(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.util.Map parse(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.util.Map parse(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.util.Map parse(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: void collectAnnotatedStyleableInfos(java.lang.Object,java.util.Map)> => <java.util.HashSet: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: void collectAnnotatedStyleableInfos(java.lang.Object,java.util.Map)> => <java.lang.Character: char toLowerCase(char)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: void collectAnnotatedStyleableInfos(java.lang.Object,java.util.Map)> => <java.lang.Character: boolean isUpperCase(char)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: void collectAnnotatedStyleableInfos(java.lang.Object,java.util.Map)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: void collectAnnotatedStyleableInfos(java.lang.Object,java.util.Map)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object getAnnotatedStyleableValue(java.lang.Object,java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object getAnnotatedStyleableValue(java.lang.Object,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object getAnnotatedStyleableValue(java.lang.Object,java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object getAnnotatedStyleableValue(java.lang.Object,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatColorChooserUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicColorChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$3: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$3: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$3: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$3: void layoutContainer(java.awt.Container)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$3: void layoutContainer(java.awt.Container)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$3: void layoutContainer(java.awt.Container)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$3: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$3: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$3: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void show()> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI: void paintViewport(java.awt.Graphics,javax.swing.JComponent,javax.swing.JViewport)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI: void paintViewport(java.awt.Graphics,javax.swing.JComponent,javax.swing.JViewport)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI: void paintViewport(java.awt.Graphics,javax.swing.JComponent,javax.swing.JViewport)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeCollapsedIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeCollapsedIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewFileIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewFileIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatAscendingSortIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatAscendingSortIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatAscendingSortIcon: void <init>()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatMenuArrowIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatMenuArrowIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatMenuArrowIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatMenuArrowIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatMenuArrowIcon: void <init>()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatClearIcon: void <init>(boolean)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatClearIcon: void <init>(boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatClearIcon: void <init>(boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatClearIcon: void <init>(boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserListViewIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserListViewIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewHardDriveIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewHardDriveIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: void <init>()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: void <init>()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCapsLockIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCapsLockIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCapsLockIcon: java.lang.Object applyStyleProperty(java.lang.String,java.lang.Object)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserDetailsViewIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserDetailsViewIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatSearchIcon: void <init>(boolean)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatSearchIcon: void <init>(boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatSearchIcon: void <init>(boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatSearchIcon: void <init>(boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewDirectoryIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewDirectoryIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeExpandedIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeExpandedIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatRevealIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatRevealIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserNewFolderIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserNewFolderIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserNewFolderIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewFloppyDriveIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewFloppyDriveIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeLeafIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeLeafIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewComputerIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewComputerIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeClosedIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeClosedIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserUpFolderIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserUpFolderIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserUpFolderIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameAbstractIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameAbstractIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameAbstractIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameAbstractIcon: void <init>()> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon: void <init>()> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserHomeFolderIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserHomeFolderIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeOpenIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeOpenIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$ActiveFont: java.lang.Object createValue(javax.swing.UIDefaults)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$ActiveFont: java.lang.Object createValue(javax.swing.UIDefaults)> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$ActiveFont: java.lang.Object createValue(javax.swing.UIDefaults)> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$ActiveFont: java.lang.Object createValue(javax.swing.UIDefaults)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$ActiveFont: java.lang.Object createValue(javax.swing.UIDefaults)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void stateChanged(javax.swing.event.ChangeEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void stateChanged(javax.swing.event.ChangeEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <META-INF.versions.9.com.formdev.flatlaf.util.LoggingFacadeImpl: void logSevere(java.lang.String,java.lang.Throwable)> => <java.lang.System$Logger$Level: void <clinit>()>
Found compile-time invoke: <META-INF.versions.9.com.formdev.flatlaf.util.LoggingFacadeImpl: void logConfig(java.lang.String,java.lang.Throwable)> => <java.lang.System$Logger$Level: void <clinit>()>
Found compile-time invoke: <META-INF.versions.9.com.formdev.flatlaf.util.MultiResolutionImageSupport$MappedMultiResolutionImage: java.util.List getResolutionVariants()> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <META-INF.versions.9.com.formdev.flatlaf.util.MultiResolutionImageSupport: java.awt.Image create(int,java.awt.Image[])> => <java.awt.Image: void <clinit>()>
Found compile-time invoke: <META-INF.versions.9.com.formdev.flatlaf.util.MultiResolutionImageSupport: java.util.List getResolutionVariants(java.awt.Image)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <META-INF.versions.9.com.formdev.flatlaf.util.MultiResolutionImageSupport: java.util.List getResolutionVariants(java.awt.Image)> => <java.util.Collections: java.util.List singletonList(java.lang.Object)>
Found compile-time invoke: <META-INF.versions.9.com.formdev.flatlaf.util.MultiResolutionImageSupport$ProducerMultiResolutionImage: java.awt.Image getResolutionVariant(double,double)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <META-INF.versions.9.com.formdev.flatlaf.util.MultiResolutionImageSupport$ProducerMultiResolutionImage: java.util.List getResolutionVariants()> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <clinit>()> => <java.util.HashSet: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <clinit>()> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <clinit>()> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <clinit>()> => <java.util.Arrays: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void <clinit>()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.Boolean: boolean getBoolean(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.System: java.lang.String getenv(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.SystemInfo: void <clinit>()> => <java.util.Locale: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: float getCustomScaleFactor()> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: float getCustomScaleFactor()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void initialize()> => <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void initialize()> => <javax.swing.UIManager: javax.swing.UIDefaults getDefaults()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void initialize()> => <javax.swing.UIManager: void addPropertyChangeListener(java.beans.PropertyChangeListener)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void initialize()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.LoggingFacadeImpl: void <clinit>()> => <java.util.logging.Logger: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.LoggingFacadeImpl: void <clinit>()> => <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.lang.System: void load(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.nio.file.Files: long copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption[])>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.lang.System: void load(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.nio.file.Files: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.nio.file.StandardCopyOption: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromJar(java.lang.String,java.lang.ClassLoader)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: float gammaCorrection(float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ColorFunctions: float gammaCorrection(float)> => <java.lang.Math: double pow(double,double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: float correctionForScaleY(java.awt.Graphics2D,float[])> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: float getUserScaleFactor()> => <java.lang.Float: float parseFloat(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: float getUserScaleFactor()> => <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: float getUserScaleFactor()> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: float getUserScaleFactor()> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: boolean useTextYCorrection()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: boolean useTextYCorrection()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatPropertiesLaf: java.util.Properties loadProperties(java.io.InputStream)> => <java.util.Properties: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: boolean install()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: boolean install()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void uninstall()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void uninstall()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.lang.Class,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.io.FileInputStream: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.net.URL: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void loadDefaultsFromProperties(java.util.List,java.util.List,java.util.Properties,boolean,javax.swing.UIDefaults)> => <java.util.Properties: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.util.Locale: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class,com.formdev.flatlaf.UIDefaultsLoader$ValueType[],java.util.function.Function,java.util.List)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValueFromUIManager(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <javax.swing.JLayeredPane: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean isShowMnemonics()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean isShowMnemonics()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void showMnemonics(boolean,java.awt.Component)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void showMnemonics(boolean,java.awt.Component)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void showMnemonics(boolean,java.awt.Component)> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void showMnemonics(boolean,java.awt.Component)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void showMnemonics(boolean,java.awt.Component)> => <java.lang.ref.Reference: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void showMnemonics(boolean,java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void <clinit>()> => <java.util.WeakHashMap: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.lang.String buildSubKey(java.lang.String,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean isInActiveWindow(java.awt.Component,java.awt.Window)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean isInActiveWindow(java.awt.Component,java.awt.Window)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: boolean isInActiveWindow(java.awt.Component,java.awt.Window)> => <java.awt.Window$Type: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintOutlinedComponentImpl(java.awt.Graphics2D,int,int,int,int,float,float,float,float,float,java.awt.Paint,java.awt.Paint,java.awt.Paint)> => <java.lang.Math: float max(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void paintOutlinedComponentImpl(java.awt.Graphics2D,int,int,int,int,float,float,float,float,float,java.awt.Paint,java.awt.Paint,java.awt.Paint)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: double distance(double,double,double,double)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: double distance(double,double,double,double)> => <java.lang.Math: double sqrt(double)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void <clinit>()> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void <clinit>()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void <clinit>()> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: void <clinit>()> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void <clinit>()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void <clinit>()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: void updateHTMLRenderer(javax.swing.JComponent,java.lang.String,boolean)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: void updateHTMLRenderer(javax.swing.JComponent,java.lang.String,boolean)> => <javax.swing.plaf.basic.BasicHTML: void updateRenderer(javax.swing.JComponent,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: void updateHTMLRenderer(javax.swing.JComponent,java.lang.String,boolean)> => <javax.swing.plaf.basic.BasicHTML: boolean isHTMLString(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: void updateHTMLRenderer(javax.swing.JComponent,java.lang.String,boolean)> => <java.util.Locale: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: void updateHTMLRenderer(javax.swing.JComponent,java.lang.String,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: void updateHTMLRenderer(javax.swing.JComponent,java.lang.String,boolean)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void <clinit>()> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void registerPlaceholder(javax.swing.JComponent)> => <java.lang.ref.Reference: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: java.awt.Dimension getPlaceholderPreferredSize(javax.swing.JComponent,java.lang.String)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: java.awt.Dimension getPlaceholderPreferredSize(javax.swing.JComponent,java.lang.String)> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: java.awt.Dimension getPlaceholderPreferredSize(javax.swing.JComponent,java.lang.String)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: java.awt.Dimension getPlaceholderPreferredSize(javax.swing.JComponent,java.lang.String)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: java.awt.Dimension getPlaceholderPreferredSize(javax.swing.JComponent,java.lang.String)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: java.awt.Dimension getPlaceholderPreferredSize(javax.swing.JComponent,java.lang.String)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void debugPaint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void debugPaint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void debugPaint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void debugPaint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void debugPaint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void debugPaint(java.awt.Graphics,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void debugPaint(java.awt.Graphics,javax.swing.JComponent)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI: void fixDraggedAndResizingColumns(javax.swing.table.JTableHeader)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI: void fixDraggedAndResizingColumns(javax.swing.table.JTableHeader)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void <clinit>()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder: void initialize()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder: void initialize()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void runWithLightAWTPeerUIDefaults(java.lang.Runnable)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: void runWithLightAWTPeerUIDefaults(java.lang.Runnable)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.MigLayoutVisualPadding: void <clinit>()> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.MigLayoutVisualPadding: void <clinit>()> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.MigLayoutVisualPadding: void <clinit>()> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI: boolean access$100()> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI: boolean access$102(boolean)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder: java.lang.Object getStyleFromTableUI(java.awt.Component,java.util.function.Function)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder: java.lang.Object getStyleFromTableUI(java.awt.Component,java.util.function.Function)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <java.lang.Math: double toRadians(double)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <java.lang.Math: double toRadians(double)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void paintThumbImpl(java.awt.Graphics,javax.swing.JSlider,int,int,int,int,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean overlapsHeavyWeightComponent(java.awt.Component,java.awt.Component,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean overlapsHeavyWeightComponent(java.awt.Component,java.awt.Component,int,int)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean overlapsHeavyWeightComponent(java.awt.Component,java.awt.Component,int,int)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean overlapsHeavyWeightComponent(java.awt.Component,java.awt.Component,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: void setupRoundedBorder(java.awt.Window,java.awt.Component,java.awt.Component)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: void setupRoundedBorder(java.awt.Window,java.awt.Component,java.awt.Component)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: void setupRoundedBorder(java.awt.Window,java.awt.Component,java.awt.Component)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: int getBorderCornerRadius(java.awt.Component,java.awt.Component)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean isOptionEnabled(java.awt.Component,java.awt.Component,java.lang.String,java.lang.String)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: void fixLinuxWaylandJava21focusIssue(java.awt.Component)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: void fixLinuxWaylandJava21focusIssue(java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: boolean isToolBarButton(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToggleButtonUI: boolean isTabButton(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: boolean isHelpButton(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: boolean isBorderlessButton(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: boolean isIconOnlyOrSingleCharacterButton(java.awt.Component)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: boolean isIconOnlyOrSingleCharacterButton(java.awt.Component)> => <java.lang.Character: boolean isSurrogatePair(char,char)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics,int,int)> => <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics,int,int)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: int getBaselineImpl(javax.swing.JComponent,int,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: int getBaselineImpl(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicHTML: int getHTMLBaseline(javax.swing.text.View,int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: int getBaselineImpl(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: void access$000(javax.swing.Popup,java.awt.Window)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: java.awt.Insets nonNegativeInsets(java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: java.awt.Insets nonNegativeInsets(java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: java.awt.Insets nonNegativeInsets(java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: java.awt.Insets nonNegativeInsets(java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: java.awt.Insets nonNegativeInsets(java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: java.awt.Insets nonNegativeInsets(java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowsLibrary: void <clinit>()> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.MigLayoutVisualPadding: void setVisualPadding(javax.swing.JComponent,java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListCellBorder: java.lang.Object getStyleFromListUI(java.awt.Component,java.util.function.Function)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListCellBorder: java.lang.Object getStyleFromListUI(java.awt.Component,java.util.function.Function)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowsNativeWindowBorder: java.awt.Rectangle cloneRectange(java.awt.Rectangle)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatEditorPaneUI: java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension,int,java.awt.Insets)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatEditorPaneUI: java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension,int,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatEditorPaneUI: java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension,int,java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void macUpdateFullWindowContentButtonsBoundsProperty(javax.swing.JRootPane)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void macUpdateFullWindowContentButtonsBoundsProperty(javax.swing.JRootPane)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void macUpdateFullWindowContentButtonsBoundsProperty(javax.swing.JRootPane)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void revalidatePlaceholders(java.awt.Component)> => <javax.swing.SwingUtilities: boolean isDescendingFrom(java.awt.Component,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FullWindowContentSupport: void revalidatePlaceholders(java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI: javax.swing.JTextField access$1100(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object getStyleForClass(java.lang.String,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object getStyleForClass(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object getStyleForClass(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object getStyleForClass(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object parseValue(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object parseValue(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.String keyToFieldName(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.String keyToFieldName(java.lang.String)> => <java.lang.Character: char toUpperCase(char)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.String keyToFieldName(java.lang.String)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object applyToField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object,java.util.function.Predicate)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object applyToField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object,java.util.function.Predicate)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object applyToProperty(java.lang.Object,java.lang.String,java.lang.Object)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object applyToProperty(java.lang.Object,java.lang.String,java.lang.Object)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object applyToProperty(java.lang.Object,java.lang.String,java.lang.Object)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object applyToProperty(java.lang.Object,java.lang.String,java.lang.Object)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object applyToProperty(java.lang.Object,java.lang.String,java.lang.Object)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.reflect.Field getStyleableField(com.formdev.flatlaf.ui.FlatStylingSupport$StyleableField)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.reflect.Field getStyleableField(com.formdev.flatlaf.ui.FlatStylingSupport$StyleableField)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: java.awt.Color getUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: java.awt.Color getUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: java.awt.Color getUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: java.awt.Color getUIColor(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lazyUIManagerGet(java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lazyUIManagerGet(java.lang.String)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lazyUIManagerGet(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: float parseScaleFactor(java.lang.String)> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: float parseScaleFactor(java.lang.String)> => <java.lang.Float: float parseFloat(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void updateScaleFactor()> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void updateScaleFactor()> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void updateScaleFactor()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: void deleteOrMarkForDeletion(java.io.File)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: void deleteOrMarkForDeletion(java.io.File)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path createTempFile(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path createTempFile(java.lang.String)> => <java.nio.file.Files: java.nio.file.Path createFile(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path createTempFile(java.lang.String)> => <java.lang.Long: java.lang.String toUnsignedString(long)>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path createTempFile(java.lang.String)> => <java.lang.System: long nanoTime()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path createTempFile(java.lang.String)> => <java.nio.file.Files: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path createTempFile(java.lang.String)> => <java.lang.Long: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path createTempFile(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path createTempFile(java.lang.String)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.lang.String decorateLibraryName(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.lang.String decorateLibraryName(java.lang.String)> => <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.lang.String decorateLibraryName(java.lang.String)> => <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.lang.String decorateLibraryName(java.lang.String)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.lang.String decorateLibraryName(java.lang.String)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: double normalize(double)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: double normalize(double)> => <java.lang.Math: double floor(double)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: boolean useDebugScaleFactor()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.util.HiDPIUtils: boolean useDebugScaleFactor()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: void logParseError(java.lang.String,java.lang.String,java.lang.RuntimeException,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValue(java.lang.String,java.util.function.Function)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValue(java.lang.String,java.util.function.Function)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValue(java.lang.String,java.util.function.Function)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.String resolveValue(java.lang.String,java.util.function.Function)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatInputMaps: void initBasicInputMaps(javax.swing.UIDefaults)> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found compile-time invoke: <com.formdev.flatlaf.FlatInputMaps: void initBasicInputMaps(javax.swing.UIDefaults)> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found compile-time invoke: <com.formdev.flatlaf.FlatInputMaps: void initBasicInputMaps(javax.swing.UIDefaults)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Float parseFloat(java.lang.String)> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Float parseFloat(java.lang.String)> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Float parseFloat(java.lang.String)> => <java.lang.Float: float parseFloat(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Float parseFloat(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Float parseFloat(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Integer parseInteger(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Integer parseInteger(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Integer parseInteger(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Integer parseInteger(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Integer parseInteger(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseGrayFilter(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseGrayFilter(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseGrayFilter(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseGrayFilter(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseGrayFilter(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseGrayFilter(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.util.Collections: java.util.List singletonList(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.Character: boolean isDigit(char)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFont(java.lang.String)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Dimension parseDimension(java.lang.String)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Dimension parseDimension(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Dimension parseDimension(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Dimension parseDimension(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Dimension parseDimension(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Dimension parseDimension(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Insets parseInsets(java.lang.String)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Insets parseInsets(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Insets parseInsets(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Insets parseInsets(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Insets parseInsets(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Insets parseInsets(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Insets parseInsets(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.awt.Insets parseInsets(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Number parseIntegerOrFloat(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Number parseIntegerOrFloat(java.lang.String)> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Number parseIntegerOrFloat(java.lang.String)> => <java.lang.Float: float parseFloat(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Number parseIntegerOrFloat(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Number parseIntegerOrFloat(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Number parseIntegerOrFloat(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Number parseIntegerOrFloat(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Number parseIntegerOrFloat(java.lang.String)> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Character parseCharacter(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Character parseCharacter(java.lang.String)> => <java.lang.Character: java.lang.Character valueOf(char)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Character parseCharacter(java.lang.String)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Character parseCharacter(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Boolean parseBoolean(java.lang.String)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Boolean parseBoolean(java.lang.String)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Boolean parseBoolean(java.lang.String)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Boolean parseBoolean(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Boolean parseBoolean(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Boolean parseBoolean(java.lang.String)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: boolean parseCondition(java.lang.String,java.util.function.Function,java.util.List)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: boolean parseCondition(java.lang.String,java.util.function.Function,java.util.List)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: boolean parseCondition(java.lang.String,java.util.function.Function,java.util.List)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: boolean parseCondition(java.lang.String,java.util.function.Function,java.util.List)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.IllegalArgumentException newMissingParametersException(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.IllegalArgumentException newMissingParametersException(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.util.List splitFunctionParams(java.lang.String,char)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: boolean needsFontBaseSize(java.lang.String)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: boolean needsFontBaseSize(java.lang.String)> => <java.lang.Character: boolean isLetterOrDigit(char)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: boolean needsFontBaseSize(java.lang.String)> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: boolean needsFontBaseSize(java.lang.String)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: boolean needsFontBaseSize(java.lang.String)> => <java.util.Locale: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: boolean needsFontBaseSize(java.lang.String)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: boolean needsFontBaseSize(java.lang.String)> => <java.util.Arrays: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: boolean needsFontBaseSize(java.lang.String)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: boolean needsFontBaseSize(java.lang.String)> => <java.util.HashSet: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: void initialize(int)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean overlapsHeavyWeightComponent(java.awt.Component,java.awt.Rectangle)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean overlapsHeavyWeightComponent(java.awt.Component,java.awt.Rectangle)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: float getRoundedBorderWidth(java.awt.Component,java.awt.Component)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: java.lang.Object getOption(java.awt.Component,java.awt.Component,java.lang.String,java.lang.String)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: java.lang.Object getOption(java.awt.Component,java.awt.Component,java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: java.lang.Object getOption(java.awt.Component,java.awt.Component,java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean isXWindowSystem()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean isXWindowSystem()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean isXWindowSystem()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean isXWindowSystem()> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <javax.swing.JFrame: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <javax.swing.JDialog: boolean isDefaultLookAndFeelDecorated()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <javax.swing.JFrame: boolean isDefaultLookAndFeelDecorated()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <java.awt.Window: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <java.awt.Dialog: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <javax.swing.JDialog: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <java.awt.Window: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: boolean hasCustomDecoration(java.awt.Window)> => <java.awt.Frame: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: java.awt.Point scale(java.awt.Window,java.awt.Point)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: java.awt.Point scale(java.awt.Window,java.awt.Point)> => <java.lang.Math: long round(double)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLinuxLibrary: java.awt.Point scale(java.awt.Window,java.awt.Point)> => <java.lang.Math: long round(double)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: boolean hasDefaultMargins(javax.swing.JComponent,java.awt.Insets)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object convertToEnum(java.lang.Object,java.lang.Class)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object convertToEnum(java.lang.Object,java.lang.Class)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.Object convertToEnum(java.lang.Object,java.lang.Class)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.String buildMethodName(java.lang.String,java.lang.String)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.String buildMethodName(java.lang.String,java.lang.String)> => <java.lang.Character: char toUpperCase(char)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.String buildMethodName(java.lang.String,java.lang.String)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: void checkValidField(java.lang.reflect.Field)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: void checkValidField(java.lang.reflect.Field)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.IllegalArgumentException newFieldAccessFailed(java.lang.reflect.Field,java.lang.Throwable)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatStylingSupport: java.lang.IllegalArgumentException newFieldAccessFailed(java.lang.reflect.Field,java.lang.Throwable)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: java.lang.String styleKey(java.lang.String,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void setUserScaleFactor(float,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void setUserScaleFactor(float,boolean)> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void setUserScaleFactor(float,boolean)> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void setUserScaleFactor(float,boolean)> => <java.lang.Math: float max(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void setUserScaleFactor(float,boolean)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void setUserScaleFactor(float,boolean)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void setUserScaleFactor(float,boolean)> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void setUserScaleFactor(float,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.UIScale: void setUserScaleFactor(float,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path getTempDir()> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path getTempDir()> => <java.nio.file.Files: java.nio.file.Path createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute[])>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path getTempDir()> => <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path getTempDir()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path getTempDir()> => <java.nio.file.Files: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path getTempDir()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: java.nio.file.Path getTempDir()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: javax.swing.plaf.ColorUIResource parseColor(java.lang.String)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: javax.swing.plaf.ColorUIResource parseColor(java.lang.String)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseColorFunctions(java.lang.String,java.util.function.Function)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseColorFunctions(java.lang.String,java.util.function.Function)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseColorFunctions(java.lang.String,java.util.function.Function)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseColorFunctions(java.lang.String,java.util.function.Function)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseColorFunctions(java.lang.String,java.util.function.Function)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseColorFunctions(java.lang.String,java.util.function.Function)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: com.formdev.flatlaf.util.NativeLibrary createNativeLibrary(java.lang.String,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: com.formdev.flatlaf.util.NativeLibrary createNativeLibrary(java.lang.String,java.lang.String)> => <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: com.formdev.flatlaf.util.NativeLibrary createNativeLibrary(java.lang.String,java.lang.String)> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: com.formdev.flatlaf.util.NativeLibrary createNativeLibrary(java.lang.String,java.lang.String)> => <java.lang.System: java.lang.String mapLibraryName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: com.formdev.flatlaf.util.NativeLibrary createNativeLibrary(java.lang.String,java.lang.String)> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: com.formdev.flatlaf.util.NativeLibrary createNativeLibrary(java.lang.String,java.lang.String)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: com.formdev.flatlaf.util.NativeLibrary createNativeLibrary(java.lang.String,java.lang.String)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: void loadJAWT()> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: void loadJAWT()> => <java.lang.System: void loadLibrary(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: void deleteTemporaryFiles(java.nio.file.Path)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: javax.swing.plaf.ColorUIResource parseColorOver(java.util.List,java.util.function.Function)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: javax.swing.plaf.ColorUIResource parseColorHslOrHsla(boolean,java.util.List)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: javax.swing.plaf.ColorUIResource parseColorRgbOrRgba(boolean,java.util.List,java.util.function.Function)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: javax.swing.plaf.ColorUIResource parseColorRgbOrRgba(boolean,java.util.List,java.util.function.Function)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: javax.swing.plaf.ColorUIResource parseColorRgbOrRgba(boolean,java.util.List,java.util.function.Function)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseColorIf(java.lang.String,java.util.List,java.util.function.Function)> => <java.util.Collections: java.util.List emptyList()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseColorIf(java.lang.String,java.util.List,java.util.function.Function)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: java.io.File findLibraryBesideJar(java.lang.String,java.lang.String)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: java.io.File findLibraryBesideJar(java.lang.String,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: java.lang.String buildLibraryName(java.io.File,java.lang.String,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeLibrary: java.io.File getJarFile()> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.IllegalArgumentException newInvalidColorException(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.IllegalArgumentException newInvalidColorException(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: int parsePercentage(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: int parsePercentage(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: int parsePercentage(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: int parsePercentage(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: int parsePercentage(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: int parsePercentage(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: int parsePercentage(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: int parsePercentage(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFunctionBaseColor(java.lang.String,com.formdev.flatlaf.util.ColorFunctions$ColorFunction,boolean,java.util.function.Function)> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFunctionBaseColor(java.lang.String,com.formdev.flatlaf.util.ColorFunctions$ColorFunction,boolean,java.util.function.Function)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFunctionBaseColor(java.lang.String,com.formdev.flatlaf.util.ColorFunctions$ColorFunction,boolean,java.util.function.Function)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseFunctionBaseColor(java.lang.String,com.formdev.flatlaf.util.ColorFunctions$ColorFunction,boolean,java.util.function.Function)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Integer parseInteger(java.lang.String,int,int,boolean)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Integer parseInteger(java.lang.String,int,int,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Integer parseInteger(java.lang.String,int,int,boolean)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Integer parseInteger(java.lang.String,int,int,boolean)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: javax.swing.plaf.ColorUIResource getSystemColor(java.lang.String)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePaneIcon: java.awt.Image getResolutionVariant(int,int)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: java.awt.image.BufferedImage image2bufferedImage(java.awt.Image)> => <java.awt.image.BufferedImage: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: java.awt.image.BufferedImage image2bufferedImage(java.awt.Image)> => <java.awt.Image: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: java.awt.image.BufferedImage scaleImage(java.awt.image.BufferedImage,int,int,java.lang.Object)> => <java.awt.image.BufferedImage: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: java.awt.image.BufferedImage scaleImage(java.awt.image.BufferedImage,int,int,java.lang.Object)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.ScaledImageIcon: java.awt.image.BufferedImage scaleImage(java.awt.image.BufferedImage,int,int,java.lang.Object)> => <java.awt.Image: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.Animator: void throwExceptionIfRunning()> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.awt.Image lambda$getDisabledIcon$0(java.awt.image.ImageFilter,java.awt.Image)> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.awt.Image lambda$getDisabledIcon$0(java.awt.image.ImageFilter,java.awt.Image)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatUIUtils: java.util.IdentityHashMap lambda$createSharedUI$3(javax.swing.LookAndFeel)> => <java.util.IdentityHashMap: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.MigLayoutVisualPadding: java.awt.Insets lambda$install$0(javax.swing.JComponent)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromFile(java.io.File)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromFile(java.io.File)> => <java.lang.System: void load(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromSystem(java.lang.String)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.NativeLibrary: boolean loadLibraryFromSystem(java.lang.String)> => <java.lang.System: void loadLibrary(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$lambda_paintThumb_1__34: void paint(java.awt.Graphics2D,int,int,int,int,double)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: void lambda$paintThumb$1(java.awt.Graphics,javax.swing.JSlider,boolean,java.awt.Color,java.awt.Color,java.awt.Color,float,int,java.awt.Graphics2D,int,int,int,int,double)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initializeAqua()> => <javax.swing.PopupFactory: void setSharedInstance(javax.swing.PopupFactory)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initializeAqua()> => <javax.swing.PopupFactory: javax.swing.PopupFactory getSharedInstance()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initializeAqua()> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initializeAqua()> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initializeAqua()> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initializeAqua()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initializeAqua()> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initializeAqua()> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void install()> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void install()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void install()> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void install()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void uninstall()> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void uninstall()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void uninstall()> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: void uninstall()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initResourceBundle(javax.swing.UIDefaults,java.lang.String)> => <java.util.ResourceBundle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initResourceBundle(javax.swing.UIDefaults,java.lang.String)> => <java.lang.Integer: java.lang.String toString(int)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initResourceBundle(javax.swing.UIDefaults,java.lang.String)> => <java.lang.Character: char toUpperCase(char)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initResourceBundle(javax.swing.UIDefaults,java.lang.String)> => <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initResourceBundle(javax.swing.UIDefaults,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initResourceBundle(javax.swing.UIDefaults,java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initResourceBundle(javax.swing.UIDefaults,java.lang.String)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initFonts(javax.swing.UIDefaults)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatPropertiesLaf: java.util.ArrayList getLafClassesForDefaultsLoading()> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatPropertiesLaf: java.util.ArrayList getLafClassesForDefaultsLoading()> => <java.util.Locale: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme$ThemeLaf: java.util.ArrayList getLafClassesForDefaultsLoading()> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.util.Properties getAdditionalDefaults()> => <java.util.Properties: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initDefaultFont(javax.swing.UIDefaults)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initDefaultFont(javax.swing.UIDefaults)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initDefaultFont(javax.swing.UIDefaults)> => <java.awt.Font: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void initDefaultFont(javax.swing.UIDefaults)> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void putAATextInfo(javax.swing.UIDefaults)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.plaf.FontUIResource createCompositeFont(java.lang.String,int,int)> => <javax.swing.text.StyleContext: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.plaf.FontUIResource createCompositeFont(java.lang.String,int,int)> => <javax.swing.text.StyleContext: javax.swing.text.StyleContext getDefaultStyleContext()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: javax.swing.plaf.FontUIResource createCompositeFont(java.lang.String,int,int)> => <java.awt.Font: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$2(javax.swing.UIDefaults)> => <javax.swing.text.html.HTMLEditorKit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$2(javax.swing.UIDefaults)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$2(javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$2(javax.swing.UIDefaults)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$2(javax.swing.UIDefaults)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$2(javax.swing.UIDefaults)> => <javax.swing.text.DefaultEditorKit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$2(javax.swing.UIDefaults)> => <javax.swing.text.StyledEditorKit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.lang.Double: double parseDouble(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.lang.Character: boolean isDigit(char)>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.util.Locale: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.lang.Double: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getGnomeFont()> => <java.util.Locale: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getKDEFont()> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getKDEFont()> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getKDEFont()> => <java.lang.Integer: int parseInt(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getKDEFont()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getKDEFont()> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font getKDEFont()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font createFontEx(java.lang.String,int,int,double)> => <javax.swing.text.StyleContext: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font createFontEx(java.lang.String,int,int,double)> => <javax.swing.text.StyleContext: javax.swing.text.StyleContext getDefaultStyleContext()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.awt.Font createFontEx(java.lang.String,int,int,double)> => <java.util.Locale: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: double getGnomeFontScale()> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: double getGnomeFontScale()> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: double getGnomeFontScale()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: boolean isSystemScaling()> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: boolean isSystemScaling()> => <java.awt.GraphicsEnvironment: boolean isHeadless()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.io.File: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.util.Collections: java.util.List emptyList()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.nio.charset.StandardCharsets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.io.FileInputStream: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.io.BufferedReader: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.LinuxFontPolicy: java.util.List readConfig(java.lang.String)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseColorHSLIncreaseDecrease$7(java.lang.String,com.formdev.flatlaf.util.ColorFunctions$ColorFunction,javax.swing.UIDefaults)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseClass$6(java.lang.String,java.util.List,javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseInstance$5(java.lang.String,java.util.List,java.util.function.Function,javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseInstance$5(java.lang.String,java.util.List,java.util.function.Function,javax.swing.UIDefaults)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseInstance$5(java.lang.String,java.util.List,java.util.function.Function,javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseColorFade$8(java.lang.String,com.formdev.flatlaf.util.ColorFunctions$ColorFunction,javax.swing.UIDefaults)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseScaledInteger$9(int,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseScaledInteger$9(int,javax.swing.UIDefaults)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object lambda$getDefaults$4(javax.swing.UIDefaults)> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object lambda$getDefaults$4(javax.swing.UIDefaults)> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseScaledFloat$10(float,javax.swing.UIDefaults)> => <java.lang.Float: java.lang.Float valueOf(float)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object lambda$parseScaledFloat$10(float,javax.swing.UIDefaults)> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Class findClass(java.lang.String,java.util.List)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Class findClass(java.lang.String,java.util.List)> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object invokeConstructorOrStaticMethod(java.lang.reflect.Executable[],java.util.List,java.util.function.Function)> => <java.util.Arrays: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object invokeConstructorOrStaticMethod(java.lang.reflect.Executable[],java.util.List,java.util.function.Function)> => <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object[] parseMethodParams(java.lang.Class[],java.util.List,java.util.function.Function)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object[] parseMethodParams(java.lang.Class[],java.util.List,java.util.function.Function)> => <java.lang.Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object[] parseMethodParams(java.lang.Class[],java.util.List,java.util.function.Function)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatInputMaps: boolean lambda$initBasicInputMaps$0()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatInputMaps: boolean lambda$initBasicInputMaps$0()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: com.formdev.flatlaf.json.ParseException error(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: void paintMenuItem(java.awt.Graphics,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToggleButtonUI$lambda_getStyleableInfos_1__22: boolean test(java.lang.Object)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: int getFocusWidth(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: int getArc(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: int getButtonType(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolTipUI$init__58: java.lang.Object get()> => <javax.swing.plaf.basic.BasicToolTipUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI$lambda_createUI_0__38: java.lang.Object get()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToggleButtonUI$lambda_createUI_0__21: java.lang.Object get()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI$lambda_createUI_0__23: java.lang.Object get()> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI$lambda_createUI_0__49: java.lang.Object get()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI$lambda_createUI_0__49: java.lang.Object get()> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI$lambda_createUI_0__49: java.lang.Object get()> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxUI$lambda_createUI_0__19: java.lang.Object get()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxUI$lambda_createUI_0__19: java.lang.Object get()> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxUI$lambda_createUI_0__19: java.lang.Object get()> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: javax.swing.plaf.ComponentUI lambda$createUI$0()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToggleButtonUI: javax.swing.plaf.ComponentUI lambda$createUI$0()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatLabelUI: javax.swing.plaf.ComponentUI lambda$createUI$0()> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: javax.swing.plaf.ComponentUI lambda$createUI$0()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: javax.swing.plaf.ComponentUI lambda$createUI$0()> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: javax.swing.plaf.ComponentUI lambda$createUI$0()> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxUI: javax.swing.plaf.ComponentUI lambda$createUI$0()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxUI: javax.swing.plaf.ComponentUI lambda$createUI$0()> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCheckBoxUI: javax.swing.plaf.ComponentUI lambda$createUI$0()> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void scroll(int)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void scroll(int)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void scroll(int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void scroll(int)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void scroll(int)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListCellBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListCellBorder: void <init>()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListCellBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListCellBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateFullWindowContentButtonsBoundsProperty()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateFullWindowContentButtonsBoundsProperty()> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateFullWindowContentButtonsBoundsProperty()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void selectAllOnFocusGained()> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatCaret: void selectAllOnFocusGained()> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI: java.awt.Color getBackground(javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI: java.awt.Color getBackground(javax.swing.JComponent)> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI: java.awt.Color getBackground(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: boolean isMenuBarEmbedded(javax.swing.JRootPane)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI: boolean useUnifiedBackground(java.awt.Component)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI: boolean useUnifiedBackground(java.awt.Component)> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI: boolean useUnifiedBackground(java.awt.Component)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuBarUI: boolean useUnifiedBackground(java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: java.awt.Insets getResizeInsets()> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void addSubComponents()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void addSubComponents()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void addSubComponents()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpotsLater()> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpotsLater()> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void debugPaintComponentWithMouseListener(java.awt.Graphics,java.awt.Color,java.awt.Component,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void debugPaintComponentWithMouseListener(java.awt.Graphics,java.awt.Color,java.awt.Component,int,int)> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void debugPaintComponentWithMouseListener(java.awt.Graphics,java.awt.Color,java.awt.Component,int,int)> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void debugPaintComponentWithMouseListener(java.awt.Graphics,java.awt.Color,java.awt.Component,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void debugPaintRect(java.awt.Graphics,java.awt.Color,java.awt.Rectangle)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void debugPaintRect(java.awt.Graphics,java.awt.Color,java.awt.Rectangle)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void <init>(javax.swing.JComponent)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void <init>(javax.swing.JComponent)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void <init>(javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void <clinit>()> => <javax.swing.JLayeredPane: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void <clinit>()> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton: boolean isPressed()> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton: boolean isHover()> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabAreaButton: java.awt.Color deriveBackground(java.awt.Color)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$FlatScrollBarButton: java.awt.Color deriveBackground(java.awt.Color)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabAreaButton: void paintBackground(java.awt.Graphics2D)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabAreaButton: void paintBackground(java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton: java.awt.Color getArrowColor()> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton: void paintArrow(java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton: void paintArrow(java.awt.Graphics2D)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboBoxButton: void paintArrow(java.awt.Graphics2D)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void access$700(java.awt.Insets,java.awt.Insets,int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void rotateInsets(java.awt.Insets,java.awt.Insets,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void access$700(java.awt.Insets,java.awt.Insets,int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: void layoutContainerImpl()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: void layoutContainerImpl()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: void layoutContainerImpl()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: void layoutContainerImpl()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutContainerImpl()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarUI: void paintButtonGroup(java.awt.Graphics)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension,int)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension,int)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension,int)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI$1: java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI$1: java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI$1: java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI$1: java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI$1: java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI$1: java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent)> => <java.awt.event.InputEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI$1: java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent)> => <java.awt.event.MouseEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI$1: java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI$1: java.awt.event.MouseEvent handleWideMouseEvent(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel$lambda_new_0__41: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel$lambda_new_0__41: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel$lambda_new_0__41: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void patchUI(javax.swing.JFileChooser)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void patchUI(javax.swing.JFileChooser)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void patchUI(javax.swing.JFileChooser)> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void patchUI(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void patchUI(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void patchUI(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: void patchUI(javax.swing.JFileChooser)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel createShortcutsPanel(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel createShortcutsPanel(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel createShortcutsPanel(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: void installUIImpl(javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: void installUIImpl(javax.swing.JComponent)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: void installUIImpl(javax.swing.JComponent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: void installUIImpl(javax.swing.JComponent)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: void installUIImpl(javax.swing.JComponent)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollPaneUI: void installUIImpl(javax.swing.JComponent)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void repaint()> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: void update(int,int)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: boolean isAbsolutePositioning(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI$ScrollBarHoverListener: boolean isAbsolutePositioning(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isMiddleMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatTableHeaderCellRendererPane: int getColumn(int,int)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI: java.awt.Dimension getThumbSize()> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: java.awt.Point fixToolTipLocation(java.awt.Component,java.awt.Component,int,int)> => <java.awt.MouseInfo: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: java.awt.Point fixToolTipLocation(java.awt.Component,java.awt.Component,int,int)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: java.awt.Point fixToolTipLocation(java.awt.Component,java.awt.Component,int,int)> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: java.awt.Point fixToolTipLocation(java.awt.Component,java.awt.Component,int,int)> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: java.awt.Point fixToolTipLocation(java.awt.Component,java.awt.Component,int,int)> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: java.awt.Point fixToolTipLocation(java.awt.Component,java.awt.Component,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getPopupForScreenOfOwner(java.awt.Component,java.awt.Component,int,int,boolean)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getPopupForScreenOfOwner(java.awt.Component,java.awt.Component,int,int,boolean)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$NonFlashingPopup: void <init>(javax.swing.Popup,java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$NonFlashingPopup: void <init>(javax.swing.Popup,java.awt.Component)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void <init>(com.formdev.flatlaf.ui.FlatPopupFactory,javax.swing.Popup,java.awt.Component,java.awt.Component)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: void access$300(java.awt.Window)> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean access$200()> => <javax.swing.PopupFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: java.awt.Color getBackground(boolean)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder: void <init>()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableCellBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: boolean isFocused(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void setResizeDir(int)> => <java.awt.Cursor: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent: void setResizeDir(int)> => <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$WindowResizer: java.awt.Rectangle getParentBounds()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$InternalFrameResizer: java.awt.Rectangle getParentBounds()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$WindowResizer: void setWindowBounds(java.awt.Rectangle)> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer$WindowResizer: void setWindowBounds(java.awt.Rectangle)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI: boolean isShowButtons()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI: boolean isShowButtons()> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatScrollBarUI: boolean isShowButtons()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void paintBackground(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void paintBackground(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void paintBackground(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToggleButtonUI: void paintBackground(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: int defaultBoldPlainWidthDiff(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: boolean hasDefaultMargins(javax.swing.JComponent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent[] getLeadingComponents()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent[] getLeadingComponents()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent[] getLeadingComponents()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent[] getTrailingComponents()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent[] getTrailingComponents()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent[] getTrailingComponents()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: javax.swing.JComponent[] getTrailingComponents()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: javax.swing.JComponent[] getTrailingComponents()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: javax.swing.JComponent[] getTrailingComponents()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreviewLater()> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreviewLater()> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: java.awt.Dimension getUIDimension(java.lang.String,int,int)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: java.awt.Dimension getUIDimension(java.lang.String,int,int)> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: java.awt.Dimension getUIDimension(java.lang.String,int,int)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <javax.swing.plaf.metal.MetalFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <javax.swing.ImageIcon: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.Icon getIcon(javax.swing.filechooser.FileSystemView,java.io.File)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.JToggleButton createButton(java.lang.String,javax.swing.Icon)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.JToggleButton createButton(java.lang.String,javax.swing.Icon)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI$FlatShortcutsPanel: javax.swing.JToggleButton createButton(java.lang.String,javax.swing.Icon)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: boolean access$100()> => <javax.swing.plaf.metal.MetalFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatFileChooserUI: boolean access$100()> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintContentBorder(java.awt.Graphics,int,int)> => <java.awt.geom.Rectangle2D: void intersect(java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintContentBorder(java.awt.Graphics,int,int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void rotateInsets(java.awt.Insets,java.awt.Insets,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintContentBorder(java.awt.Graphics,int,int)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintContentBorder(java.awt.Graphics,int,int)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintContentBorder(java.awt.Graphics,int,int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintContentBorder(java.awt.Graphics,int,int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int getTabType()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: float getBorderWidth(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: java.awt.Color getOutlineColor(java.awt.Component)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: boolean isFocused(java.awt.Component)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatBorder: boolean isFocused(java.awt.Component)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: java.awt.Color getFocusColor(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: java.awt.Color getFocusColor(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonBorder: java.awt.Paint getBorderColor(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: int maxInset(java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: int maxInset(java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: int maxInset(java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: int maxInset(java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: java.awt.Dimension computeLayoutSize(java.awt.Container,java.util.function.Function)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: java.awt.Dimension computeLayoutSize(java.awt.Container,java.util.function.Function)> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: java.awt.Dimension computeLayoutSize(java.awt.Container,java.util.function.Function)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI$FlatRootLayout: java.awt.Dimension computeLayoutSize(java.awt.Container,java.util.function.Function)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: java.awt.Rectangle getMenuBarBounds()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: java.awt.Rectangle getMenuBarBounds()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: java.awt.Rectangle getMenuBarBounds()> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: java.awt.Rectangle getMenuBarBounds()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: java.awt.Rectangle getMenuBarBounds()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextAreaUI: java.awt.Dimension applyMinimumWidth(javax.swing.JComponent,java.awt.Dimension)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: int getIconFocusWidth(javax.swing.JComponent)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRadioButtonUI: int getIconFocusWidth(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: boolean isOverThumb(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void setThumbHover(boolean)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSliderUI$FlatTrackListener: void setThumbPressed(boolean)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void updateRolloverDelayed()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int getScrollButtonsPlacement()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int getScrollButtonsPolicy()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintRow(java.awt.Graphics,java.awt.Rectangle,java.awt.Insets,java.awt.Rectangle,javax.swing.tree.TreePath,int,boolean,boolean,boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintRow(java.awt.Graphics,java.awt.Rectangle,java.awt.Insets,java.awt.Rectangle,javax.swing.tree.TreePath,int,boolean,boolean,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: boolean isContentEmpty()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: java.awt.Dimension calculateTabAreaSize()> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: java.awt.Dimension calculateTabAreaSize()> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: java.awt.Dimension calculateTabAreaSize()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: java.awt.Dimension calculateTabAreaSize()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: java.awt.Dimension calculateTabAreaSize()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI: java.awt.Color getBackground(boolean)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider: void <init>(com.formdev.flatlaf.ui.FlatSplitPaneUI,javax.swing.plaf.basic.BasicSplitPaneUI)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider: void <init>(com.formdev.flatlaf.ui.FlatSplitPaneUI,javax.swing.plaf.basic.BasicSplitPaneUI)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider: void <init>(com.formdev.flatlaf.ui.FlatSplitPaneUI,javax.swing.plaf.basic.BasicSplitPaneUI)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider: void <init>(com.formdev.flatlaf.ui.FlatSplitPaneUI,javax.swing.plaf.basic.BasicSplitPaneUI)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSplitPaneUI$FlatSplitPaneDivider: void <init>(com.formdev.flatlaf.ui.FlatSplitPaneUI,javax.swing.plaf.basic.BasicSplitPaneUI)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: void updateDirection()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: javax.swing.JMenuItem createTabMenuItem(int)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: javax.swing.JMenuItem createTabMenuItem(int)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: javax.swing.JMenuItem createTabMenuItem(int)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: javax.swing.JMenuItem createTabMenuItem(int)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatMoreTabsButton: javax.swing.JMenuItem createTabMenuItem(int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpots()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpots()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpots()> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpots()> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpots()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpots()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpots()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateNativeTitleBarHeightAndHitTestSpots()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: boolean isWindowTopBorderNeeded()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: boolean isWindowTopBorderNeeded()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: boolean isWindowTopBorderNeeded()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: int getMultiClickInterval()> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$Handler: int getMultiClickInterval()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void close()> => <java.awt.AWTEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatSelectedTabRepainter: void repaintSelectedTabs(java.awt.Component)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatSelectedTabRepainter: void repaintSelectedTabs(java.awt.Component)> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: java.awt.Rectangle getScreenBoundsAt(int,int)> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: java.awt.Rectangle getScreenBoundsAt(int,int)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: java.awt.Rectangle getScreenBoundsAt(int,int)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: java.awt.Rectangle getScreenBoundsAt(int,int)> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI: java.awt.Rectangle getScreenBoundsAt(int,int)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void <init>(com.formdev.flatlaf.ui.FlatPopupMenuUI,javax.swing.JPopupMenu)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void <init>(com.formdev.flatlaf.ui.FlatPopupMenuUI,javax.swing.JPopupMenu)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void <init>(com.formdev.flatlaf.ui.FlatPopupMenuUI,javax.swing.JPopupMenu)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void <init>(com.formdev.flatlaf.ui.FlatPopupMenuUI,javax.swing.JPopupMenu)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void <init>(com.formdev.flatlaf.ui.FlatPopupMenuUI,javax.swing.JPopupMenu)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void <init>(com.formdev.flatlaf.ui.FlatPopupMenuUI,javax.swing.JPopupMenu)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void <init>(com.formdev.flatlaf.ui.FlatPopupMenuUI,javax.swing.JPopupMenu)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatInternalFrameTitlePane: java.awt.Rectangle getFrameIconBounds()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowsNativeWindowBorder: void updateColorization()> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: boolean isFullWindowContent()> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void installClientDecorations()> => <javax.swing.LookAndFeel: void uninstallBorder(javax.swing.JComponent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void installClientDecorations()> => <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder: void install(java.awt.Window)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder: void install(java.awt.Window)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void uninstallClientDecorations()> => <javax.swing.LookAndFeel: void uninstallBorder(javax.swing.JComponent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void macUninstallFullWindowContentSupport()> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void macUninstallFullWindowContentSupport()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder: void uninstall(javax.swing.JRootPane,java.lang.Object)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder: void uninstall(javax.swing.JRootPane,java.lang.Object)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: java.lang.Integer getLayerForTitlePane()> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void menuBarChanged()> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void menuBarChanged()> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$1: void repaintArrowButton()> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarUI$FlatToolBarFocusTraversalPolicy: java.awt.Component getRecentComponent(java.awt.Container,boolean)> => <javax.swing.plaf.basic.BasicToolBarUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void updateRollover(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void updateRollover(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void updateRollover(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void restoreTabToolTip()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void closeTab(int)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void closeTab(int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void closeTab(int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void ensureSelectedTabIsVisibleLater()> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void ensureSelectedTabIsVisibleLater()> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void ensureSelectedTabIsVisibleLater()> => <java.awt.EventQueue: boolean isDispatchThread()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installLeadingComponent()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installLeadingComponent()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installLeadingComponent()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installTrailingComponent()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installTrailingComponent()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void installTrailingComponent()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.StackUtils: boolean wasInvokedFromImpl(java.util.function.BiPredicate,int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.StackUtilsImpl: boolean wasInvokedFromImpl(java.util.function.BiPredicate,int)> => <java.lang.Thread: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.StackUtilsImpl: boolean wasInvokedFromImpl(java.util.function.BiPredicate,int)> => <java.lang.Thread: java.lang.Thread currentThread()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopPaneUI: void layoutDockLaterOnce()> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopPaneUI: void layoutDockLaterOnce()> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void showMediumWeightDropShadow()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void showMediumWeightDropShadow()> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void showMediumWeightDropShadow()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void showMediumWeightDropShadow()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void showMediumWeightDropShadow()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: void showMediumWeightDropShadow()> => <javax.swing.JLayeredPane: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI: boolean hideLastVerticalLine()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI: boolean hideLastVerticalLine()> => <javax.swing.SwingUtilities: java.awt.Container getUnwrappedParent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeCollapsedIcon: void <init>(java.awt.Color)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeCollapsedIcon: void <init>(java.awt.Color)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneAbstractIcon: void <init>(java.lang.String,java.lang.String)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneAbstractIcon: void <init>(java.lang.String,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewFloppyDriveIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserNewFolderIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCapsLockIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCapsLockIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Area: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCapsLockIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCapsLockIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameCloseIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewFileIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeLeafIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewDirectoryIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserHomeFolderIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatAscendingSortIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatAscendingSortIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameRestoreIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Area: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewHardDriveIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileViewComputerIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatRevealIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatRevealIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Area: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatRevealIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatMenuArrowIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatMenuArrowIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.lang.Math: double toRadians(double)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeOpenIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneAbstractIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneAbstractIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatClearIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatClearIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatClearIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatClearIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserUpFolderIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeClosedIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatHelpButtonIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTabbedPaneCloseIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatSearchIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Area: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatSearchIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatFileChooserListViewIcon: void paintIcon(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeCollapsedIcon: java.lang.Object getStyleFromTreeUI(java.awt.Component,java.util.function.Function)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeCollapsedIcon: java.lang.Object getStyleFromTreeUI(java.awt.Component,java.util.function.Function)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$FlatUIDefaults: java.lang.Object getFromMetal(java.lang.String,java.util.Locale)> => <javax.swing.plaf.metal.MetalLookAndFeel: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$ActiveFont: javax.swing.plaf.FontUIResource derive(java.awt.Font,java.util.function.IntUnaryOperator)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$ActiveFont: javax.swing.plaf.FontUIResource derive(java.awt.Font,java.util.function.IntUnaryOperator)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$ActiveFont: java.lang.String preferredFamily(java.util.List)> => <java.util.Locale: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean shouldShowMnemonics(java.awt.event.KeyEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean shouldShowMnemonics(java.awt.event.KeyEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean processKeyEventOnWindows(java.awt.event.KeyEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean processKeyEventOnWindows(java.awt.event.KeyEvent)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean processKeyEventOnWindows(java.awt.event.KeyEvent)> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean processKeyEventOnWindows(java.awt.event.KeyEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean processKeyEventOnWindows(java.awt.event.KeyEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean processKeyEventOnWindows(java.awt.event.KeyEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.MnemonicHandler: boolean processKeyEventOnWindows(java.awt.event.KeyEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: void <init>()> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatComboPopup: boolean isPopupOverComboBox()> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatSelectedTabRepainter: void <init>()> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatSelectedTabRepainter: void <init>()> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void showTitleTip()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void showTitleTip()> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void showTitleTip()> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void showTitleTip()> => <javax.swing.JLayeredPane: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void showTitleTip()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void showTitleTip()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void showTitleTip()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: int getMaxIconsWidth()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: int getMaxIconsWidth()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: int getMaxIconsWidth()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: int getMaxIconsWidth()> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI: void updateEditorColors()> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowsNativeWindowBorder: void <init>()> => <java.util.IdentityHashMap: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowsNativeWindowBorder: void <init>()> => <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowsNativeWindowBorder: void <init>()> => <javax.swing.event.EventListenerList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowsNativeWindowBorder: void <init>()> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatListUI$1: void lambda$focusLost$0()> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI$1: void lambda$focusLost$0()> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void lambda$menuKeyPressed$0()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void lambda$menuKeyPressed$0()> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,int,int,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void lambda$menuKeyPressed$0()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void lambda$menuKeyPressed$0()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupMenuUI$FlatPopupScroller: void lambda$menuKeyPressed$0()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: void paintImpl(java.awt.Graphics2D,int,int,int,int,double)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: void paintImpl(java.awt.Graphics2D,int,int,int,int,double)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: void paintImpl(java.awt.Graphics2D,int,int,int,int,double)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: void paintImpl(java.awt.Graphics2D,int,int,int,int,double)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: void paintImpl(java.awt.Graphics2D,int,int,int,int,double)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: java.awt.image.BufferedImage createShadowImage(java.awt.Color,int,float,float)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: java.awt.image.BufferedImage createShadowImage(java.awt.Color,int,float,float)> => <java.awt.Image: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: java.awt.image.BufferedImage createShadowImage(java.awt.Color,int,float,float)> => <java.awt.image.BufferedImage: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object fallbackAATextInfo()> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object fallbackAATextInfo()> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object fallbackAATextInfo()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object fallbackAATextInfo()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object fallbackAATextInfo()> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object fallbackAATextInfo()> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object fallbackAATextInfo()> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object fallbackAATextInfo()> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: java.lang.Object fallbackAATextInfo()> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.util.HashSet: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyProperties(javax.swing.UIDefaults)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: com.formdev.flatlaf.json.ParseException expected(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.ParseException: void <init>(java.lang.String,com.formdev.flatlaf.json.Location)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: void layout(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: void layout(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: void layout(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: void layout(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: boolean isUnderlineSelection()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: boolean isUnderlineSelection()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: void paintUnderlineSelection(java.awt.Graphics,java.awt.Color,java.awt.Color,int)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: void paintUnderlineSelection(java.awt.Graphics,java.awt.Color,java.awt.Color,int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: void paintSelection(java.awt.Graphics,java.awt.Color,java.awt.Insets,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: void paintSelection(java.awt.Graphics,java.awt.Color,java.awt.Insets,int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: void paintSelection(java.awt.Graphics,java.awt.Color,java.awt.Insets,int)> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: void paintSelection(java.awt.Graphics,java.awt.Color,java.awt.Insets,int)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: void paintSelection(java.awt.Graphics,java.awt.Color,java.awt.Insets,int)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: void paintHTMLText(java.awt.Graphics,javax.swing.JMenuItem,java.awt.Rectangle,javax.swing.text.View,java.awt.Color)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: javax.swing.JToggleButton createRevealButton()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: javax.swing.JToggleButton createRevealButton()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: javax.swing.JToggleButton createRevealButton()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getVisibleEditorRect()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getVisibleEditorRect()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getVisibleEditorRect()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void createButtons()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void createButtons()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void createButtons()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateMaximizedBounds()> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateMaximizedBounds()> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void updateMaximizedBounds()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent createDragBorderComponent(int,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent createDragBorderComponent(int,int,int)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatWindowResizer: com.formdev.flatlaf.ui.FlatWindowResizer$DragBorderComponent createDragBorderComponent(int,int,int)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void repaintRolloverLaterOnce(int)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void repaintRolloverLaterOnce(int)> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutChildComponents()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle getTabAreaLayoutBounds(int,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle getTabAreaLayoutBounds(int,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle getTabAreaLayoutBounds(int,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle getTabAreaLayoutBounds(int,java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle getTabAreaLayoutBounds(int,java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle getTabAreaLayoutBounds(int,java.awt.Insets)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle getTabAreaLayoutBounds(int,java.awt.Insets)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle layoutLeftAndRightComponents(java.awt.Rectangle,int,java.awt.Insets,boolean,boolean,boolean)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle layoutLeftAndRightComponents(java.awt.Rectangle,int,java.awt.Insets,boolean,boolean,boolean)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle layoutTopAndBottomComponents(java.awt.Rectangle,int,java.awt.Insets,boolean,boolean)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle layoutTopAndBottomComponents(java.awt.Rectangle,int,java.awt.Insets,boolean,boolean)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutTabComponents(java.awt.Component)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutTabComponents(java.awt.Component)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int getTabsPopupPolicy()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int getTabAreaAlignment()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getRealTabAreaInsets(int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getRealTabAreaInsets(int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void rotateInsets(java.awt.Insets,java.awt.Insets,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getRealTabAreaInsets(int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarBorder: java.awt.Rectangle calculateGripBounds(java.awt.Component,int,int,int,int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarBorder: java.awt.Rectangle calculateGripBounds(java.awt.Component,int,int,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarUI: java.awt.FocusTraversalPolicy createFocusTraversalPolicy()> => <javax.swing.LayoutFocusTraversalPolicy: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToolBarUI: java.awt.FocusTraversalPolicy createFocusTraversalPolicy()> => <javax.swing.SortingFocusTraversalPolicy: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableHeaderUI$FlatTableHeaderCellRendererPane: int getWidthInRightToLef()> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <java.lang.System: long currentTimeMillis()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <java.awt.EventQueue: java.awt.AWTEvent getCurrentEvent()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <java.awt.AWTEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <java.awt.event.InputEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <java.awt.event.MouseEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: boolean hasTipLocation(java.awt.Component)> => <java.awt.MouseInfo: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.invoke.MethodType: java.lang.invoke.MethodType methodType(java.lang.Class,java.lang.Class,java.lang.Class[])>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.invoke.MethodHandles: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.invoke.MethodType: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory: javax.swing.Popup getHeavyWeightPopup(java.awt.Component,java.awt.Component,int,int)> => <java.lang.Class: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: javax.swing.border.Border createDropShadowBorder()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: javax.swing.border.Border createDropShadowBorder()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPopupFactory$DropShadowPopup: javax.swing.border.Border createDropShadowBorder()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatKeySelectionManager: void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI,javax.swing.JComboBox$KeySelectionManager)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI$FlatKeySelectionManager: void <init>(com.formdev.flatlaf.ui.FlatComboBoxUI,javax.swing.JComboBox$KeySelectionManager)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Color getBackground(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatToggleButtonUI: java.awt.Color getForeground(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatButtonUI: java.awt.Color getForeground(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: java.lang.Integer lambda$paintUnderlineSelection$7(com.formdev.flatlaf.ui.FlatMenuBarUI)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: java.lang.Integer lambda$paintUnderlineSelection$7(com.formdev.flatlaf.ui.FlatMenuBarUI)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: java.lang.Integer lambda$paintSelection$4(com.formdev.flatlaf.ui.FlatMenuBarUI)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuUI$FlatMenuRenderer: java.lang.Integer lambda$paintSelection$4(com.formdev.flatlaf.ui.FlatMenuBarUI)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintTabSelection(java.awt.Graphics,int,int,int,int,int,int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintTabSelection(java.awt.Graphics,int,int,int,int,int,int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void rotateInsets(java.awt.Insets,java.awt.Insets,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintTabSelection(java.awt.Graphics,int,int,int,int,int,int)> => <java.awt.geom.Area: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintTabSelection(java.awt.Graphics,int,int,int,int,int,int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: void paintTabSelection(java.awt.Graphics,int,int,int,int,int,int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: boolean isSmoothScrollingEnabled()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: boolean isSmoothScrollingEnabled()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintCellBackground(java.awt.Graphics,java.awt.Component,java.awt.Rectangle,int,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintCellBackground(java.awt.Graphics,java.awt.Component,java.awt.Rectangle,int,boolean)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintCellBackground(java.awt.Graphics,java.awt.Component,java.awt.Rectangle,int,boolean)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintCellBackground(java.awt.Graphics,java.awt.Component,java.awt.Rectangle,int,boolean)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintCellBackground(java.awt.Graphics,java.awt.Component,java.awt.Rectangle,int,boolean)> => <java.lang.Math: float min(float,float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintCellBackground(java.awt.Graphics,java.awt.Component,java.awt.Rectangle,int,boolean)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintCellBackground(java.awt.Graphics,java.awt.Component,java.awt.Rectangle,int,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTreeUI: void paintCellBackground(java.awt.Graphics,java.awt.Component,java.awt.Rectangle,int,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void lambda$setViewPositionAnimated$1()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Dimension calculateTabAreaSize()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Dimension calculateTabAreaSize()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Dimension calculateTabAreaSize()> => <java.awt.Dimension: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Dimension calculateTabAreaSize()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Dimension calculateTabAreaSize()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Dimension calculateTabAreaSize()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Dimension calculateTabAreaSize()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: java.awt.Rectangle boundsInWindow(javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: java.awt.Rectangle boundsInWindow(javax.swing.JComponent)> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$FlatTitleLabelUI: java.lang.String layoutCL(javax.swing.JLabel,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$FlatTitleLabelUI: java.lang.String layoutCL(javax.swing.JLabel,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$FlatTitleLabelUI: java.lang.String layoutCL(javax.swing.JLabel,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$FlatTitleLabelUI: java.lang.String layoutCL(javax.swing.JLabel,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$FlatTitleLabelUI: java.lang.String layoutCL(javax.swing.JLabel,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane$FlatTitleLabelUI: java.lang.String layoutCL(javax.swing.JLabel,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: com.formdev.flatlaf.ui.FlatTitlePane createTitlePane()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: com.formdev.flatlaf.ui.FlatTitlePane createTitlePane()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: com.formdev.flatlaf.ui.FlatTitlePane createTitlePane()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatRootPaneUI: void setTitlePane(com.formdev.flatlaf.ui.FlatTitlePane)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Rectangle getTabCloseHitArea(int)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Rectangle getTabCloseHitArea(int)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$Handler: void setCloseToolTip(int,java.lang.String)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$1(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$1(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$initialize$1(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void reSetLookAndFeel()> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void reSetLookAndFeel()> => <java.awt.EventQueue: void invokeLater(java.lang.Runnable)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatInternalFrameAbstractIcon: void paintBackground(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI$FlatBooleanRenderer$1: boolean isSelected(java.awt.Component)> => <javax.swing.table.DefaultTableCellRenderer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI$FlatBooleanRenderer$1: boolean isSelected(java.awt.Component)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI$FlatBooleanRenderer$1: boolean isSelected(java.awt.Component)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTableUI$FlatBooleanRenderer$1: boolean isSelected(java.awt.Component)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: java.awt.Color getBorderColor(java.awt.Component,boolean)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: java.awt.Color getBackground(java.awt.Component,boolean)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: java.awt.Color getCheckmarkColor(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: void paintCheckmark(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxIcon: void paintCheckmark(java.awt.Component,java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon: void paintCheckmark(java.awt.Graphics2D)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon: void paintCheckmark(java.awt.Graphics2D)> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeExpandedIcon: void rotate(java.awt.Component,java.awt.Graphics2D)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeExpandedIcon: void rotate(java.awt.Component,java.awt.Graphics2D)> => <java.lang.Math: double toRadians(double)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeCollapsedIcon: void rotate(java.awt.Component,java.awt.Graphics2D)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatTreeCollapsedIcon: void rotate(java.awt.Component,java.awt.Graphics2D)> => <java.lang.Math: double toRadians(double)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatWindowAbstractIcon: void paintBackground(java.awt.Component,java.awt.Graphics2D)> => <java.awt.RenderingHints: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatWindowAbstractIcon: void paintBackground(java.awt.Component,java.awt.Graphics2D)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatWindowCloseIcon: java.awt.Color getForeground(java.awt.Component)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneErrorIcon: java.awt.Shape createInside()> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneErrorIcon: java.awt.Shape createInside()> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneInformationIcon: java.awt.Shape createInside()> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneInformationIcon: java.awt.Shape createInside()> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneQuestionIcon: java.awt.Shape createInside()> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneQuestionIcon: java.awt.Shape createInside()> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneWarningIcon: java.awt.Shape createInside()> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatOptionPaneWarningIcon: java.awt.Shape createInside()> => <java.awt.geom.Path2D: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf$ActiveFont: javax.swing.plaf.FontUIResource toUIResource(java.awt.Font)> => <java.awt.Font: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: int lambda$initDefaultFont$5(java.awt.Font,int)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: int lambda$initDefaultFont$5(java.awt.Font,int)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatSelectedTabRepainter: void lambda$repaintSelectedTabs$0(java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatSelectedTabRepainter: void lambda$repaintSelectedTabs$0(java.awt.Component)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$reSetLookAndFeel$7()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$reSetLookAndFeel$7()> => <javax.swing.UIManager: java.beans.PropertyChangeListener[] getPropertyChangeListeners()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$reSetLookAndFeel$7()> => <javax.swing.UIManager: void setLookAndFeel(javax.swing.LookAndFeel)>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$reSetLookAndFeel$7()> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found compile-time invoke: <com.formdev.flatlaf.FlatLaf: void lambda$reSetLookAndFeel$7()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void maximize()> => <java.lang.Boolean: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: void maximize()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: boolean captionHitTest(java.awt.Point)> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: boolean captionHitTest(java.awt.Point)> => <java.lang.System: long currentTimeMillis()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <java.awt.EventQueue: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper: void menuSelectionChanged()> => <java.awt.MouseInfo: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: int scale(int,double)> => <java.lang.Math: double ceil(double)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDropShadowBorder: int scale(int,double)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: java.util.Map removeThemeSpecificDefaults(javax.swing.UIDefaults)> => <java.util.ArrayList: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: java.util.Map removeThemeSpecificDefaults(javax.swing.UIDefaults)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: java.util.Map removeThemeSpecificDefaults(javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void loadNamedColors(javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void apply(java.lang.String,java.lang.Object,javax.swing.UIDefaults,java.util.ArrayList,java.util.Set)> => <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void apply(java.lang.String,java.lang.Object,javax.swing.UIDefaults,java.util.ArrayList,java.util.Set)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void apply(java.lang.String,java.lang.Object,javax.swing.UIDefaults,java.util.ArrayList,java.util.Set)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void apply(java.lang.String,java.lang.Object,javax.swing.UIDefaults,java.util.ArrayList,java.util.Set)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void apply(java.lang.String,java.lang.Object,javax.swing.UIDefaults,java.util.ArrayList,java.util.Set)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyCheckBoxColors(javax.swing.UIDefaults)> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyCheckBoxColors(javax.swing.UIDefaults)> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.IntelliJTheme: void applyCheckBoxColors(javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class)> => <java.util.Collections: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.UIDefaultsLoader: java.lang.Object parseValue(java.lang.String,java.lang.String,java.lang.Class)> => <java.util.Collections: java.util.List emptyList()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void readRequiredChar(char)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void startCapture()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: java.lang.String endCapture()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: java.lang.String getTextForAccelerator(javax.swing.KeyStroke)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: java.lang.String getTextForAccelerator(javax.swing.KeyStroke)> => <java.awt.event.KeyEvent: java.lang.String getKeyText(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: java.lang.String getTextForAccelerator(javax.swing.KeyStroke)> => <java.awt.event.InputEvent: java.lang.String getModifiersExText(int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: java.lang.String getTextForAccelerator(javax.swing.KeyStroke)> => <java.awt.AWTEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: java.lang.String getTextForAccelerator(javax.swing.KeyStroke)> => <java.awt.event.InputEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: java.lang.String getTextForAccelerator(javax.swing.KeyStroke)> => <java.awt.event.KeyEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: java.lang.String getTextForAccelerator(javax.swing.KeyStroke)> => <java.awt.AWTEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: java.lang.String getTextForAccelerator(javax.swing.KeyStroke)> => <java.awt.event.InputEvent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: void prepareLeadingOrTrailingComponent(javax.swing.JComponent)> => <java.awt.Cursor: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: void prepareLeadingOrTrailingComponent(javax.swing.JComponent)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: void prepareLeadingOrTrailingComponent(javax.swing.JComponent)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: void prepareLeadingOrTrailingComponent(javax.swing.JComponent)> => <java.awt.Cursor: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: void updateEchoChar(boolean)> => <java.lang.Character: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: void updateEchoChar(boolean)> => <java.lang.Character: java.lang.Character valueOf(char)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: void updateEchoChar(boolean)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: void updateEchoChar(boolean)> => <java.lang.Character: java.lang.Character valueOf(char)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getIconsRect()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getIconsRect()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getIconsRect()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getIconsRect()> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getIconsRect()> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getIconsRect()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: java.awt.Rectangle getIconsRect()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: javax.swing.JButton createButton(java.lang.String,java.lang.String,java.awt.event.ActionListener)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: javax.swing.JButton createButton(java.lang.String,java.lang.String,java.awt.event.ActionListener)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: javax.swing.JButton createButton(java.lang.String,java.lang.String,java.awt.event.ActionListener)> => <javax.swing.BorderFactory: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: javax.swing.JButton createButton(java.lang.String,java.lang.String,java.awt.event.ActionListener)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTitlePane: javax.swing.JButton createButton(java.lang.String,java.lang.String,java.awt.event.ActionListener)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle getContentAreaLayoutBounds(int,java.awt.Insets)> => <java.awt.Rectangle: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: java.awt.Rectangle getContentAreaLayoutBounds(int,java.awt.Insets)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneScrollLayout: void layoutChildComponent(java.awt.Component,java.awt.Rectangle)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutChildComponent(java.awt.Component,java.awt.Rectangle)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent createClearButton()> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent createClearButton()> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent createClearButton()> => <java.awt.Cursor: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent createClearButton()> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: javax.swing.JComponent createClearButton()> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: boolean isCapsLockVisible()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatPasswordFieldUI: boolean isCapsLockVisible()> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.Animator: float getTimingFraction()> => <java.lang.System: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.util.Animator: float getTimingFraction()> => <java.lang.System: long nanoTime()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: boolean isTabbedPaneOrChildFocused()> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: boolean isTabbedPaneOrChildFocused()> => <javax.swing.SwingUtilities: boolean isDescendingFrom(java.awt.Component,java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: boolean isTabbedPaneOrChildFocused()> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: boolean isTabbedPaneOrChildFocused()> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getContentBorderInsets(int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getContentBorderInsets(int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void rotateInsets(java.awt.Insets,java.awt.Insets,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getContentBorderInsets(int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getContentBorderInsets(int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getContentBorderInsets(int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <java.lang.Math: long round(double)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <java.lang.Math: long round(double)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <javax.swing.ImageIcon: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <java.awt.Image: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopIconUI: void updateDockIconPreview()> => <java.awt.image.BufferedImage: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatSpinnerUI: void updateEditorPadding()> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextPaneUI: void updateBackground()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatEditorPaneUI: void updateBackground()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int getRealTabRotation(int)> => <java.lang.Throwable: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int getRealTabRotation(int)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon: boolean isUnderlineSelection()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatCheckBoxMenuItemIcon: boolean isUnderlineSelection()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatMenuArrowIcon: boolean isUnderlineSelection()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.icons.FlatMenuArrowIcon: boolean isUnderlineSelection()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatSelectedTabRepainter: void repaintSelectedTab(javax.swing.JTabbedPane)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopPaneUI: void layoutDock()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatDesktopPaneUI: void layoutDock()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <javax.swing.UIManager: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.awt.Color: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatNativeWindowBorder$WindowTopBorder: java.awt.Color calculateActiveBorderColor()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SubMenuEventQueue: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper)> => <java.awt.Toolkit: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SubMenuEventQueue: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SafeTrianglePainter: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper,javax.swing.JPopupMenu)> => <javax.swing.SwingUtilities: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SafeTrianglePainter: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper,javax.swing.JPopupMenu)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SafeTrianglePainter: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper,javax.swing.JPopupMenu)> => <javax.swing.SwingUtilities: java.awt.Window windowForComponent(java.awt.Component)>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SafeTrianglePainter: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper,javax.swing.JPopupMenu)> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SafeTrianglePainter: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper,javax.swing.JPopupMenu)> => <java.awt.Component: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SafeTrianglePainter: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper,javax.swing.JPopupMenu)> => <java.awt.Container: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SafeTrianglePainter: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper,javax.swing.JPopupMenu)> => <javax.swing.JComponent: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.SubMenuUsabilityHelper$SafeTrianglePainter: void <init>(com.formdev.flatlaf.SubMenuUsabilityHelper,javax.swing.JPopupMenu)> => <javax.swing.JLayeredPane: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void readEscape()> => <java.lang.String: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void readEscape()> => <java.lang.Integer: int parseInt(java.lang.String,int)>
Found compile-time invoke: <com.formdev.flatlaf.json.JsonParser: void readEscape()> => <java.lang.Integer: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatMenuItemRenderer: java.lang.String getMacOSModifiersExText(int,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatTabbedPaneLayout: void layoutTabContainer(java.awt.Component)> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextFieldUI: void updateBackground()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void updateEditorPadding()> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void updateEditorPadding()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void updateEditorPadding()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void updateEditorPadding()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void updateEditorPadding()> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatComboBoxUI: void updateEditorPadding()> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTextAreaUI: void updateBackground()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabWidthImpl(int,int,java.awt.FontMetrics,boolean)> => <java.lang.Math: int min(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabWidthImpl(int,int,java.awt.FontMetrics,boolean)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabWidthImpl(int,int,java.awt.FontMetrics,boolean)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabWidthImpl(int,int,java.awt.FontMetrics,boolean)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabWidthImpl(int,int,java.awt.FontMetrics,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabWidthImpl(int,int,java.awt.FontMetrics,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabWidthImpl(int,int,java.awt.FontMetrics,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabWidthImpl(int,int,java.awt.FontMetrics,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabHeightImpl(int,int,int,boolean)> => <java.lang.Math: int max(int,int)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int calculateTabHeightImpl(int,int,int,boolean)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getTabInsetsRotated(int,int,int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: java.awt.Insets getTabInsetsRotated(int,int,int)> => <java.awt.Insets: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int getTabRotation()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void lambda$setViewPositionAnimated$0(float)> => <java.lang.Math: void <clinit>()>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void lambda$setViewPositionAnimated$0(float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI$FlatWheelTabScroller: void lambda$setViewPositionAnimated$0(float)> => <java.lang.Math: int round(float)>
Found compile-time invoke: <com.formdev.flatlaf.ui.FlatTabbedPaneUI: int getTabWidthMode()> => <javax.swing.plaf.basic.BasicTabbedPaneUI: void <clinit>()>

Total compile-time calls: 2558
