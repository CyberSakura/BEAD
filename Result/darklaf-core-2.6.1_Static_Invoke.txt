All Static Calls invokes JDK:
Found static invoke: <com.github.weisj.darklaf.DarkLaf: void initialize()> => <javax.swing.PopupFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: void initialize()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: void initialize()> => <javax.swing.PopupFactory: void setSharedInstance(javax.swing.PopupFactory)>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: void initialize()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: void uninitialize()> => <javax.swing.PopupFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: void uninitialize()> => <javax.swing.PopupFactory: void setSharedInstance(javax.swing.PopupFactory)>
Found static invoke: <com.github.weisj.darklaf.LafManager: void enableLogging(boolean)> => <java.util.logging.Level: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: void enableLogging(boolean)> => <java.util.logging.Level: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: void setLogLevel(java.util.logging.Level)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: void enabledPreferenceChangeReporting(boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: com.github.weisj.darklaf.theme.Theme[] getRegisteredThemes()> => <java.util.Arrays: void sort(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.LafManager: com.github.weisj.darklaf.theme.Theme[] getRegisteredThemes()> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: javax.swing.ListCellRenderer getThemeListCellRenderer()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: javax.swing.ListCellRenderer getThemeListCellRenderer()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: javax.swing.ListCellRenderer getThemeListCellRenderer()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: boolean isInstalled()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: boolean isInstalled()> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition$TransitionAnimator: void paintNow(float)> => <java.lang.Float: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition$TransitionAnimator: void paintNow(float)> => <java.lang.Float: java.lang.Float valueOf(float)>
Found static invoke: <com.github.weisj.darklaf.LafTransition$ImageLayer: void paint(java.awt.Graphics)> => <java.awt.AlphaComposite: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$ImageLayer: void paint(java.awt.Graphics)> => <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton$1: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton$1: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton$1: java.awt.Insets getInsets()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,int,boolean)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,int,boolean,boolean,java.awt.Insets)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,int,boolean,boolean,java.awt.Insets)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,int,boolean,boolean,java.awt.Insets)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,int,boolean,boolean,java.awt.Insets)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,int,boolean,boolean,java.awt.Insets)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,int,boolean,boolean,java.awt.Insets)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int,boolean,boolean,java.awt.Insets)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int,boolean,boolean,java.awt.Insets)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton: javax.swing.JButton createUpDownArrow(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int,boolean,boolean,java.awt.Insets)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton$1: void mouseEntered(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton$1: void mouseEntered(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton$1: void mouseEntered(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel: int getDisplayedMnemonic()> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel: int getDisplayedMnemonic()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent: void <init>(javax.swing.JTabbedPane,java.awt.Component)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent: void <init>(javax.swing.JTabbedPane,java.awt.Component)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent: void <init>(javax.swing.JTabbedPane,java.awt.Component)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent: void <init>(javax.swing.JTabbedPane,java.awt.Component)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent: void <init>(javax.swing.JTabbedPane,java.awt.Component)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent: void <init>(javax.swing.JTabbedPane,java.awt.Component)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent: void <init>(javax.swing.JTabbedPane,java.awt.Component)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void insertTab(java.lang.String,javax.swing.Icon,java.awt.Component,java.lang.String,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void removeTabAt(int)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void setTabComponentAt(int,java.awt.Component)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void setTabComponentAt(int,java.awt.Component)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void setTabComponentAt(int,java.awt.Component)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.CloseButton: void <init>()> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase$PickerWindow$1: void updateUI()> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: java.awt.Window show()> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: java.awt.Window show()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: void pickAndClose()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: void pickAndClose()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: void cancelPipette()> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: void cancelPipette()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton: void updateUI()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton: void updateUI()> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton: void updateUI()> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton: void updateUI()> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ComponentHelper: javax.swing.JButton createIconOnlyButton(javax.swing.Icon,javax.swing.Icon)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ComponentHelper: javax.swing.JButton createIconOnlyButton(javax.swing.Icon,javax.swing.Icon)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ComponentHelper: javax.swing.JButton createIconOnlyButton(javax.swing.Icon,javax.swing.Icon)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ComponentHelper: com.github.weisj.darklaf.components.button.JSplitButton createIconOnlySplitButton(javax.swing.Icon,javax.swing.Icon)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ComponentHelper: com.github.weisj.darklaf.components.button.JSplitButton createIconOnlySplitButton(javax.swing.Icon,javax.swing.Icon)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ComponentHelper: com.github.weisj.darklaf.components.button.JSplitButton createIconOnlySplitButton(javax.swing.Icon,javax.swing.Icon)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultButton: void addNotify()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultButton: void addNotify()> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette$DefaultPickerWindow: void paint(java.awt.Graphics)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette$DefaultPickerWindow: void paint(java.awt.Graphics)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette$DefaultPickerWindow: void paint(java.awt.Graphics)> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette$DefaultPickerWindow: void paint(java.awt.Graphics)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette$DefaultPickerWindow: void paint(java.awt.Graphics)> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: void <init>(javax.swing.JComponent,com.github.weisj.darklaf.ui.colorchooser.ColorListener)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: void <init>(javax.swing.JComponent,com.github.weisj.darklaf.ui.colorchooser.ColorListener)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: void <init>(javax.swing.JComponent,com.github.weisj.darklaf.ui.colorchooser.ColorListener)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: boolean isAvailable()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.HoveringPanel: void updateUI()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.HoveringPanel: void updateUI()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.HoveringPanel: void updateUI()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.HoveringPanel: void updateUI()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.JXPopupMenu: void show(java.awt.Component,int,int)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.JXPopupMenu: void show(java.awt.Component,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void <init>(javax.swing.JComponent,int,int)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void <init>(javax.swing.JComponent,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void <init>(javax.swing.JComponent,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void <init>(javax.swing.JComponent,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void <init>(javax.swing.JScrollPane)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void <init>(javax.swing.JScrollPane)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void <init>(javax.swing.JScrollPane)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void <init>(javax.swing.JScrollPane)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void setVerticalScrollBarPolicy(int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void setVerticalScrollBarPolicy(int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void setVerticalScrollBarPolicy(int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void setHorizontalScrollBarPolicy(int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void setHorizontalScrollBarPolicy(int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: void setHorizontalScrollBarPolicy(int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.RotatableIconAnimator: void <init>(int,com.github.weisj.darklaf.icons.RotatableIcon,javax.swing.JComponent)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ScrollPopupMenu: void <init>(int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ScrollPopupMenu: void <init>(int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ScrollPopupMenu: void <init>(int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ScrollPopupMenu: void setVisible(boolean)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ScrollPopupMenu: void setVisible(boolean)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.components.ScrollPopupMenu: void setVisible(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.SelectableTreeNode: void <init>(java.lang.String,boolean,boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.SelectableTreeNode: void <init>(java.lang.String,boolean,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.SelectableTreeNode: boolean isSelected()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.SelectableTreeNode: void setSelected(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.SelectableTreeNode: void setSelected(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.TabEvent$Type: com.github.weisj.darklaf.components.TabEvent$Type valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.components.TabEvent: java.lang.String toString()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.VolumeSlider: void setShowVolumeIcon(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.VolumeSlider: void setShowVolumeIcon(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.alignment.AlignmentStrategy: com.github.weisj.darklaf.components.alignment.AlignmentStrategy valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.components.border.BubbleBorder: void <init>(java.awt.Color,int,int,int)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.BubbleBorder: com.github.weisj.darklaf.components.border.BubbleBorder setThickness(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.BubbleBorder: com.github.weisj.darklaf.components.border.BubbleBorder setThickness(int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.border.BubbleBorder: com.github.weisj.darklaf.components.border.BubbleBorder setPointerSize(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.BubbleBorder: com.github.weisj.darklaf.components.border.BubbleBorder setPointerSize(int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.border.BubbleBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.BubbleBorder: java.awt.geom.Area getBubbleArea(float,float,float,float,float)> => <java.awt.geom.Area: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkBorders: javax.swing.border.Border createTopBorderWithSpacing()> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkBorders: javax.swing.border.Border createTopBorderWithSpacing()> => <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkBorders: javax.swing.border.Border createLeftBorderWithSpacing()> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkBorders: javax.swing.border.Border createLeftBorderWithSpacing()> => <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkBorders: javax.swing.border.Border createRightBorderWithSpacing()> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkBorders: javax.swing.border.Border createRightBorderWithSpacing()> => <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkBorders: javax.swing.border.Border createBottomBorderWithSpacing()> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkBorders: javax.swing.border.Border createBottomBorderWithSpacing()> => <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder$Position: com.github.weisj.darklaf.components.border.DropShadowBorder$Position valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: void <init>()> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.awt.RenderingHints: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: com.github.weisj.darklaf.components.border.DropShadowBorder setShadowColor(java.awt.Color)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.MutableLineBorder: java.awt.Insets getBorderInsets()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.button.JSplitButton: javax.swing.JPopupMenu getActionMenu()> => <javax.swing.JPopupMenu: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.button.JSplitButton: javax.swing.JPopupMenu getActionMenu()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.button.JSplitButton: javax.swing.JPopupMenu getActionMenu()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.button.JSplitButton: javax.swing.JPopupMenu getActionMenu()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.button.JSplitButton: void updateUI()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.button.JSplitButton: void updateUI()> => <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.button.JSplitButton: void updateUI()> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.button.JSplitButton: void updateUI()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.chooser.ListChooser: void <init>(java.util.List)> => <javax.swing.JList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.chooser.ListChooser: void <init>(java.util.List)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.chooser.ListChooser: void <init>(java.util.List)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.chooser.ListChooser: void <init>(java.util.List)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.chooser.ListChooser: void <init>(java.util.List)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void <init>(java.awt.Color,java.util.function.Consumer)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void <init>(java.awt.Color,java.util.function.Consumer)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void updateUI()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void updateUI()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void attackToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Supplier,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void attackToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Supplier,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void attackToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Supplier,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void showColorChooser(javax.swing.JComponent,java.awt.Color,java.util.function.Consumer,java.lang.Runnable)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void showColorChooser(javax.swing.JComponent,java.awt.Color,java.util.function.Consumer,java.lang.Runnable)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void showColorChooser(javax.swing.JComponent,java.awt.Color,java.util.function.Consumer,java.lang.Runnable)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void showColorChooser(javax.swing.JComponent,java.awt.Color,java.util.function.Consumer,java.lang.Runnable,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void showColorChooser(javax.swing.JComponent,java.awt.Color,java.util.function.Consumer,java.lang.Runnable,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void showColorChooser(javax.swing.JComponent,java.awt.Color,java.util.function.Consumer,java.lang.Runnable,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser: void <init>(java.awt.Color[],int,java.util.function.Function)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser: void <init>(java.awt.Color[],int,java.util.function.Function)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser: void <init>(java.awt.Color[],int,java.util.function.Function)> => <java.lang.Math: double ceil(double)>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser: void <init>(java.awt.Color[],int,java.util.function.Function)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void <init>(java.lang.String,java.awt.Color,java.util.function.BiConsumer,boolean,java.awt.Dimension)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void <init>(java.lang.String,java.awt.Color,java.util.function.BiConsumer,boolean,java.awt.Dimension)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void <init>(java.lang.String,java.awt.Color,java.util.function.BiConsumer,boolean,java.awt.Dimension)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void <init>(java.lang.String,java.awt.Color,java.util.function.BiConsumer,boolean,java.awt.Dimension)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void <init>(java.lang.String,java.awt.Color,java.util.function.BiConsumer,boolean,java.awt.Dimension)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void <init>(java.lang.String,java.awt.Color,java.util.function.BiConsumer,boolean,java.awt.Dimension)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void <init>(java.lang.String,java.awt.Color,java.util.function.BiConsumer,boolean,java.awt.Dimension)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void setDragEnabled(boolean)> => <java.awt.GraphicsEnvironment: boolean isHeadless()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void attachToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void attachToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void attachToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void attachToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void attachToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void attachToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Supplier)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void attachToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Supplier)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void attachToComponent(javax.swing.JComponent,java.util.function.Consumer,java.util.function.Supplier,java.util.function.Supplier)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor$1$1: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor$1$1: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor$1$1: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: int parseInt(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor$1$1: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor$1$1: java.lang.String valueToString(java.lang.Object)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <java.util.concurrent.atomic.AtomicBoolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <javax.swing.JTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <javax.swing.JFormattedTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor: void <init>(java.lang.String,java.lang.String,int,int,java.util.function.Consumer)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void <init>()> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: com.github.weisj.darklaf.color.DarkColorModel getDarkColorModel()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: com.github.weisj.darklaf.color.DarkColorModel getDarkColorModel()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: com.github.weisj.darklaf.color.DarkColorModel getDarkColorModel()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean isDirectory()> => <java.nio.file.LinkOption: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean isDirectory()> => <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean isDirectory()> => <java.nio.file.Files: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean exists()> => <java.nio.file.LinkOption: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean exists()> => <java.nio.file.Files: boolean exists(java.nio.file.Path,java.nio.file.LinkOption[])>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean exists()> => <java.nio.file.Files: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean notExists()> => <java.nio.file.LinkOption: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean notExists()> => <java.nio.file.Files: boolean notExists(java.nio.file.Path,java.nio.file.LinkOption[])>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean notExists()> => <java.nio.file.Files: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean equals(java.lang.Object)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: int hashCode()> => <java.util.Objects: int hashCode(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean isReadable()> => <java.nio.file.Files: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean isReadable()> => <java.nio.file.Files: boolean isReadable(java.nio.file.Path)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: java.util.stream.Stream list(com.github.weisj.darklaf.components.filetree.FileTreeModel)> => <java.nio.file.Files: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: java.util.stream.Stream list(com.github.weisj.darklaf.components.filetree.FileTreeModel)> => <java.util.stream.Stream: java.util.stream.Stream empty()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: java.util.stream.Stream list(com.github.weisj.darklaf.components.filetree.FileTreeModel)> => <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: java.util.stream.Stream list(com.github.weisj.darklaf.components.filetree.FileTreeModel)> => <java.nio.file.Files: java.util.stream.Stream list(java.nio.file.Path)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: java.util.stream.Stream list(com.github.weisj.darklaf.components.filetree.FileTreeModel)> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: java.lang.String getSystemDisplayName(javax.swing.filechooser.FileSystemView)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: java.lang.String getSystemDisplayName(javax.swing.filechooser.FileSystemView)> => <java.lang.String: java.lang.String valueOf(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: void <init>(boolean,java.io.File[])> => <javax.swing.filechooser.FileSystemView: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: void <init>(boolean,java.io.File[])> => <javax.swing.filechooser.FileSystemView: javax.swing.filechooser.FileSystemView getFileSystemView()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: void <init>(boolean,java.io.File[])> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: void <init>(boolean,java.io.File[])> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: void <init>(boolean,java.io.File[])> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: java.util.List getSelectedFiles()> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: java.util.List getSelectedFiles()> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: java.util.List getSelectedFiles()> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: java.util.List getSelectedFiles()> => <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: java.util.List getSelectedFiles()> => <java.util.Collections: java.util.List emptyList()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: java.util.List getSelectedFiles()> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTree: java.util.List getSelectedFiles()> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeCellRenderer: void updateUI()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeCellRenderer: void updateUI()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeCellRenderer: void updateUI()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode$ReloadOp$Type: com.github.weisj.darklaf.components.filetree.FileTreeNode$ReloadOp$Type valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode$RootNode: void <init>(com.github.weisj.darklaf.components.filetree.FileTreeModel,java.util.List)> => <java.util.Collections: java.util.List emptyList()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode$RootNode: void <init>(com.github.weisj.darklaf.components.filetree.FileTreeModel,java.util.List)> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: void <init>(com.github.weisj.darklaf.components.filetree.FileTreeNode,com.github.weisj.darklaf.components.filetree.FileNode,com.github.weisj.darklaf.components.filetree.FileTreeModel)> => <java.util.concurrent.atomic.AtomicInteger: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: void <init>(com.github.weisj.darklaf.components.filetree.FileTreeNode,com.github.weisj.darklaf.components.filetree.FileNode,com.github.weisj.darklaf.components.filetree.FileTreeModel)> => <java.util.concurrent.atomic.AtomicReference: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: void <init>(com.github.weisj.darklaf.components.filetree.FileTreeNode,com.github.weisj.darklaf.components.filetree.FileNode,com.github.weisj.darklaf.components.filetree.FileTreeModel)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: boolean equals(java.lang.Object)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: int getIndex(javax.swing.tree.TreeNode)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: java.util.Enumeration children()> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: java.util.Enumeration children()> => <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTree: void addNotify()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTree: void addNotify()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTree: void removeNotify()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTree: void removeNotify()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: void <init>(javax.swing.filechooser.FileSystemView)> => <java.util.concurrent.atomic.AtomicBoolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: void <init>(javax.swing.filechooser.FileSystemView,boolean,java.io.File[])> => <java.util.concurrent.atomic.AtomicBoolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: void <init>(javax.swing.filechooser.FileSystemView,boolean,java.nio.file.Path[])> => <java.util.concurrent.atomic.AtomicBoolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: void startWatching()> => <java.util.concurrent.TimeUnit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void setUseColoredIcon(boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void setUseColoredIcon(boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void setUseColoredIcon(boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void setUseColoredIcon(boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <javax.swing.Box: java.awt.Component createHorizontalGlue()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <javax.swing.Box: java.awt.Component createHorizontalGlue()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: void <init>(java.util.List,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: java.util.List exportProperties()> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: java.util.List exportProperties()> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$MutableThemedIconStub: java.util.Map getProperties()> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$MutableThemedIconStub: java.util.Map getProperties()> => <java.util.Collections: java.util.Map emptyMap()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$MutableThemedIconStub: java.util.Map getContextProperties()> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$MutableThemedIconStub: java.util.Map getContextProperties()> => <java.util.Collections: java.util.Map emptyMap()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void <init>(javax.swing.Icon,com.github.weisj.darklaf.theme.Theme)> => <java.util.HashSet: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void <init>(javax.swing.Icon,com.github.weisj.darklaf.theme.Theme)> => <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void <init>(javax.swing.Icon,com.github.weisj.darklaf.theme.Theme)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void <init>(javax.swing.Icon,com.github.weisj.darklaf.theme.Theme)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void <init>(javax.swing.Icon,com.github.weisj.darklaf.theme.Theme)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void <init>(javax.swing.Icon,com.github.weisj.darklaf.theme.Theme)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void <init>(javax.swing.Icon,com.github.weisj.darklaf.theme.Theme)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void <init>(javax.swing.Icon,com.github.weisj.darklaf.theme.Theme)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: java.util.Map exportProperties()> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: java.util.Map exportProperties()> => <java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.NamedColor: java.lang.String toString()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.NamedInt: boolean equals(java.lang.Object)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.loading.LoadingIndicator: void <init>(java.lang.String,javax.swing.Icon,int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.loading.LoadingIndicator: void <init>(java.lang.String,javax.swing.Icon,int)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.loading.LoadingIndicator: void <init>(java.lang.String,javax.swing.Icon,int)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$1: void componentMoved(java.awt.event.ComponentEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$1: void componentMoved(java.awt.event.ComponentEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$1: void componentResized(java.awt.event.ComponentEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$1: void componentResized(java.awt.event.ComponentEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void attachChooser(javax.swing.JComponent,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void attachChooser(javax.swing.JComponent,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void attachChooser(javax.swing.JComponent,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void attachChooser(javax.swing.JComponent,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void attachChooser(javax.swing.JComponent,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void attachChooser(javax.swing.JComponent,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Supplier,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void attackToComponent(javax.swing.JComponent,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Consumer)> => <java.util.concurrent.atomic.AtomicBoolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponent(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponent(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponent(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponent(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponent(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponent(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.PopupFactory: javax.swing.PopupFactory getSharedInstance()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.util.concurrent.atomic.AtomicBoolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.util.concurrent.atomic.AtomicReference: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.PopupFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentFallbackImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.JOptionPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentFallbackImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.JOptionPane: int showOptionDialog(java.awt.Component,java.lang.Object,java.lang.String,int,int,javax.swing.Icon,java.lang.Object[],java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentFallbackImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentFallbackImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void showComponentFallbackImpl(javax.swing.JComponent,javax.swing.JComponent,java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void updateUI()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void updateUI()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer create(java.util.function.Function)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer create(java.util.function.Function)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer create(java.util.function.Function)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer create(java.util.function.BiConsumer)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer create(java.util.function.BiConsumer)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer create(java.util.function.BiConsumer)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.renderer.SimpleListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame$TabFramePosition: java.lang.String toString()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void <init>()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void updateUI()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void updateUI()> => <javax.swing.UIManager: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void insertTab(java.awt.Component,java.lang.String,javax.swing.Icon,com.github.weisj.darklaf.util.Alignment,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void insertTab(java.awt.Component,java.lang.String,javax.swing.Icon,com.github.weisj.darklaf.util.Alignment,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void insertTab(java.awt.Component,java.lang.String,javax.swing.Icon,com.github.weisj.darklaf.util.Alignment,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: javax.swing.JComponent getTabContainer(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: javax.swing.JComponent getTabContainer(com.github.weisj.darklaf.util.Alignment)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: javax.swing.JComponent getTabContainer(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: com.github.weisj.darklaf.components.tabframe.JTabFrame$TabFramePosition findComponent(java.awt.Component)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: java.awt.Component getPopupComponentAt(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: java.awt.Component getPopupComponentAt(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: java.awt.Component getPopupComponentAt(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: java.awt.Component getComponentAt(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: java.awt.Component getComponentAt(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: java.awt.Component getComponentAt(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void setUserTabComponentAt(javax.swing.JComponent,com.github.weisj.darklaf.util.Alignment,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void setUserTabComponentAt(javax.swing.JComponent,com.github.weisj.darklaf.util.Alignment,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void setUserTabComponentAt(javax.swing.JComponent,com.github.weisj.darklaf.util.Alignment,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: void setUI(javax.swing.plaf.PanelUI)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: void setUI(javax.swing.plaf.PanelUI)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: java.awt.Dimension getSize(java.awt.Dimension)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: void setContentPane(java.awt.Component)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: void setContentPane(java.awt.Component)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: void setContentPane(java.awt.Component)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: void updateContentUI()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: void updateContentUI()> => <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: void setAlignment(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.PanelPopup: void setAlignment(com.github.weisj.darklaf.util.Alignment)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.lang.Double: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void setEnabled(com.github.weisj.darklaf.util.Alignment,boolean,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: com.github.weisj.darklaf.components.tabframe.PopupContainer getContainer(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameTabLabel: void setTitle(java.lang.String)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameTabLabel: void setTitle(java.lang.String)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameTabLabel: void setTitle(java.lang.String)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabbedPopup: void setUI(javax.swing.plaf.PanelUI)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabbedPopup: void setUI(javax.swing.plaf.PanelUI)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabbedPopup: java.util.Collection getContentPanes()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.ToggleSplitPane: void savePosition(double)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.ToggleSplitPane: void savePosition(double)> => <java.lang.Math: double max(double,double)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.ToggleSplitPane: void savePosition(double)> => <java.lang.Math: double min(double,double)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.ToggleSplitPane: int getMaximumDividerLocation()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.ToggleSplitPane: int getMaximumDividerLocation()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.text.LineHighlighter: void <init>(javax.swing.text.JTextComponent,java.awt.Color)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberedTextComponent: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberedTextComponent: void <init>(javax.swing.text.JTextComponent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberedTextComponent: void <init>(javax.swing.text.JTextComponent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberedTextComponent: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: void updateUI()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: void updateUI()> => <javax.swing.UIManager: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent)>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: java.util.List getIconsInRange(int,int)> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: java.util.List getIconsInRange(int,int)> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: void addIconListener(javax.swing.text.Position,com.github.weisj.darklaf.components.text.IconListener)> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: java.util.List getIconListeners(int)> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: java.util.List getIconListeners(javax.swing.text.Position)> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: java.util.List getIconListeners(int,int)> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: java.util.List getIconListeners(int,int)> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: void setMinimumIconWidth(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: void setMinimumIconWidth(int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: java.util.List getIconListeners()> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane: java.util.List getIconListeners()> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.text.SearchEvent$Type: com.github.weisj.darklaf.components.text.SearchEvent$Type valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.components.text.SearchTextField: void <init>(javax.swing.text.Document,java.lang.String,int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.SearchTextField: void <init>(javax.swing.text.Document,java.lang.String,int)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.text.SearchTextFieldWithHistory: void <init>(javax.swing.text.Document,java.lang.String,int)> => <javax.swing.JPopupMenu: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.SearchTextFieldWithHistory: void <init>(javax.swing.text.Document,java.lang.String,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.SearchTextFieldWithHistory: void <init>(javax.swing.text.Document,java.lang.String,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.SearchTextFieldWithHistory: void <init>(javax.swing.text.Document,java.lang.String,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.TextFieldHistoryPopup: void <init>(com.github.weisj.darklaf.components.text.SearchTextField,int,int)> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.TextFieldHistoryPopup: void <init>(com.github.weisj.darklaf.components.text.SearchTextField,int,int)> => <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>
Found static invoke: <com.github.weisj.darklaf.components.text.TextFieldHistoryPopup: java.util.List getHistory()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.TextFieldHistoryPopup: void setCapacity(int)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.CheckBoxListItem: void <init>(java.lang.Object,boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.CheckBoxListItem: void <init>(java.lang.Object,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.CheckBoxListItem: void setValue(java.lang.Object)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList$1: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.JList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList$1: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList$1: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList$1: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: void <init>()> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: void <init>()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: void <init>()> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: void addToggleButton(int,java.lang.String,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: void addToggleButton(int,java.lang.String,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: void addToggleButton(int,java.lang.String,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: int[] getCheckedIndices()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: int[] getCheckedIndices()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: int[] getCheckedIndices()> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.JToggleButtonList: java.util.List getCheckedItems()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.ToggleButtonListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,javax.swing.JToggleButton,int,boolean,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.ToggleButtonListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,javax.swing.JToggleButton,int,boolean,boolean)> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.ToggleButtonListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,javax.swing.JToggleButton,int,boolean,boolean)> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.togglebuttonlist.ToggleButtonListCellRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,javax.swing.JToggleButton,int,boolean,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: void <init>(javax.swing.JComponent,com.github.weisj.darklaf.util.Alignment,com.github.weisj.darklaf.util.Alignment,com.github.weisj.darklaf.components.alignment.AlignmentStrategy,boolean,java.util.function.Function)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: com.github.weisj.darklaf.components.tooltip.ToolTipContext setInsideArea(java.awt.Rectangle)> => <java.awt.geom.Area: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.Point getToolTipLocation(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.Point getToolTipLocation(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.Point getToolTipLocation(java.awt.Point,java.awt.event.MouseEvent,boolean,boolean)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: javax.swing.JToolTip getToolTip()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: javax.swing.JToolTip getToolTip()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: javax.swing.JToolTip getToolTip()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipStyle: com.github.weisj.darklaf.components.tooltip.ToolTipStyle valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.components.tree.TristateTreeNode: void add(javax.swing.tree.MutableTreeNode)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tree.TristateTreeNode: void setSelected(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tree.TristateTreeNode: void setSelected(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.tree.TristateTreeNode: void setUserObject(java.lang.Object)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tree.TristateTreeNode: void setUserObject(java.lang.Object)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer$RendererTree: void setRowHeight(int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer$RendererTree: void setRowHeight(int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer$RendererTree: void setRowHeight(int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer$RendererTree: void repaint(int,int,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer$RendererTree: void repaint(int,int,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer$RendererTree: void repaint(int,int,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer$RendererTree: void scrollRectToVisible(java.awt.Rectangle)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer$RendererTree: void scrollRectToVisible(java.awt.Rectangle)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer$RendererTree: void scrollRectToVisible(java.awt.Rectangle)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer: void <init>(com.github.weisj.darklaf.components.treetable.JTreeTable,javax.swing.tree.TreeModel)> => <javax.swing.JTree: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer: void <init>(com.github.weisj.darklaf.components.treetable.JTreeTable,javax.swing.tree.TreeModel)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer: void <init>(com.github.weisj.darklaf.components.treetable.JTreeTable,javax.swing.tree.TreeModel)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.DefaultTreeTableCellRenderer: void <init>(com.github.weisj.darklaf.components.treetable.JTreeTable,javax.swing.tree.TreeModel)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.JTreeTable: void <init>(com.github.weisj.darklaf.components.treetable.model.AbstractTreeTableModel)> => <java.util.logging.Logger: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.JTreeTable: void <init>(com.github.weisj.darklaf.components.treetable.model.AbstractTreeTableModel)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.treetable.JTreeTable: void <init>(com.github.weisj.darklaf.components.treetable.model.AbstractTreeTableModel)> => <java.util.logging.Logger: java.util.logging.Logger getGlobal()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.JTreeTable: void <init>(com.github.weisj.darklaf.components.treetable.model.AbstractTreeTableModel)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.JTreeTable: void <init>(com.github.weisj.darklaf.components.treetable.model.AbstractTreeTableModel)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.JTreeTable: void <init>(com.github.weisj.darklaf.components.treetable.model.AbstractTreeTableModel)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.JTreeTable: void <init>(com.github.weisj.darklaf.components.treetable.model.AbstractTreeTableModel)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.JTreeTable: void repaint(java.awt.Rectangle)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.JTreeTable: void repaint(java.awt.Rectangle)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.AbstractTreeTableModel: void <init>(com.github.weisj.darklaf.components.treetable.model.TreeTableNode)> => <javax.swing.event.EventListenerList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.DefaultTreeTableNode: void <init>(com.github.weisj.darklaf.components.treetable.model.TreeTableNode,java.lang.Object[])> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.DefaultTreeTableNode: void <init>(com.github.weisj.darklaf.components.treetable.model.TreeTableNode,java.lang.Object[])> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.DefaultTreeTableNode: void <init>(com.github.weisj.darklaf.components.treetable.model.TreeTableNode,java.util.List)> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.DelegatingListSelectionModel: int[] getSelectedIndices()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.DelegatingListSelectionModel: int[] getSelectedIndices()> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.TreeTableNode: java.util.Enumeration children()> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.TreeTableNode: java.util.Enumeration children()> => <java.util.Collections: java.util.Enumeration enumeration(java.util.Collection)>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateButtonModel: void setState(com.github.weisj.darklaf.components.tristate.TristateState)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateCheckBoxMenuItem$1: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateCheckBoxMenuItem$1: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateCheckBoxMenuItem$1: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateState: com.github.weisj.darklaf.components.tristate.TristateState valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.components.uiresource.Insets2D: java.lang.String toString()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.delegate.AbstractButtonLayoutDelegate: void setDelegate(javax.swing.AbstractButton)> => <java.awt.RenderingHints: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.delegate.LayoutManagerDelegate: void <init>(java.awt.LayoutManager)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.delegate.ScrollLayoutManagerDelegate: void <init>(javax.swing.ScrollPaneLayout)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator$1: void run()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator$1: void run()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: void resume(int,boolean)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: void resume(int,boolean)> => <java.util.concurrent.TimeUnit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.AntialiasingImageFilter: int filterRGB(int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.AntialiasingImageFilter: int filterRGB(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.graphics.AntialiasingImageFilter: int filterRGB(int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.graphics.AntialiasingImageFilter: int filterRGB(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.graphics.AntialiasingImageFilter: int filterRGB(int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.graphics.AntialiasingImageFilter: int filterRGB(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.graphics.AntialiasingImageFilter: int filterRGB(int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.graphics.DefaultInterpolator: com.github.weisj.darklaf.graphics.DefaultInterpolator valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.graphics.Outline: com.github.weisj.darklaf.graphics.Outline valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void paintFocusOval(java.awt.Graphics2D,float,float,float,float,boolean,float)> => <java.awt.geom.Path2D: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void paintFocusOval(java.awt.Graphics2D,float,float,float,float,boolean,float)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void drawStringImpl(java.awt.Graphics,javax.swing.JComponent,javax.swing.text.View,java.lang.String,java.awt.Rectangle,java.awt.Font,java.awt.FontMetrics,int,java.awt.Color)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void paintOpacityBuffered(java.awt.Graphics,javax.swing.JComponent,com.github.weisj.darklaf.ui.OpacityBufferedUI)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void paintOpacityBuffered(java.awt.Graphics,javax.swing.JComponent,com.github.weisj.darklaf.ui.OpacityBufferedUI)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: void paintOpacityBuffered(java.awt.Graphics,javax.swing.JComponent,com.github.weisj.darklaf.ui.OpacityBufferedUI)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.layout.HorizontalLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.HorizontalLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.layout.HorizontalLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: void doLayout()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: java.awt.Dimension getPreferredSize()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: java.awt.Dimension getPreferredSize()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: java.awt.Dimension getPreferredSize()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.border.Border createEmptyBorder(java.awt.Insets)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.border.Border createEmptyBorder(java.awt.Insets)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.border.Border createEmptyContainerBorder()> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.border.Border createEmptyContainerBorder()> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: java.awt.Insets createEmptyContainerInsets()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(javax.swing.JComponent[],javax.swing.JComponent[])> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(javax.swing.JComponent[],javax.swing.JComponent[])> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(javax.swing.JComponent[],javax.swing.JComponent[])> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(javax.swing.JComponent[],javax.swing.JComponent[],javax.swing.GroupLayout$Alignment,javax.swing.GroupLayout$Alignment)> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(javax.swing.JComponent[],javax.swing.JComponent[],javax.swing.GroupLayout$Alignment,javax.swing.GroupLayout$Alignment)> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(javax.swing.JComponent[],javax.swing.JComponent[],javax.swing.GroupLayout$Alignment,javax.swing.GroupLayout$Alignment)> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(java.util.List,java.util.List)> => <javax.swing.GroupLayout$Alignment: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(java.util.List,java.util.List,javax.swing.GroupLayout$Alignment,javax.swing.GroupLayout$Alignment)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(java.util.List,java.util.List,javax.swing.GroupLayout$Alignment,javax.swing.GroupLayout$Alignment)> => <javax.swing.GroupLayout$Alignment: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(java.util.List,java.util.List,javax.swing.GroupLayout$Alignment,javax.swing.GroupLayout$Alignment)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(java.util.List,java.util.List,javax.swing.GroupLayout$Alignment,javax.swing.GroupLayout$Alignment)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(java.util.List,java.util.List,javax.swing.GroupLayout$Alignment,javax.swing.GroupLayout$Alignment)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTwoColumnPanel(java.util.List,java.util.List,javax.swing.GroupLayout$Alignment,javax.swing.GroupLayout$Alignment)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTitledColumn(java.util.List,java.util.List,int)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTitledColumn(java.util.List,java.util.List,int)> => <javax.swing.LayoutStyle$ComponentPlacement: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTitledColumn(java.util.List,java.util.List,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTitledColumn(java.util.List,java.util.List,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTitledColumn(java.util.List,java.util.List,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createTitledColumn(java.util.List,java.util.List,int)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createPanelWithHoverOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createPanelWithHoverOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createPanelWithHoverOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createPanelWithOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createPanelWithOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createPanelWithOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createPanelWithOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithHoverOverlay(javax.swing.JComponent,javax.swing.JComponent,com.github.weisj.darklaf.util.Alignment,java.util.function.Supplier)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithHoverOverlay(javax.swing.JComponent,javax.swing.JComponent,com.github.weisj.darklaf.util.Alignment,java.util.function.Supplier)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithHoverOverlay(javax.swing.JComponent,javax.swing.JComponent,com.github.weisj.darklaf.util.Alignment,java.util.function.Supplier)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithHoverOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithHoverOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithHoverOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPaneWithOverlay(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createHorizontalBox(int,javax.swing.JComponent[])> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createHorizontalBox(int,javax.swing.JComponent[])> => <javax.swing.Box: java.awt.Component createHorizontalStrut(int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createHorizontalBox(int,javax.swing.JComponent[])> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createHorizontalBox(int,javax.swing.JComponent[])> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createHorizontalBox(int,javax.swing.JComponent[])> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createVerticalBox(int,javax.swing.JComponent[])> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createVerticalBox(int,javax.swing.JComponent[])> => <javax.swing.Box: java.awt.Component createVerticalStrut(int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createVerticalBox(int,javax.swing.JComponent[])> => <javax.swing.Box: javax.swing.Box createVerticalBox()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createVerticalBox(int,javax.swing.JComponent[])> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.Box createVerticalBox(int,javax.swing.JComponent[])> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createMultiColumnPanel(java.util.List)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createMultiColumnPanel(java.util.List)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: javax.swing.JComponent createMultiColumnPanel(java.util.List)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.listener.HoverListener: void refresh()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.listener.HoverListener: void refresh()> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.listener.HoverListener: void refresh()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.listener.HoverListener: void refresh()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.listener.UIUpdater: void themeInstalled(com.github.weisj.darklaf.theme.event.ThemeChangeEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.listener.UIUpdater: void themeInstalled(com.github.weisj.darklaf.theme.event.ThemeChangeEvent)> => <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void <init>(java.util.List,com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,java.awt.Color,java.awt.Color)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.SettingsConfiguration: java.lang.String toString()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.SettingsConfiguration: boolean isResultingAppearanceEqualTo(com.github.weisj.darklaf.settings.SettingsConfiguration)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.SettingsConfiguration: boolean isResultingAppearanceEqualTo(com.github.weisj.darklaf.settings.SettingsConfiguration)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.SettingsConfiguration: boolean isResultingAppearanceEqualTo(com.github.weisj.darklaf.settings.SettingsConfiguration)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void showSettingsDialog(java.awt.Component)> => <java.awt.Dialog$ModalityType: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void showDialog(java.awt.Component,java.awt.Dialog$ModalityType)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setSystemPreferencesEnabled(boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setAccentColorFollowsSystem(boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setFontSizeFollowsSystem(boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setSelectionColorFollowsSystem(boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setThemeFollowsSystem(boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setAccentColorRule(com.github.weisj.darklaf.theme.info.AccentColorRule)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setAccentColorRule(com.github.weisj.darklaf.theme.info.AccentColorRule)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setFontSizeRule(com.github.weisj.darklaf.theme.info.FontSizeRule)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setFontSizeRule(com.github.weisj.darklaf.theme.info.FontSizeRule)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setTheme(com.github.weisj.darklaf.theme.Theme)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void setTheme(com.github.weisj.darklaf.theme.Theme)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.lang.String getTitle()> => <java.util.Locale: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.lang.String getTitle()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.lang.String getTitle()> => <java.util.Locale: java.util.Locale getDefault()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.lang.String getTitle()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void <init>()> => <javax.swing.GroupLayout$Alignment: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void <init>()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI$1: java.lang.String getToolTipText(java.awt.event.MouseEvent)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void <init>()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void <init>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: com.github.weisj.swingdsl.laf.WrappedComponent createScrollPane(javax.swing.JComponent)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: com.github.weisj.swingdsl.laf.WrappedComponent createScrollPane(javax.swing.JComponent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: com.github.weisj.swingdsl.laf.WrappedComponent createScrollPane(javax.swing.JComponent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: com.github.weisj.swingdsl.laf.WrappedComponent createScrollPane(javax.swing.JComponent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getBorderColor()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getBorderColor()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: com.github.weisj.swingdsl.laf.StateValue getDividerColor()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: com.github.weisj.swingdsl.laf.StateValue getDividerColor()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: com.github.weisj.swingdsl.laf.StateValue getDividerColor()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getHyperlinkColor()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getHyperlinkColor()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getHyperlinkClickColor()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getHyperlinkClickColor()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getColorBackgroundColor()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getColorBackgroundColor()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getSecondaryTextForeground()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getSecondaryTextForeground()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getWarningColor()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getWarningColor()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getErrorColor()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.swingdsl.DarklafComponentFactory: java.awt.Color getErrorColor()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.swingdsl.VisualPaddingUtil: void updateProperty(javax.swing.JComponent,java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.synthesised.ThemedDarklafInfo: void <init>(com.github.weisj.darklaf.theme.Theme)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.synthesised.ThemedDarklafInfo: boolean exists()> => <java.lang.Class: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.synthesised.ThemedDarklafInfo: boolean exists()> => <java.lang.Class: java.lang.Class forName(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.task.CSSBuilder$CSSGroup: com.github.weisj.darklaf.task.CSSBuilder$CSSGroup fontFamily(java.lang.String,java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.awt.RenderingHints: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.util.HashSet: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ForegroundColorGenerationTask$Bias: com.github.weisj.darklaf.task.ForegroundColorGenerationTask$Bias valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.task.ForegroundColorGenerationTask: javax.swing.plaf.ColorUIResource makeAdjustedForeground(java.awt.Color,java.awt.Color,com.github.weisj.darklaf.task.ForegroundColorGenerationTask$Bias,double,double)> => <java.lang.Math: double max(double,double)>
Found static invoke: <com.github.weisj.darklaf.task.ForegroundColorGenerationTask: javax.swing.plaf.ColorUIResource makeAdjustedForeground(java.awt.Color,java.awt.Color,com.github.weisj.darklaf.task.ForegroundColorGenerationTask$Bias,double,double)> => <java.lang.Math: double min(double,double)>
Found static invoke: <com.github.weisj.darklaf.task.ForegroundColorGenerationTask: javax.swing.plaf.ColorUIResource makeAdjustedForeground(java.awt.Color,java.awt.Color,com.github.weisj.darklaf.task.ForegroundColorGenerationTask$Bias,double,double)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ForegroundColorGenerationTask: javax.swing.plaf.ColorUIResource makeAdjustedForeground(java.awt.Color,java.awt.Color,com.github.weisj.darklaf.task.ForegroundColorGenerationTask$Bias,double,double)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.plaf.metal.MetalLookAndFeel: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.JPopupMenu: void setDefaultLightWeightPopupEnabled(boolean)>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.JPopupMenu: void setDefaultLightWeightPopupEnabled(boolean)>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.JPopupMenu: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.JPopupMenu: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.PlatformDefaultsInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.RemoveUnusedInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.text.html.StyleSheet: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.text.DefaultEditorKit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.text.StyledEditorKit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.text.html.HTMLEditorKit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: void run(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <javax.swing.text.StyleContext: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.transfer.ObjectTransferable: void <init>(java.lang.Object,java.lang.Class)> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.transfer.ObjectTransferable: void <init>(java.lang.Object,java.lang.Class)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.transfer.ObjectTransferable: void <init>(java.lang.Object,java.lang.Class)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.transfer.ObjectTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.transfer.TransferUtil: com.github.weisj.darklaf.util.Pair setupDnD(javax.swing.JComponent,int,java.lang.Class,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Function)> => <java.awt.dnd.DragSource: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.transfer.TransferUtil: com.github.weisj.darklaf.util.Pair setupDnD(javax.swing.JComponent,int,java.lang.Class,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Function)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.transfer.TransferUtil: com.github.weisj.darklaf.util.Pair setupDnD(javax.swing.JComponent,int,java.lang.Class,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Function)> => <java.util.concurrent.atomic.AtomicBoolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory$PopupType: com.github.weisj.darklaf.ui.DarkPopupFactory$PopupType valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: java.awt.Rectangle getPopupBounds(javax.swing.JComponent,java.awt.Dimension,java.awt.Dimension,boolean,boolean)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: java.awt.Rectangle getPopupBounds(javax.swing.JComponent,java.awt.Dimension,java.awt.Dimension,boolean,boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.ButtonConstants: boolean convertIconButtonToBorderless(javax.swing.AbstractButton)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.ButtonConstants: boolean convertIconButtonToBorderless(javax.swing.AbstractButton)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonListener: void mouseEntered(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonListener: void mouseEntered(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI$DarkButtonLayout: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void <init>()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicGraphicsUtils: java.awt.Dimension getPreferredButtonSize(javax.swing.AbstractButton,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicGraphicsUtils: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void updateMargins(javax.swing.AbstractButton)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: boolean contains(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.CellUtil: void updateColors(javax.swing.UIDefaults)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.CellUtil: void updateColors(javax.swing.UIDefaults)> => <javax.swing.UIManager: javax.swing.UIDefaults getDefaults()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.CellUtil: java.awt.Color getListBackground(java.awt.Component,javax.swing.JList,boolean,int)> => <java.lang.Math: int abs(int)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.CellUtil: java.awt.Color getListBackground(java.awt.Component,javax.swing.JList,boolean,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.CellUtil: void setupBackground(java.awt.Component,java.awt.Color)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.CellUtil: void setupBackground(java.awt.Component,java.awt.Color)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.CellUtil: void setupBackground(java.awt.Component,java.awt.Color)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.CellUtil: void setSelectedFlag(java.awt.Component,boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.CellUtil: void setSelectedFlag(java.awt.Component,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererCheckBox: void <init>(boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererCheckBox: void <init>(boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererCheckBox: void <init>(boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererRadioButton: void <init>(boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererRadioButton: void <init>(boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererRadioButton: void <init>(boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton$CellCheckBox: void <init>(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton$CellCheckBox: void <init>(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton$CellCheckBox: void <init>(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton$CellRadioButton: void <init>(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton$CellRadioButton: void <init>(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton$CellRadioButton: void <init>(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton$CellTristateButton: void <init>(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton$CellTristateButton: void <init>(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton$CellTristateButton: void <init>(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton: void <init>(javax.swing.JToggleButton)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton: void <init>(javax.swing.JToggleButton)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton: void <init>(javax.swing.JToggleButton)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton: void <init>(javax.swing.JToggleButton)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton: void <init>(javax.swing.JToggleButton)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererTristateButton: void <init>(boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererTristateButton: void <init>(boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererTristateButton: void <init>(boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void <init>(com.github.weisj.darklaf.ui.cell.hint.IndexedCellContainer)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void <init>(com.github.weisj.darklaf.ui.cell.hint.IndexedCellContainer)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void <init>(com.github.weisj.darklaf.ui.cell.hint.IndexedCellContainer)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void repaint()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void repaint()> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void repaint()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void repaint()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorPreviewComponent: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorPreviewComponent: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$ColorWheelPaintContext: java.awt.image.ColorModel getColorModel()> => <java.awt.image.ColorModel: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$ColorWheelPaintContext: java.awt.image.ColorModel getColorModel()> => <java.awt.image.ColorModel: java.awt.image.ColorModel getRGBdefault()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$InnerPaintContext: java.awt.image.Raster getRaster(int,int,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$InnerPaintContext: java.awt.image.Raster getRaster(int,int,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$InnerPaintContext: java.awt.image.Raster getRaster(int,int,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$OuterPaintContext: java.awt.image.Raster getRaster(int,int,int,int)> => <java.awt.Color: int HSBtoRGB(float,float,float)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$OuterPaintContext: java.awt.image.Raster getRaster(int,int,int,int)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$OuterPaintContext: java.awt.image.Raster getRaster(int,int,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$OuterPaintContext: java.awt.image.Raster getRaster(int,int,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$OuterPaintContext: java.awt.image.Raster getRaster(int,int,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$PickArea: com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$PickArea valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void <init>()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int[] getValuesForModel(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int[] getValuesForModel(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int[] getValuesForModel(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int[] getValuesForModel(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int[] getValuesForModel(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int[] getValuesForModel(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int[] getValuesForModel(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int[] getValuesForModel(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void setColor(java.lang.Object,java.awt.Color)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void paint(java.awt.Graphics)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void paint(java.awt.Graphics)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void paint(java.awt.Graphics)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void paint(java.awt.Graphics)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void paint(java.awt.Graphics)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void paint(java.awt.Graphics)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void createShapes(float,float,int)> => <java.awt.geom.AffineTransform: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void createShapes(float,float,int)> => <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Dimension getMinimumSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter$1: void insertString(javax.swing.text.DocumentFilter$FilterBypass,int,java.lang.String,javax.swing.text.AttributeSet)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter$1: void insertString(javax.swing.text.DocumentFilter$FilterBypass,int,java.lang.String,javax.swing.text.AttributeSet)> => <java.util.Locale: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter$1: void replace(javax.swing.text.DocumentFilter$FilterBypass,int,int,java.lang.String,javax.swing.text.AttributeSet)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter$1: void replace(javax.swing.text.DocumentFilter$FilterBypass,int,int,java.lang.String,javax.swing.text.AttributeSet)> => <java.util.Locale: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void actionPerformed(java.awt.event.ActionEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void actionPerformed(java.awt.event.ActionEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.Object stringToValue(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: java.lang.String valueToString(java.lang.Object)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorWheelPanel: void <init>(boolean,boolean)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorWheelPanel: void <init>(boolean,boolean)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorWheelPanel: void <init>(boolean,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorWheelPanel: void <init>(boolean,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorWheelPanel: void <init>(boolean,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.Box: java.awt.Component createVerticalStrut(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void <init>(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void initInputFields(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void initInputFields(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void initInputFields(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.JTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void initInputFields(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.JFormattedTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void initInputFields(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void initInputFields(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: java.lang.String getDisplayName()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: java.lang.String getDisplayName()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <javax.swing.plaf.basic.BasicColorChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicColorChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI: void installUI(javax.swing.JComponent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI: void installUI(javax.swing.JComponent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI: void installUI(javax.swing.JComponent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkPreviewPanel: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$MainSwatchKeyListener: void keyPressed(java.awt.event.KeyEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$MainSwatchKeyListener: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$MainSwatchKeyListener: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$MainSwatchListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$MainSwatchListener: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$MainSwatchListener: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$RecentSwatchKeyListener: void keyPressed(java.awt.event.KeyEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$RecentSwatchKeyListener: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$RecentSwatchKeyListener: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$RecentSwatchListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$RecentSwatchListener: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel$RecentSwatchListener: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel: java.lang.String getDisplayName()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkSwatchesChooserPanel: java.lang.String getDisplayName()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: java.lang.String getToolTipText(java.awt.event.MouseEvent)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: void setMostRecentColor(java.awt.Color)> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: void setMostRecentColor(java.awt.Color)> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: void setMostRecentColor(java.awt.Color)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$1: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$1: void mouseDragged(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$1: void mouseDragged(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$2: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$2: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$2: void mousePressed(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit$1: java.lang.String formatValue(int)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit$1: java.lang.String formatValue(int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit$1: java.lang.String formatValue(int)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit$1: java.lang.String formatValue(int)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit$2: java.lang.String formatValue(int)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit$2: java.lang.String formatValue(int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit$2: java.lang.String formatValue(int)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit$2: java.lang.String formatValue(int)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit: com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void setValue(int)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void setValue(int)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void updateUI()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void updateUI()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void updateUI()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: java.awt.Dimension getMinimumSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: java.awt.Dimension getMinimumSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: java.lang.String getToolTipText(java.awt.event.MouseEvent)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SwatchPanel$2: void keyPressed(java.awt.event.KeyEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SwatchPanel$2: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SwatchPanel$2: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SwatchPanel: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SwatchPanel: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SwatchPanel: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SwatchPanel: java.lang.String getToolTipText(java.awt.event.MouseEvent)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxBorder: void <init>(com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxBorder: void <init>(com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxBorder: void <init>(com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxBorder: void <init>(com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxBorder: void <init>(com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxBorder: void <init>(com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI$2: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI$2: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: void paintCurrentValue(java.awt.Graphics,java.awt.Rectangle,boolean,java.awt.Component)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserListViewBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserListViewBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI$DarkFileView: javax.swing.Icon getIcon(java.io.File)> => <java.nio.file.Files: java.lang.String probeContentType(java.nio.file.Path)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI$DarkFileView: javax.swing.Icon getIcon(java.io.File)> => <java.nio.file.Files: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI$DarkFileView: javax.swing.Icon getIcon(java.io.File)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void installComponents(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void installComponents(javax.swing.JFileChooser)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void installComponents(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void installComponents(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$AlignedLabel: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$ButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$ButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$ButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$ButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$ButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$ButtonAreaLayout: void layoutContainer(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$ButtonAreaLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$ButtonAreaLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$FilterComboBoxModel: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$FilterComboBoxModel: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$MetalFileChooserUIAccessor: boolean isDirectorySelected()> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$MetalFileChooserUIAccessor: java.io.File getDirectory()> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$MetalFileChooserUIAccessor: java.awt.event.MouseListener createDoubleClickListener(javax.swing.JList)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.metal.MetalFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: java.awt.Dimension getMaximumSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$1: int getNextMatch(java.lang.String,int,javax.swing.text.Position$Bias)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$1: int getNextMatch(java.lang.String,int,javax.swing.text.Position$Bias)> => <javax.swing.text.Position$Bias: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkFileRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkFileRenderer: java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean)> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.event.MouseEvent convertMouseEvent(java.awt.Component,java.awt.event.MouseEvent,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.event.InputEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.event.MouseEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DetailsTableCellEditor$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane$DetailsTableCellEditor$1: void ancestorAdded(javax.swing.event.AncestorEvent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createList()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createList()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createList()> => <javax.swing.LookAndFeel: void installColors(javax.swing.JComponent,java.lang.String,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createList()> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createList()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createList()> => <javax.swing.DefaultListCellRenderer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createList()> => <javax.swing.JList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createList()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createList()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.LookAndFeel: void installColors(javax.swing.JComponent,java.lang.String,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.LookAndFeel: void installColors(javax.swing.JComponent,java.lang.String,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.SwingUtilities: javax.swing.ActionMap getUIActionMap(javax.swing.JComponent)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.table.DefaultTableCellRenderer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <javax.swing.JTable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPanel createDetailsView()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPopupMenu getComponentPopupMenu()> => <javax.swing.JPopupMenu: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPopupMenu getComponentPopupMenu()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPopupMenu getComponentPopupMenu()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPopupMenu getComponentPopupMenu()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPopupMenu getComponentPopupMenu()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPopupMenu getComponentPopupMenu()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPopupMenu getComponentPopupMenu()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JPopupMenu getComponentPopupMenu()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JMenu getViewMenu()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JMenu getViewMenu()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JMenu getViewMenu()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JMenu getViewMenu()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JMenu getViewMenu()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JMenu getViewMenu()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: javax.swing.JMenu getViewMenu()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$1FilePaneAction: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$1FilePaneAction: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$1FilePaneAction: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$1FilePaneAction: boolean isEnabled()> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$1FilePaneAction: boolean isEnabled()> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$2: void keyTyped(java.awt.event.KeyEvent)> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$2: void keyTyped(java.awt.event.KeyEvent)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStrokeForEvent(java.awt.event.KeyEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$2: void keyTyped(java.awt.event.KeyEvent)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$AlignableTableHeaderRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$AlignableTableHeaderRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge,javax.swing.JFileChooser)> => <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Long: java.lang.Long valueOf(long)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Long: java.lang.Long valueOf(long)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Long: java.lang.Long valueOf(long)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Long: java.lang.Long valueOf(long)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.text.MessageFormat: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Long: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.text.MessageFormat: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Long: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.text.MessageFormat: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Long: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.text.MessageFormat: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableCellRenderer: java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)> => <java.lang.Long: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: boolean isCellEditable(int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: boolean isCellEditable(int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: boolean isCellEditable(int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <javax.swing.JOptionPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <java.text.MessageFormat: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <javax.swing.JOptionPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void setValueAt(java.lang.Object,int,int)> => <java.text.MessageFormat: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableRowSorter$SorterModelWrapper: java.lang.Integer getIdentifier(int)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableRowSorter$SorterModelWrapper: java.lang.Integer getIdentifier(int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableRowSorter: void sort()> => <sun.awt.shell.ShellFolder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableRowSorter: void sort()> => <sun.awt.shell.ShellFolder: java.lang.Object invoke(java.util.concurrent.Callable)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableRowSorter: void sort()> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$FileChooserUIAccessor)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$FileChooserUIAccessor)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$FileChooserUIAccessor)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: boolean canWrite(java.io.File,javax.swing.JFileChooser)> => <sun.awt.shell.ShellFolder: sun.awt.shell.ShellFolder getShellFolder(java.io.File)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: boolean canWrite(java.io.File,javax.swing.JFileChooser)> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: boolean canWrite(java.io.File,javax.swing.JFileChooser)> => <sun.awt.shell.ShellFolder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: boolean canWrite(java.io.File,javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: boolean canWrite(java.io.File,javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: boolean canWrite(java.io.File,javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: boolean usesShellFolder(javax.swing.JFileChooser)> => <javax.swing.filechooser.FileSystemView: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: boolean usesShellFolder(javax.swing.JFileChooser)> => <javax.swing.filechooser.FileSystemView: javax.swing.filechooser.FileSystemView getFileSystemView()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void setViewType(int)> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void setViewType(int)> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void setViewType(int)> => <java.awt.DefaultKeyboardFocusManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void setViewType(int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void setViewType(int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void setViewType(int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: javax.swing.Action[] getActions()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: javax.swing.Action[] getActions()> => <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: javax.swing.Action[] getActions()> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.FileTextField: java.awt.Dimension getMaximumSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkDesktopIconBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkDesktopIconBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkDesktopPaneUI: void <init>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkDesktopPaneUI: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkDesktopPaneUI: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkDesktopPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicDesktopPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkDesktopPaneUI: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkDesktopPaneUI: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkDesktopPaneUI: java.awt.Rectangle getContentRegion()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <javax.swing.plaf.basic.BasicInternalFrameTitlePane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicInternalFrameTitlePane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicInternalFrameTitlePane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.InternalFrameMenuBar: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.InternalFrameMenuBar: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.InternalFrameMenuBar: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.label.DarkLabelUI: void <init>()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.label.DarkLabelUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListCellFocusBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListCellFocusBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void keyTyped(java.awt.event.KeyEvent)> => <javax.swing.text.Position$Bias: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void keyTyped(java.awt.event.KeyEvent)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void keyTyped(java.awt.event.KeyEvent)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void keyTyped(java.awt.event.KeyEvent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void intervalAdded(javax.swing.event.ListDataEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void intervalAdded(javax.swing.event.ListDataEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void intervalAdded(javax.swing.event.ListDataEvent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void valueChanged(javax.swing.event.ListSelectionEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void valueChanged(javax.swing.event.ListSelectionEvent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void valueChanged(javax.swing.event.ListSelectionEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void valueChanged(javax.swing.event.ListSelectionEvent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void valueChanged(javax.swing.event.ListSelectionEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void loadActionMap(com.github.weisj.darklaf.util.LazyActionMap)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void loadActionMap(com.github.weisj.darklaf.util.LazyActionMap)> => <javax.swing.TransferHandler: javax.swing.Action getPasteAction()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void loadActionMap(com.github.weisj.darklaf.util.LazyActionMap)> => <javax.swing.TransferHandler: javax.swing.Action getPasteAction()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void loadActionMap(com.github.weisj.darklaf.util.LazyActionMap)> => <javax.swing.TransferHandler: javax.swing.Action getCopyAction()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void loadActionMap(com.github.weisj.darklaf.util.LazyActionMap)> => <javax.swing.TransferHandler: javax.swing.Action getCopyAction()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void loadActionMap(com.github.weisj.darklaf.util.LazyActionMap)> => <javax.swing.TransferHandler: javax.swing.Action getCutAction()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void loadActionMap(com.github.weisj.darklaf.util.LazyActionMap)> => <javax.swing.TransferHandler: javax.swing.Action getCutAction()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.DefaultListCellRenderer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent)> => <java.awt.Component$BaselineResizeBehavior: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installUI(javax.swing.JComponent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installUI(javax.swing.JComponent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getCellBounds(javax.swing.JList,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getCellBounds(javax.swing.JList,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getCellBounds(javax.swing.JList,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuBarBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuBarBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuBarBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void installUI(javax.swing.JComponent)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void installUI(javax.swing.JComponent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void installUI(javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuUI$1: void mouseEntered(java.awt.event.MouseEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuUI$1: void mouseEntered(java.awt.event.MouseEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicMenuUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.MenuItemLayoutDelegate: void setDelegate(javax.swing.JMenuItem)> => <java.awt.font.TextAttribute: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.MenuItemLayoutDelegate: void setDelegate(javax.swing.JMenuItem)> => <java.text.AttributedCharacterIterator$Attribute: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void mousePressed(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void mousePressed(java.awt.event.MouseEvent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Math: float max(float,float)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Math: float max(float,float)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.String: java.lang.String valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneBorder: void <init>()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI$DarkButtonAreaLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.optionpane.DarkOptionPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicOptionPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.UIManager: javax.swing.UIDefaults getDefaults()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuSeparatorUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicPopupMenuUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: java.util.List getPopups()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: java.util.List getPopups()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: java.util.List getPopups()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: void installDefaults()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: void installDefaults()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void install()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void install()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void uninstall()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void uninstall()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void stateChanged(javax.swing.event.ChangeEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void stateChanged(javax.swing.event.ChangeEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void eventDispatched(java.awt.AWTEvent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void eventDispatched(java.awt.AWTEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void eventDispatched(java.awt.AWTEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void eventDispatched(java.awt.AWTEvent)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void eventDispatched(java.awt.AWTEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void eventDispatched(java.awt.AWTEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$1: void menuKeyPressed(javax.swing.event.MenuKeyEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$1: void menuKeyPressed(javax.swing.event.MenuKeyEvent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: javax.swing.Popup createPopup(javax.swing.JPopupMenu,int,int,int)> => <javax.swing.PopupFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: javax.swing.Popup createPopup(javax.swing.JPopupMenu,int,int,int)> => <javax.swing.PopupFactory: javax.swing.PopupFactory getSharedInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: javax.swing.Popup createPopup(javax.swing.JPopupMenu,int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: javax.swing.Popup createPopup(javax.swing.JPopupMenu,int,int,int)> => <javax.swing.PopupFactory: javax.swing.PopupFactory getSharedInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: javax.swing.Popup createPopup(javax.swing.JPopupMenu,int,int,int)> => <javax.swing.PopupFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: javax.swing.Popup createPopup(javax.swing.JPopupMenu,int,int,int)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: javax.swing.Popup createPopup(javax.swing.JPopupMenu,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.progressbar.DarkProgressBarUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicProgressBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void uninstallUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void hierarchyChanged(java.awt.event.HierarchyEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void hierarchyChanged(java.awt.event.HierarchyEvent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension maximumLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension maximumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension maximumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension maximumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension maximumLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkSubstanceRootLayout: java.awt.Dimension maximumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener: void <init>(javax.swing.JScrollBar,com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener: void <init>(javax.swing.JScrollBar,com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarUI)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener: void adjustmentValueChanged(java.awt.event.AdjustmentEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarUI$1: void stateChanged(javax.swing.event.ChangeEvent)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollPaneUI$1: void layoutContainer(java.awt.Container)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollPaneUI$1: void layoutContainer(java.awt.Container)> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.EmptyButton: java.awt.Dimension getMaximumSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.ScrollBarUtil: void doScroll(javax.swing.JScrollBar,javax.swing.JViewport,java.awt.event.MouseWheelEvent,boolean)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.ScrollBarUtil: void doScroll(javax.swing.JScrollBar,javax.swing.JViewport,java.awt.event.MouseWheelEvent,boolean)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.ScrollBarUtil: void doScroll(javax.swing.JScrollBar,javax.swing.JViewport,java.awt.event.MouseWheelEvent,boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.ScrollBarUtil: void doScroll(javax.swing.JScrollBar,javax.swing.JViewport,java.awt.event.MouseWheelEvent,boolean)> => <java.lang.Math: int abs(int)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.ScrollBarUtil: void doScroll(javax.swing.JScrollBar,javax.swing.JViewport,java.awt.event.MouseWheelEvent,boolean)> => <java.lang.Math: int abs(int)>
Found static invoke: <com.github.weisj.darklaf.ui.separator.DarkSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.separator.DarkSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.separator.DarkSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.separator.DarkSeparatorUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.separator.DarkSeparatorUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.separator.DarkSeparatorUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.separator.DarkSeparatorUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI$SnapTrackListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI$SnapTrackListener: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: void <init>(javax.swing.JSlider)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: java.awt.Dimension getPreferredHorizontalSize()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: java.awt.Dimension getPreferredHorizontalSize()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: java.awt.Dimension getPreferredHorizontalSize()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: java.awt.Dimension getThumbSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: java.awt.Dimension getThumbSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: java.awt.Dimension getThumbSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: java.awt.Rectangle getThumbRect()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerListener: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerListener: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerListener: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerListener: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicSpinnerUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitbutton.DarkSplitButtonUI$DarkSplitButtonLayout: void layoutContainer(java.awt.Container)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitbutton.DarkSplitButtonUI$DarkSplitButtonLayout: void layoutContainer(java.awt.Container)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitbutton.DarkSplitButtonUI: void <init>()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitbutton.DarkSplitButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitbutton.DarkSplitButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitbutton.DarkSplitButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.splitbutton.DarkSplitButtonUI: void updateDefaultAction()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitbutton.DarkSplitButtonUI: void updateDefaultAction()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkNonContinuousSplitPaneDivider: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkNonContinuousSplitPaneDivider: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDivider$OneTouchLeftButton: javax.swing.Icon getIcon()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDivider$OneTouchLeftButton: javax.swing.Icon getIcon()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDivider$OneTouchRightButton: javax.swing.Icon getIcon()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDivider$OneTouchRightButton: javax.swing.Icon getIcon()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDivider: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDivider: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDivider: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDivider: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDivider: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDividerBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDividerPainter: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDividerPainter: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDividerPainter: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneDividerPainter: void <init>(com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI$1: void layoutContainer(java.awt.Container)> => <javax.swing.plaf.basic.BasicSplitPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicSplitPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI: javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI: javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI: javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI: javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DarkSplitPaneUI: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicSplitPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.splitpane.DividerStyle: com.github.weisj.darklaf.ui.splitpane.DividerStyle valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabPanel: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,int)> => <javax.swing.JViewport: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,int)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,int)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,int)> => <javax.swing.JPopupMenu: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int abs(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void mouseDragged(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneLayout: void layoutContainer(java.awt.Container)> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: boolean isDescendingFrom(java.awt.Component,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneLayout: void layoutContainer(java.awt.Container)> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void layoutContainer(java.awt.Container)> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: boolean isDescendingFrom(java.awt.Component,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void layoutContainer(java.awt.Container)> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void layoutContainer(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void layoutContainer(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void <init>()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: java.awt.Rectangle getTabAreaBounds()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: javax.swing.Icon getNewTabIcon()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: javax.swing.Icon getNewTabIcon()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createNewTabButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createNewTabButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createNewTabButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createMoreTabsButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createMoreTabsButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createMoreTabsButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge$Actions: void actionPerformed(java.awt.event.ActionEvent)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void <init>()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void <init>()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent)> => <java.awt.Component$BaselineResizeBehavior: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent)> => <java.awt.Component$BaselineResizeBehavior: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent)> => <java.awt.Component$BaselineResizeBehavior: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: java.awt.Rectangle getTabBounds(javax.swing.JTabbedPane,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton$MoreTabsIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton$MoreTabsIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton$MoreTabsIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton$MoreTabsIcon: int getIconWidth()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton$MoreTabsIcon: int getIconWidth()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton$MoreTabsIcon: int getIconWidth()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton$MoreTabsIcon: int getIconWidth()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton$MoreTabsIcon: int getIconWidth()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.ScrollableTabPanel: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.ScrollableTabPanel: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.ScrollableTabSupport: java.lang.String toString()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.ScrollableTabViewport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.ScrollableTabViewport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer: void doLayout()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer: void doLayout()> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer: void doLayout()> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer: java.awt.Insets getInsets()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer: java.awt.Insets getInsets()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: java.awt.Component findFocusOwner(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabTransferable: java.awt.Rectangle getTabBounds()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabTransferable: boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabTransferable: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabbedPaneDragHandler: void dragDropEnd(java.awt.dnd.DragSourceDropEvent)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabbedPaneDragHandler: void dragDropEnd(java.awt.dnd.DragSourceDropEvent)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler: void <init>()> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler: void exportAsDrag(javax.swing.JComponent,java.awt.event.InputEvent,int)> => <java.awt.GraphicsEnvironment: boolean isHeadless()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler: void exportAsDrag(javax.swing.JComponent,java.awt.event.InputEvent,int)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler: void dragOver(java.awt.dnd.DropTargetDragEvent)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler: void dragOver(java.awt.dnd.DropTargetDragEvent)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: int getDroppedTabIndex(java.awt.Rectangle,javax.swing.JTabbedPane,com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,java.awt.Point)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: int getDroppedTabIndex(java.awt.Rectangle,javax.swing.JTabbedPane,com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,java.awt.Point)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: int getDroppedTabIndex(java.awt.Rectangle,javax.swing.JTabbedPane,com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,java.awt.Point)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: int getDroppedTabIndex(java.awt.Rectangle,javax.swing.JTabbedPane,com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,java.awt.Point)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: int getDroppedTabIndex(java.awt.Rectangle,javax.swing.JTabbedPane,com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,java.awt.Point)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: int getDroppedTabIndex(java.awt.Rectangle,javax.swing.JTabbedPane,com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,java.awt.Point)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: int getDroppedTabIndex(java.awt.Rectangle,javax.swing.JTabbedPane,com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,java.awt.Point)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: int getDroppedTabIndex(java.awt.Rectangle,javax.swing.JTabbedPane,com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,java.awt.Point)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: java.awt.Rectangle getDropRect(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,javax.swing.JTabbedPane,javax.swing.JTabbedPane,java.awt.Point,java.awt.Rectangle,int,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: java.awt.Rectangle getDropRect(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,javax.swing.JTabbedPane,javax.swing.JTabbedPane,java.awt.Point,java.awt.Rectangle,int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: java.awt.Rectangle getDropRect(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,javax.swing.JTabbedPane,javax.swing.JTabbedPane,java.awt.Point,java.awt.Rectangle,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton: void <init>(javax.swing.Icon,com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton: void <init>(javax.swing.Icon,com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton: void <init>(javax.swing.Icon,com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI)> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton: void <init>(javax.swing.Icon,com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton: void <init>(javax.swing.Icon,com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton: void <init>(javax.swing.Icon,com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton: void <init>(javax.swing.Icon,com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton: void <init>(javax.swing.Icon,com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: java.awt.Dimension getMaximumSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: void <init>(com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: void <init>(com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: void <init>(com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: void <init>(com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: void <init>(com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabContainerUI$1: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabContainerUI$1: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabContainerUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabLabelUI$1: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabLabelUI$1: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabLabelUI$1: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabLabelUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicLabelUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabLabelUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabLabelUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void <init>()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void <init>()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$DarkTabFrameTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createNewTabButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$DarkTabFrameTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createNewTabButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$DarkTabFrameTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createNewTabButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$DarkTabFrameTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createMoreTabsButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$DarkTabFrameTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createMoreTabsButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$DarkTabFrameTabbedPaneUI: com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer createMoreTabsButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: javax.swing.JTabbedPane createTabbedPane()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: javax.swing.JTabbedPane createTabbedPane()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: javax.swing.JTabbedPane createTabbedPane()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabDragListener: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabDragListener: void mouseDragged(java.awt.event.MouseEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabDragListener: void mouseDragged(java.awt.event.MouseEvent)> => <java.awt.event.InputEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabDragListener: void mouseDragged(java.awt.event.MouseEvent)> => <java.awt.event.MouseEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabDragListener: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: int getTabWidth(java.awt.Component)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: int getTabWidth(java.awt.Component)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: void setDraggedOver(boolean)> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: void setDraggedOver(boolean)> => <java.util.Arrays: void fill(boolean[],boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabTransferable: java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabTransferable: boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabTransferable: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabbedPaneDragHandler: void dragGestureRecognized(java.awt.dnd.DragGestureEvent)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabbedPaneDragHandler: void dragDropEnd(java.awt.dnd.DragSourceDropEvent)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabbedPaneDragHandler: void dragDropEnd(java.awt.dnd.DragSourceDropEvent)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void <init>()> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void exportAsDrag(javax.swing.JComponent,java.awt.event.InputEvent,int)> => <java.awt.GraphicsEnvironment: boolean isHeadless()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void exportAsDrag(javax.swing.JComponent,java.awt.event.InputEvent,int)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void dragOver(java.awt.dnd.DropTargetDragEvent)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void dragOver(java.awt.dnd.DropTargetDragEvent)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: boolean importData(javax.swing.JComponent,java.awt.datatransfer.Transferable)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: boolean importData(javax.swing.JComponent,java.awt.datatransfer.Transferable)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameUtil: void installAccelerator(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameUtil: void installAccelerator(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameUtil: void installAccelerator(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameUtil: void installAccelerator(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameUtil: void installAccelerator(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameUtil: void installAccelerator(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameUtil: void uninstallAccelerator(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.components.tabframe.TabFrameTab)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableCellFocusBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableCellFocusBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableCellFocusBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableScrollPaneBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableScrollPaneBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void keyTyped(java.awt.event.KeyEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.LookAndFeel: void uninstallBorder(javax.swing.JComponent)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <java.lang.String: java.lang.String valueOf(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <javax.swing.TransferHandler: javax.swing.Action getCopyAction()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <java.lang.String: java.lang.String valueOf(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <javax.swing.TransferHandler: javax.swing.Action getCutAction()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <java.lang.String: java.lang.String valueOf(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean ignoreKeyCodeOnEdit(java.awt.event.KeyEvent,javax.swing.JTable)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUIBridge: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.JTable$PrintMode: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableCellContainer: com.github.weisj.darklaf.util.Pair getCellPosition(java.awt.Point)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableCellContainer: com.github.weisj.darklaf.util.Pair getCellPosition(java.awt.Point)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableCellContainer: com.github.weisj.darklaf.util.Pair getCellPosition(java.awt.Point)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void mouseReleased(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void dragStarting(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void mouseDragged(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: void installUI(javax.swing.JComponent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: void installUI(javax.swing.JComponent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.table.DefaultTableCellRenderer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent)> => <java.awt.Component$BaselineResizeBehavior: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TextTableCellEditorBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TextTableCellEditorBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderCorner: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderCorner: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderCorner: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTableHeaderUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: void paintDraggedArea(java.awt.Graphics2D,boolean,int,int,java.awt.Color,javax.swing.table.TableColumn)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkColorTableCellRendererEditor: void <init>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkColorTableCellRendererEditor: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkColorTableCellRendererEditor: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkColorTableCellRendererEditor: java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkColorTableCellRendererEditor: java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor$2: void setValue(java.lang.Object)> => <java.text.NumberFormat: java.text.NumberFormat getInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor$2: void setValue(java.lang.Object)> => <java.text.DateFormat: java.text.DateFormat getInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor$3: java.lang.Object getCellEditorValue()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor$3: java.lang.Object getCellEditorValue()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>()> => <javax.swing.JTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>()> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>(javax.swing.JTextField)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>(javax.swing.JTextField)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>(javax.swing.JComboBox)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>(javax.swing.JComboBox)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>(javax.swing.JSpinner)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>(javax.swing.JToggleButton)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <init>(javax.swing.JToggleButton)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: boolean isCellEditable(java.util.EventObject)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellRendererDelegate: void setupBorderStyle(javax.swing.JTable,int,int,javax.swing.JComponent,boolean,boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.IconWrapper: void doLayout()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.taskpane.DarkTaskPaneUI$DarkContentPaneBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret$CaretStyle: com.github.weisj.darklaf.ui.text.DarkCaret$CaretStyle valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void <init>(com.github.weisj.darklaf.ui.text.DarkCaret$CaretStyle,com.github.weisj.darklaf.ui.text.DarkCaret$CaretStyle)> => <javax.swing.text.DefaultCaret: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void <init>(com.github.weisj.darklaf.ui.text.DarkCaret$CaretStyle,com.github.weisj.darklaf.ui.text.DarkCaret$CaretStyle)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isMiddleMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.text.DefaultCaret: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isRightMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void paint(java.awt.Graphics)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void paint(java.awt.Graphics)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void updateDot(int,javax.swing.text.Position$Bias)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void updateDot(int,javax.swing.text.Position$Bias)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void updateDot(int,javax.swing.text.Position$Bias)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void updateDot(int,javax.swing.text.Position$Bias)> => <javax.swing.text.Position$Bias: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void updateDot(int,javax.swing.text.Position$Bias)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkEditorPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkFormattedTextFieldUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkFormattedTextFieldUI: void insertUpdate(javax.swing.event.DocumentEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkFormattedTextFieldUI: void insertUpdate(javax.swing.event.DocumentEvent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkFormattedTextFieldUI: void removeUpdate(javax.swing.event.DocumentEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkFormattedTextFieldUI: void removeUpdate(javax.swing.event.DocumentEvent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkPasswordFieldUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkPasswordFieldUI: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkPasswordFieldUI: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextAreaUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$1: void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent)> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$1: void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent)> => <java.lang.System: long currentTimeMillis()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$1: void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$2: void keyTyped(java.awt.event.KeyEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$2: void keyTyped(java.awt.event.KeyEvent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$ClickAction: com.github.weisj.darklaf.ui.text.DarkTextFieldUI$ClickAction valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: boolean isOver(java.awt.Point,javax.swing.Icon,java.awt.Point)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: boolean isSearchFieldWithHistoryPopup(javax.swing.text.JTextComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void propertyChange(java.beans.PropertyChangeEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextListener: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextListener: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.SwingUtilities: boolean isDescendingFrom(java.awt.Component,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextListener: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextListener: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextPaneUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: java.awt.Rectangle getDrawingRect(javax.swing.text.JTextComponent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.action.SelectLineAction$EndLineAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.action.SelectLineAction$EndLineAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found static invoke: <com.github.weisj.darklaf.ui.text.action.SelectWordAction$BeginWordAction: int getWordStart(javax.swing.text.JTextComponent,int)> => <javax.swing.text.Utilities: int getWordStart(javax.swing.text.JTextComponent,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkPasswordFieldUIBridge: javax.swing.text.View create(javax.swing.text.Element)> => <javax.swing.text.PasswordView: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkPasswordFieldUIBridge: javax.swing.text.View create(javax.swing.text.Element)> => <javax.swing.text.View: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: javax.swing.text.View create(javax.swing.text.Element)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: javax.swing.text.View create(javax.swing.text.Element)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextFieldUIBridge: javax.swing.text.View create(javax.swing.text.Element)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextFieldUIBridge: int getBaseline(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextFieldUIBridge: java.awt.Component$BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CopyMenuItem: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CopyMenuItem: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CutMenuItem: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CutMenuItem: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DarkTextPopupMenu: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DarkTextPopupMenu: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DarkTextPopupMenu: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DarkTextPopupMenu: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DarkTextPopupMenu: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DarkTextPopupMenu: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DarkTextPopupMenu: void <init>(javax.swing.text.JTextComponent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DarkTextPopupMenu: void <init>(javax.swing.text.JTextComponent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DeleteMenuItem: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DeleteMenuItem: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.PasteMenuItem: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.PasteMenuItem: void <init>(javax.swing.text.JTextComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.titledborder.DarkTitledBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.titledborder.DarkTitledBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ButtonGroupInfo: void <init>(javax.swing.AbstractButton)> => <java.util.HashSet: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonKeyHandler: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonKeyHandler: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonKeyHandler: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.AWTKeyStroke: java.awt.AWTKeyStroke getAWTKeyStrokeForEvent(java.awt.event.KeyEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonKeyHandler: void keyPressed(java.awt.event.KeyEvent)> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonListener: void <init>(javax.swing.AbstractButton,com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonListener: void <init>(javax.swing.AbstractButton,com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: boolean contains(javax.swing.JComponent,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: boolean contains(javax.swing.JComponent,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: boolean contains(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: boolean contains(javax.swing.JComponent,int,int)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void installActions()> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void installActions()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void installActions()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void installActions()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void installActions()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void installActions()> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void uninstallActions()> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void uninstallActions()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void uninstallActions()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void uninstallActions()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void uninstallActions()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.ToggleButtonFocusNavigationActions: void uninstallActions()> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: void installDefaults(javax.swing.AbstractButton)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: void installDefaults(javax.swing.AbstractButton)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void <init>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void installDefaults()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void installDefaults()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void installDefaults()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void <init>()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void <init>()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void installDefaults(javax.swing.AbstractButton)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarBorder: void <init>()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarBorder: void <init>()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void <init>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void <init>()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToolBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void setFloating(boolean,java.awt.Point)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void setFloating(boolean,java.awt.Point)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DropPreviewPanel: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DropPreviewPanel: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.JDragWindow: java.awt.Insets getInsets()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkDefaultToolTipBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkDefaultToolTipBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkDefaultToolTipBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkMacTooltipUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToolTipUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$1: void mouseExited(java.awt.event.MouseEvent)> => <javax.swing.ToolTipManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$1: void mouseExited(java.awt.event.MouseEvent)> => <javax.swing.ToolTipManager: javax.swing.ToolTipManager sharedInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$1: void mouseExited(java.awt.event.MouseEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$1: void mouseExited(java.awt.event.MouseEvent)> => <java.awt.event.InputEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$1: void mouseExited(java.awt.event.MouseEvent)> => <java.awt.event.MouseEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$2: void mouseEntered(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$2: void mouseEntered(java.awt.event.MouseEvent)> => <javax.swing.ToolTipManager: javax.swing.ToolTipManager sharedInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$2: void mouseEntered(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$2: void mouseEntered(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$2: void mouseEntered(java.awt.event.MouseEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$2: void mouseEntered(java.awt.event.MouseEvent)> => <java.awt.event.InputEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$2: void mouseEntered(java.awt.event.MouseEvent)> => <java.awt.event.MouseEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$2: void mouseEntered(java.awt.event.MouseEvent)> => <javax.swing.ToolTipManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$FadeInAnimator: void paintNow(float)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$FadeInAnimator: void paintNow(float)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicToolTipUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: void <init>()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: void <init>()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: void <init>()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: java.awt.geom.Area getBackgroundArea(java.awt.Component,int,int)> => <java.awt.geom.Area: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: java.awt.geom.Area getBackgroundArea(java.awt.Component,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: void paintShadow(java.awt.Component,java.awt.Graphics,int,int,int,int,java.awt.geom.Area)> => <java.awt.geom.Area: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: java.awt.Insets getBorderInsets(java.awt.Component)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: void applyContext(javax.swing.JToolTip)> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: void applyContext(javax.swing.JToolTip)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: void applyContext(javax.swing.JToolTip)> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: void applyContext(javax.swing.JToolTip)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: void moveToolTip(javax.swing.JToolTip,int,int,javax.swing.JComponent)> => <javax.swing.SwingUtilities: void convertPointToScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: void moveToolTip(javax.swing.JToolTip,int,int,javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellBorder: void <init>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellBorder: void <init>()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellBorder: void <init>()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor$1: java.lang.Object getCellEditorValue()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor$1: java.lang.Object getCellEditorValue()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor$1: void setValue(java.lang.Object)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor$3: void setValue(java.lang.Object)> => <java.text.NumberFormat: java.text.NumberFormat getInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor$3: void setValue(java.lang.Object)> => <java.text.DateFormat: java.text.DateFormat getInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <init>(javax.swing.JTextField)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <init>(javax.swing.JTextField)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <init>(javax.swing.JTextField)> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <init>(javax.swing.JTextField)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <init>(javax.swing.JToggleButton)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <init>(javax.swing.JComboBox)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <init>(javax.swing.JSpinner)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: java.awt.Component getTreeCellEditorComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: java.awt.Component getTreeCellEditorComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: java.awt.Component getTreeCellEditorComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellRendererDelegate: void <init>(javax.swing.tree.TreeCellRenderer)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellRendererDelegate: void <init>(javax.swing.tree.TreeCellRenderer)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeExpansionAnimationListener: void <init>(javax.swing.JTree)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeExpansionAnimationListener: void <init>(javax.swing.JTree)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI$1: void focusGained(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI$1: void focusLost(java.awt.event.FocusEvent)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI$DarkTreeMouseListener: void mousePressed(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: void paint(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: void paintRow(java.awt.Graphics,int)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeCellContainer: java.lang.Integer getCellPosition(java.awt.Point)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeCellContainer: java.lang.Integer getCellPosition(java.awt.Point)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: void doLayout()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: void doLayout()> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: java.awt.Dimension getPreferredSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: java.awt.Dimension getMinimumSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Insets addInsets(java.awt.Insets,java.awt.Insets,boolean)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Insets addInsets(java.awt.Insets,int,boolean)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: void repaintChild(java.awt.Component,java.util.function.Function,java.awt.Rectangle,boolean)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: void repaintChild(java.awt.Component,java.util.function.Function,java.awt.Rectangle,boolean)> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: void repaintChild(java.awt.Component,java.util.function.Function,java.awt.Rectangle,boolean)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean hasFocusImpl(java.awt.Component,java.awt.Component,java.awt.event.FocusEvent)> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean hasFocusImpl(java.awt.Component,java.awt.Component,java.awt.event.FocusEvent)> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean hasFocus(java.awt.Window)> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean hasFocus(java.awt.Window)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean hasFocus(java.awt.Window)> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean hasFocus(java.awt.Window)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Container getUnwrappedParent(java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Container getUnwrappedParent(java.awt.Component)> => <javax.swing.SwingUtilities: java.awt.Container getUnwrappedParent(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: void doNotCancelPopupSetup(javax.swing.JComponent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean isInCell(java.awt.Component)> => <java.lang.Class: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Window getWindow(java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Window getWindow(java.awt.Component)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean isOverText(javax.swing.JLabel,java.awt.Rectangle,java.awt.Point)> => <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean isOverText(javax.swing.JLabel,java.awt.Rectangle,java.awt.Point)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Insets getBorderInsets(javax.swing.JComponent)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Rectangle getScreenBounds(javax.swing.JComponent,int,int,boolean)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Rectangle getScreenBounds(javax.swing.JComponent,int,int,boolean)> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Rectangle getScreenBounds(javax.swing.JComponent,int,int,boolean)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.GraphicsConfiguration getGraphicsConfigurationForLocation(int,int)> => <java.awt.GraphicsEnvironment: boolean isHeadless()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.GraphicsConfiguration getGraphicsConfigurationForLocation(int,int)> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: boolean isScaleChanged(java.lang.String,java.lang.Object,java.lang.Object)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Dimension getPreferredSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: java.awt.Dimension getMinimumSize(javax.swing.JComponent)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DnDUtil: java.awt.Image createDragImage(java.awt.Component,int,java.awt.Color)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void installLazyActionMap(javax.swing.JComponent,java.lang.Class,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void installLazyActionMap(javax.swing.JComponent,java.lang.Class,java.lang.String)> => <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void installLazyActionMap(javax.swing.JComponent,java.lang.Class,java.lang.String)> => <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void installLazyActionMap(javax.swing.JComponent,java.lang.Class,java.lang.String)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void installLazyActionMap(javax.swing.JComponent,java.lang.Class,java.lang.String)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: javax.swing.ActionMap getActionMap(java.lang.Class,java.lang.String)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: javax.swing.ActionMap getActionMap(java.lang.Class,java.lang.String)> => <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: javax.swing.ActionMap getActionMap(java.lang.Class,java.lang.String)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.util.ResourceUtil: java.lang.String getBundleName(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <sun.swing.SwingUtilities2: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)> => <sun.swing.SwingUtilities2: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)> => <sun.swing.SwingUtilities2: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)> => <sun.swing.SwingUtilities2: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: void setSkipClickCount(java.awt.Component,int)> => <sun.swing.SwingUtilities2: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: void setSkipClickCount(java.awt.Component,int)> => <sun.swing.SwingUtilities2: void setSkipClickCount(java.awt.Component,int)>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: int stringWidth(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String)> => <sun.swing.SwingUtilities2: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: int stringWidth(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String)> => <sun.swing.SwingUtilities2: int stringWidth(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: java.lang.String clipStringIfNecessary(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <sun.swing.SwingUtilities2: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: java.lang.String clipStringIfNecessary(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)> => <sun.swing.SwingUtilities2: java.lang.String clipStringIfNecessary(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: int getFocusAcceleratorKeyMask()> => <sun.swing.SwingUtilities2: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: int getFocusAcceleratorKeyMask()> => <sun.swing.SwingUtilities2: int getSystemMnemonicKeyMask()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: java.awt.FontMetrics getFontMetrics(javax.swing.JComponent,java.awt.Graphics)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: java.awt.FontMetrics getFontMetrics(javax.swing.JComponent,java.awt.Font)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: java.awt.FontMetrics getFontMetrics(javax.swing.JComponent,java.awt.Font)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: boolean shouldIgnore(java.awt.event.MouseEvent,javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: boolean shouldIgnore(java.awt.event.MouseEvent,javax.swing.JComponent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: void compositeRequestFocus(java.awt.Component)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: void compositeRequestFocus(java.awt.Component)> => <javax.swing.SwingUtilities: boolean isDescendingFrom(java.awt.Component,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: boolean pointOutsidePrefSize(javax.swing.JTable,int,int,java.awt.Point)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: boolean tabbedPaneChangeFocusTo(java.awt.Component)> => <sun.swing.SwingUtilities2: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingUtil: boolean tabbedPaneChangeFocusTo(java.awt.Component)> => <sun.swing.SwingUtilities2: java.awt.Component compositeRequestFocus(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.util.SwingXUtil: java.awt.Point convertPointToParent(java.awt.Component,org.jdesktop.jxlayer.JXLayer,java.awt.Point)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.SwingXUtil: java.awt.Point convertPointToParent(java.awt.Component,org.jdesktop.jxlayer.JXLayer,java.awt.Point)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.util.SwingXUtil: java.awt.Point convertPointToParent(java.awt.Component,org.jdesktop.jxlayer.JXLayer,java.awt.Point)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.util.SwingXUtil: java.awt.Point convertPointToParent(java.awt.Component,org.jdesktop.jxlayer.JXLayer,java.awt.Point)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: void installUI(javax.swing.JComponent)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: void installUI(javax.swing.JComponent)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: void addInvalidComponent(javax.swing.JComponent)> => <javax.swing.RepaintManager: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: void addInvalidComponent(javax.swing.JComponent)> => <javax.swing.RepaintManager: javax.swing.RepaintManager currentManager(javax.swing.JComponent)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: void addDirtyRegion(javax.swing.JComponent,int,int,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: void addDirtyRegion(javax.swing.JComponent,int,int,int,int)> => <javax.swing.RepaintManager: javax.swing.RepaintManager currentManager(javax.swing.JComponent)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: void addDirtyRegion(javax.swing.JComponent,int,int,int,int)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: void addDirtyRegion(javax.swing.JComponent,int,int,int,int)> => <javax.swing.RepaintManager: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: void addDirtyRegion(javax.swing.JComponent,int,int,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void <init>(org.pbjar.jxlayer.plaf.ext.transform.TransformModel)> => <java.util.HashSet: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void prepareForJTextComponent()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void prepareForJTextComponent()> => <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void prepareForJTextComponent()> => <java.lang.System: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void setModel(org.pbjar.jxlayer.plaf.ext.transform.TransformModel)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: java.awt.geom.AffineTransform getPreferredTransform(java.awt.Dimension,org.jdesktop.jxlayer.JXLayer)> => <java.awt.geom.AffineTransform: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void uninstallUI(javax.swing.JComponent)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: java.awt.Rectangle transform(java.awt.Rectangle,org.jdesktop.jxlayer.JXLayer)> => <java.awt.geom.Area: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultLayerLayout: java.awt.Dimension preferredLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultLayerLayout: java.awt.Dimension minimumLayoutSize(java.awt.Container)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type valueOf(java.lang.String)> => <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void <init>()> => <java.util.WeakHashMap: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void <init>()> => <java.awt.geom.AffineTransform: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setQuadrantRotation(int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setQuadrantRotation(int)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setScale(double)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setScale(double)> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setScale(double)> => <java.lang.Double: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.lang.Math: double min(double,double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.lang.Math: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.awt.geom.Area: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.lang.System: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.util.Arrays: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setShearX(double)> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setShearX(double)> => <java.lang.Double: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setShearY(double)> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setShearY(double)> => <java.lang.Double: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setRotation(double)> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setRotation(double)> => <java.lang.Double: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setMirror(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setMirror(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setPreserveAspectRatio(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setPreserveAspectRatio(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setScaleToPreferredSize(boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: void setScaleToPreferredSize(boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformLayout: void layoutContainer(java.awt.Container)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: long round(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: long round(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: java.awt.Rectangle calculateInnerArea(javax.swing.JComponent,java.awt.Rectangle)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformLayout: void layoutContainer(java.awt.Container)> => <java.lang.Math: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformLayout: void layoutContainer(java.awt.Container)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformRPMImpl: boolean addDirtyRegion(javax.swing.JComponent,int,int,int,int,javax.swing.RepaintManager)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformRPMImpl: boolean addDirtyRegion(javax.swing.JComponent,int,int,int,int,javax.swing.RepaintManager)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformRPMImpl: boolean addDirtyRegion(javax.swing.JComponent,int,int,int,int,javax.swing.RepaintManager)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.RepaintManager: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Font: java.awt.Font decode(java.lang.String)>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.RepaintManager: javax.swing.RepaintManager currentManager(javax.swing.JComponent)>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JOptionPane: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Font: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JEditorPane: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: void ensureRepaintManagerSet(java.awt.Component,org.pbjar.jxlayer.repaint.RepaintManagerProvider)> => <javax.swing.RepaintManager: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: void ensureRepaintManagerSet(java.awt.Component,org.pbjar.jxlayer.repaint.RepaintManagerProvider)> => <javax.swing.RepaintManager: javax.swing.RepaintManager currentManager(java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: void ensureRepaintManagerSet(javax.swing.JComponent,org.pbjar.jxlayer.repaint.RepaintManagerProvider)> => <javax.swing.RepaintManager: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: void ensureRepaintManagerSet(javax.swing.JComponent,org.pbjar.jxlayer.repaint.RepaintManagerProvider)> => <javax.swing.RepaintManager: javax.swing.RepaintManager currentManager(javax.swing.JComponent)>
Found static invoke: <org.pbjar.jxlayer.repaint.WrappedRepaintManager: void <init>(javax.swing.RepaintManager)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: void <clinit>()> => <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>
Found static invoke: <com.github.weisj.darklaf.LafManager: void <clinit>()> => <java.util.ServiceLoader: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: void <clinit>()> => <java.util.logging.Level: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: void <clinit>()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafManager: void setInstalledTheme(com.github.weisj.darklaf.theme.Theme)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: void <clinit>()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: java.awt.Robot createRobot()> => <java.awt.Robot: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void <clinit>()> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void <clinit>()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void <clinit>()> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void <clinit>()> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void <clinit>()> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ComponentHelper: void setup(javax.swing.AbstractButton,javax.swing.Icon,javax.swing.Icon)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ComponentHelper: void setup(javax.swing.AbstractButton,javax.swing.Icon,javax.swing.Icon)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.ComponentHelper: void setup(javax.swing.AbstractButton,javax.swing.Icon,javax.swing.Icon)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.DynamicUI: void <clinit>()> => <java.util.WeakHashMap: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DynamicUI: void <clinit>()> => <javax.swing.UIManager: void addPropertyChangeListener(java.beans.PropertyChangeListener)>
Found static invoke: <com.github.weisj.darklaf.components.DynamicUI: void <clinit>()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: void <clinit>()> => <java.util.concurrent.atomic.AtomicBoolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean isHidden(java.nio.file.Path)> => <java.nio.file.Files: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean isHidden(java.nio.file.Path)> => <java.nio.file.Files: boolean isHidden(java.nio.file.Path)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.focus.FocusParentHelper: void <clinit>()> => <java.util.WeakHashMap: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.focus.FocusParentHelper: void <clinit>()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.focus.FocusParentHelper: void <clinit>()> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void <clinit>()> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void <clinit>()> => <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void <clinit>()> => <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void <clinit>()> => <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void <clinit>()> => <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int,float)>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void <clinit>()> => <java.awt.AlphaComposite: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void doPaint(java.awt.Graphics2D,float,float,float,float,boolean)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.PaintUtil: void doPaint(java.awt.Graphics2D,float,float,float,float,boolean)> => <java.awt.geom.Path2D: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: java.awt.Image postProcessImage(java.awt.Graphics2D,java.awt.image.BufferedImage,java.awt.Point,java.awt.Color,java.awt.Color)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: java.awt.Image postProcessImage(java.awt.Graphics2D,java.awt.image.BufferedImage,java.awt.Point,java.awt.Color,java.awt.Color)> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton: void <clinit>()> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JCheckBox createSystemSettingCheckBox(java.lang.String,java.util.function.Function)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JCheckBox createSystemSettingCheckBox(java.lang.String,java.util.function.Function)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JCheckBox createSystemSettingCheckBox(java.lang.String,java.util.function.Function)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.String: java.lang.String valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JSlider createFontSlider()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createSelectionColorChooser(java.awt.Color)> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createSelectionColorChooser(java.awt.Color)> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createSelectionColorChooser(java.awt.Color)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createSelectionColorChooser(java.awt.Color)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createSelectionColorChooser(java.awt.Color)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createAccentColorChooser(java.awt.Color)> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createAccentColorChooser(java.awt.Color)> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createAccentColorChooser(java.awt.Color)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createAccentColorChooser(java.awt.Color)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: com.github.weisj.darklaf.settings.RadioColorChooser createAccentColorChooser(java.awt.Color)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JComboBox createThemeComboBox()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JComboBox createThemeComboBox()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JComboBox createThemeComboBox()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JComboBox createThemeComboBox()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: javax.swing.JComboBox createThemeComboBox()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ColorAdjustmentTask: void <clinit>()> => <javax.swing.UIDefaults: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: void <clinit>()> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: void <clinit>()> => <java.util.logging.Logger: java.util.logging.Logger getGlobal()>
Found static invoke: <com.github.weisj.darklaf.ui.BasicTransferable: void <clinit>()> => <java.util.logging.Logger: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: com.github.weisj.darklaf.ui.DragRecognitionSupport getDragRecognitionSupport()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: com.github.weisj.darklaf.ui.DragRecognitionSupport getDragRecognitionSupport()> => <javax.swing.UIManager: java.lang.Object put(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: com.github.weisj.darklaf.ui.DragRecognitionSupport getDragRecognitionSupport()> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: java.awt.Rectangle computePopupBounds(javax.swing.JComponent,int,int,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void <clinit>()> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void <clinit>()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void <clinit>()> => <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void <clinit>()> => <java.lang.Math: double sqrt(double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void <clinit>()> => <java.awt.AlphaComposite: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D access$000()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D access$000()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D access$000()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: double getWheelHue(double,double,double,double)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: double getWheelHue(double,double,double,double)> => <java.lang.Math: double atan2(double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: void <clinit>()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: void <clinit>()> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void <clinit>()> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void <clinit>()> => <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void recursivelySetInheritsPopupMenu(java.awt.Container,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void recursivelySetInheritsPopupMenu(java.awt.Container,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void recursivelySetInheritsPopupMenu(java.awt.Container,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void <clinit>()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void <clinit>()> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void <clinit>()> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabberUtil: javax.swing.event.ChangeListener getOldMouseGrabber()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabberUtil: javax.swing.event.ChangeListener getOldMouseGrabber()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabberUtil: void uninstallOldMouseGrabber(javax.swing.event.ChangeListener)> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabberUtil: void uninstallOldMouseGrabber(javax.swing.event.ChangeListener)> => <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabberUtil: void uninstallOldMouseGrabber(javax.swing.event.ChangeListener)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabberUtil: void uninstallOldMouseGrabber(javax.swing.event.ChangeListener)> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabberUtil: void uninstallOldMouseGrabber(javax.swing.event.ChangeListener)> => <java.security.AccessController: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabberUtil: void uninstallOldMouseGrabber(javax.swing.event.ChangeListener)> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void <clinit>()> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void <clinit>()> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void uninstallBorder(javax.swing.JRootPane)> => <javax.swing.LookAndFeel: void uninstallBorder(javax.swing.JComponent)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarUI: void <clinit>()> => <java.awt.AlphaComposite: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarUI: void <clinit>()> => <java.awt.AlphaComposite: java.awt.AlphaComposite getInstance(int)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarUI: void <clinit>()> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.ScrollBarUtil: void scrollByUnits(javax.swing.JScrollBar,int,int,boolean)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: void <clinit>()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void <clinit>()> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler: void <clinit>()> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: void selectTab(javax.swing.JTabbedPane,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: void selectTab(javax.swing.JTabbedPane,int)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: void calculateDropRectWrapLayout(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,javax.swing.JTabbedPane,javax.swing.JTabbedPane,java.awt.Point,java.awt.Rectangle,int,int,java.awt.Rectangle)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: void calculateDropRectWrapLayout(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,javax.swing.JTabbedPane,javax.swing.JTabbedPane,java.awt.Point,java.awt.Rectangle,int,int,java.awt.Rectangle)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: void calculateDropRectWrapLayout(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,javax.swing.JTabbedPane,javax.swing.JTabbedPane,java.awt.Point,java.awt.Rectangle,int,int,java.awt.Rectangle)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneUtil: void calculateDropRectWrapLayout(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI,javax.swing.JTabbedPane,javax.swing.JTabbedPane,java.awt.Point,java.awt.Rectangle,int,int,java.awt.Rectangle)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void <clinit>()> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void <clinit>()> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: void <clinit>()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: void <clinit>()> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditor: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: void setupEditorComponent(java.awt.Component,java.lang.Object,java.awt.Component)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: void setupEditorComponent(java.awt.Component,java.lang.Object,java.awt.Component)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkEditorPaneUIBridge: void <clinit>()> => <javax.swing.JEditorPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkEditorPaneUIBridge: void <clinit>()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkEditorPaneUIBridge: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkEditorPaneUIBridge: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkEditorPaneUIBridge: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkEditorPaneUIBridge: void <clinit>()> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextFieldUIBridge: void <clinit>()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: void <clinit>()> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: void <clinit>()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextAreaUIBridge: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextPaneUIBridge: void <clinit>()> => <javax.swing.JEditorPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextPaneUIBridge: void <clinit>()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextPaneUIBridge: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextPaneUIBridge: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextPaneUIBridge: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextPaneUIBridge: void <clinit>()> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void <clinit>()> => <javax.swing.plaf.basic.BasicToolBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: java.awt.Point getBestPositionMatch(com.github.weisj.darklaf.components.tooltip.ToolTipContext,java.awt.Point)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkDefaultTreeEditor: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkDefaultTreeEditor: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkDefaultTreeEditor: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellEditor: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: void <clinit>()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: void <clinit>()> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: javax.swing.MenuElement previousEnabledChild(javax.swing.MenuElement[],int,int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: javax.swing.MenuElement previousEnabledChild(javax.swing.MenuElement[],int,int)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: javax.swing.MenuElement nextEnabledChild(javax.swing.MenuElement[],int,int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.DarkUIUtil: javax.swing.MenuElement nextEnabledChild(javax.swing.MenuElement[],int,int)> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void <clinit>()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void <clinit>()> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void <clinit>()> => <java.lang.System: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void <clinit>()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void <clinit>()> => <java.lang.Class: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void <clinit>()> => <javax.swing.RepaintManager: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: void <clinit>()> => <javax.swing.JInternalFrame: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: void <clinit>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: void <clinit>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: void <clinit>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Integer: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel$Type: void <clinit>()> => <java.lang.Double: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformRPMImpl: org.jdesktop.jxlayer.JXLayer findJXLayer(javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformRPMImpl: org.jdesktop.jxlayer.JXLayer findJXLayer(javax.swing.JComponent)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: void ensureImpl(javax.swing.RepaintManager,org.pbjar.jxlayer.repaint.RepaintManagerProvider)> => <javax.swing.RepaintManager: void setCurrentManager(javax.swing.RepaintManager)>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: void ensureImpl(javax.swing.RepaintManager,org.pbjar.jxlayer.repaint.RepaintManagerProvider)> => <javax.swing.RepaintManager: void setCurrentManager(javax.swing.RepaintManager)>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: void ensureImpl(javax.swing.RepaintManager,org.pbjar.jxlayer.repaint.RepaintManagerProvider)> => <javax.swing.RepaintManager: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: void ensureImpl(javax.swing.RepaintManager,org.pbjar.jxlayer.repaint.RepaintManagerProvider)> => <javax.swing.RepaintManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ThemeDefaultsInitTask: void <clinit>()> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void <clinit>()> => <java.awt.font.TextAttribute: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void <clinit>()> => <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void <clinit>()> => <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void <clinit>()> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void <clinit>()> => <java.text.AttributedCharacterIterator$Attribute: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: java.util.concurrent.ScheduledExecutorService createScheduler()> => <java.util.concurrent.ScheduledThreadPoolExecutor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: java.util.concurrent.ScheduledExecutorService createScheduler()> => <java.util.concurrent.AbstractExecutorService: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: java.util.concurrent.ScheduledExecutorService createScheduler()> => <java.util.concurrent.ThreadPoolExecutor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: java.util.concurrent.ScheduledExecutorService createScheduler()> => <java.util.concurrent.ScheduledThreadPoolExecutor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: java.util.concurrent.ScheduledExecutorService createScheduler()> => <java.util.concurrent.AbstractExecutorService: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: java.util.concurrent.ScheduledExecutorService createScheduler()> => <java.util.concurrent.ThreadPoolExecutor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: void adjustXCoordinate(java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: void adjustXCoordinate(java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: void adjustXCoordinate(java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: void adjustXCoordinate(java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: void adjustYCoordinate(java.awt.Rectangle,java.awt.Point,java.awt.Insets,java.awt.Rectangle)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: void adjustYCoordinate(java.awt.Rectangle,java.awt.Point,java.awt.Insets,java.awt.Rectangle)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.WidgetPopupHelper: void adjustYCoordinate(java.awt.Rectangle,java.awt.Point,java.awt.Insets,java.awt.Rectangle)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit: java.lang.String formatValue(int,com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit: java.lang.String formatValue(int,com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit: java.lang.String formatValue(int,com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit: java.lang.String formatValue(int,com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit: java.lang.String formatValue(int,com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit: java.lang.String formatValue(int,com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit: java.lang.String formatValue(int,com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit: java.lang.String formatValue(int,com.github.weisj.darklaf.ui.colorchooser.SlideComponent$Unit)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: java.awt.Robot createRobot()> => <java.awt.Robot: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: javax.swing.RepaintManager createManager(java.lang.Class,javax.swing.RepaintManager)> => <java.lang.Class: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: javax.swing.RepaintManager createManager(java.lang.Class,javax.swing.RepaintManager)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils: javax.swing.RepaintManager createManager(java.lang.Class,javax.swing.RepaintManager)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: java.awt.Point tryPosition(com.github.weisj.darklaf.util.Alignment,com.github.weisj.darklaf.components.tooltip.ToolTipContext,java.awt.Point,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.util.function.BiConsumer,boolean,boolean)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: java.awt.Point tryPosition(com.github.weisj.darklaf.util.Alignment,com.github.weisj.darklaf.components.tooltip.ToolTipContext,java.awt.Point,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.util.function.BiConsumer,boolean,boolean)> => <javax.swing.SwingUtilities: void convertPointToScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: boolean fits(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: boolean fits(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: boolean isRectangleContainingRectangle(java.awt.Rectangle,java.awt.Rectangle)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: boolean fits(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: boolean isRectangleContainingRectangle(java.awt.Rectangle,java.awt.Rectangle)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: boolean fits(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: boolean isRectangleContainingRectangle(java.awt.Rectangle,java.awt.Rectangle)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.ToolTipUtil: boolean fits(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void install(com.github.weisj.darklaf.theme.Theme)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void install(com.github.weisj.darklaf.theme.Theme)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void install(com.github.weisj.darklaf.theme.Theme)> => <javax.swing.UIManager: void setLookAndFeel(javax.swing.LookAndFeel)>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void install(com.github.weisj.darklaf.theme.Theme)> => <java.util.logging.Level: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void install(com.github.weisj.darklaf.theme.Theme)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void install(com.github.weisj.darklaf.theme.Theme)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void updateLaf()> => <java.awt.Window: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void updateLaf()> => <java.awt.Window: java.awt.Window[] getWindows()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void updateLaf()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void updateLaf()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton$1: void <init>(int,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets,boolean,javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,boolean)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton$1: void <init>(int,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets,boolean,javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,boolean)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton$1: void <init>(int,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets,boolean,javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton$1: void <init>(int,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets,boolean,javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,boolean)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton$1: void <init>(int,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets,boolean,javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,boolean)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ArrowButton$1: void <init>(int,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Insets,boolean,javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel: java.lang.Object getTabProperty(java.util.function.BiFunction,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel: java.lang.Object getTabProperty(java.util.function.BiFunction,java.lang.Object)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel: java.lang.Object getTabProperty(java.util.function.BiFunction,java.lang.Object)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel: java.lang.Object getTabProperty(java.util.function.BiFunction,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel: java.lang.Object getTabProperty(java.util.function.BiFunction,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel: void <init>(com.github.weisj.darklaf.components.ClosableTabComponent)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel: void <init>(com.github.weisj.darklaf.components.ClosableTabComponent)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void <init>(com.github.weisj.darklaf.components.ClosableTabComponent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void <init>(com.github.weisj.darklaf.components.ClosableTabComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void <init>(com.github.weisj.darklaf.components.ClosableTabComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void <init>(com.github.weisj.darklaf.components.ClosableTabComponent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabCloseButton: void <init>(com.github.weisj.darklaf.components.ClosableTabComponent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void checkIndex(int)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabbedPane: void checkIndex(int)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: java.awt.Window getOrCreatePickerWindow()> => <java.awt.RenderingHints: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: java.awt.Window getOrCreatePickerWindow()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: java.awt.Window getOrCreatePickerWindow()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: java.awt.Window getOrCreatePickerWindow()> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: java.awt.Window getOrCreatePickerWindow()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: java.awt.Point updateLocation()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: java.awt.Point updateLocation()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_11__65: void run()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_11__65: void run()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_11__65: void run()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_6__60: void run()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_6__60: void run()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_6__60: void run()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$lambda_importData_3__140: void run()> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser$lambda_showColorChooser_1__20: void run()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser$lambda_showColorChooser_1__20: void run()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser$lambda_showColorChooser_1__20: void run()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_14__68: void run()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_14__68: void run()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_14__68: void run()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$showComponentImpl$11(java.awt.event.AWTEventListener,java.awt.Window,java.awt.event.ComponentListener,java.lang.Runnable)> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$showComponentImpl$11(java.awt.event.AWTEventListener,java.awt.Window,java.awt.event.ComponentListener,java.lang.Runnable)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$attackToComponent$6(javax.swing.JComponent,java.util.concurrent.atomic.AtomicBoolean,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Consumer)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$attackToComponent$6(javax.swing.JComponent,java.util.concurrent.atomic.AtomicBoolean,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Consumer)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$attackToComponent$6(javax.swing.JComponent,java.util.concurrent.atomic.AtomicBoolean,java.util.function.Supplier,java.util.function.Consumer,java.util.function.Consumer)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void lambda$setValueAt$0(javax.swing.JFileChooser,java.io.File)> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$showComponentImpl$14(java.awt.Window,java.awt.event.ComponentListener,java.awt.event.AWTEventListener)> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$showComponentImpl$14(java.awt.Window,java.awt.event.ComponentListener,java.awt.event.AWTEventListener)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColoredRadioButton$ColoredRadioButtonUI: void patchColors(java.awt.Color,java.awt.Color)> => <java.util.Properties: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: javax.swing.Icon getPipetteIcon()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: javax.swing.Icon getPipetteIcon()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode$1$lambda_doInBackground_0__38: void accept(java.lang.Object)> => <javax.swing.SwingWorker: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$lambda_new_0__31: void accept(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$lambda_new_0__31: void accept(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$lambda_new_0__31: void accept(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attachChooser_2__59: void accept(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attachChooser_2__59: void accept(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attachChooser_2__59: void accept(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attachChooser_1__58: void accept(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attachChooser_1__58: void accept(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attachChooser_1__58: void accept(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel$getDisplayedMnemonicIndexAt__8: java.lang.Object apply(java.lang.Object,java.lang.Object)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ClosableTabComponent$TabLabel$getDisplayedMnemonicIndexAt__8: java.lang.Object apply(java.lang.Object,java.lang.Object)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$new$1(com.github.weisj.darklaf.components.tristate.TristateCheckBox)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$new$1(com.github.weisj.darklaf.components.tristate.TristateCheckBox)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$createFontSlider$9(javax.swing.JSlider,javax.swing.JLabel)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$createFontSlider$9(javax.swing.JSlider,javax.swing.JLabel)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$createSystemSettingCheckBox$12(java.lang.String,com.github.weisj.darklaf.settings.ThemeSettingsUI$2)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$createSystemSettingCheckBox$12(java.lang.String,com.github.weisj.darklaf.settings.ThemeSettingsUI$2)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$createFontSlider$10(javax.swing.JSlider,javax.swing.JLabel)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$createFontSlider$10(javax.swing.JSlider,javax.swing.JLabel)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$createFontSlider$11(javax.swing.JSlider,javax.swing.JLabel)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: void lambda$createFontSlider$11(javax.swing.JSlider,javax.swing.JLabel)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.components.DynamicUI: void lambda$withLocalizedTooltip$2(java.lang.String,javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DynamicUI: void lambda$withLocalizedTooltip$2(java.lang.String,javax.swing.JComponent)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: java.awt.Rectangle lambda$createScrollPaneWithOverlay$3(java.awt.Insets,com.github.weisj.darklaf.util.Alignment,java.awt.Rectangle,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: java.awt.Rectangle lambda$createPanelWithHoverOverlay$0(java.awt.Insets,com.github.weisj.darklaf.util.Alignment,java.awt.Rectangle,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DynamicUI: java.util.List lambda$withDynamic$1(java.util.function.Consumer,java.awt.Component,java.util.List)> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DynamicUI: java.util.List lambda$withDynamic$1(java.util.function.Consumer,java.awt.Component,java.util.List)> => <java.util.Collections: java.util.List singletonList(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.DynamicUI: java.util.List lambda$withDynamic$1(java.util.function.Consumer,java.awt.Component,java.util.List)> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: java.awt.Rectangle lambda$createPanelWithOverlay$2(java.awt.Insets,com.github.weisj.darklaf.util.Alignment,java.awt.Rectangle,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper: java.awt.Rectangle lambda$createScrollPaneWithOverlay$4(java.util.function.Supplier,com.github.weisj.darklaf.util.Alignment,java.awt.Rectangle,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: javax.swing.JScrollPane createScrollPane(javax.swing.JComponent,int,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: javax.swing.JScrollPane createScrollPane(javax.swing.JComponent,int,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: javax.swing.JScrollPane createScrollPane(javax.swing.JComponent,int,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_5__270: void run()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_5__270: void run()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_5__270: void run()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_4__269: void run()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_4__269: void run()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_4__269: void run()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_3__268: void run()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_3__268: void run()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_3__268: void run()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.TextFieldHistoryPopup: void showPopup()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.TextFieldHistoryPopup: void showPopup()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.TextFieldHistoryPopup: void showPopup()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ScrollPopupMenu: void hidePopup()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ScrollPopupMenu: void hidePopup()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.components.ScrollPopupMenu: void hidePopup()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.VolumeSlider: void init()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.VolumeSlider: void init()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.border.BubbleBorder: java.awt.geom.Path2D creatPointerShape(double,double,double,java.awt.geom.RoundRectangle2D$Float)> => <java.awt.geom.Path2D$Double: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.BubbleBorder: java.awt.geom.Path2D creatPointerShape(double,double,double,java.awt.geom.RoundRectangle2D$Float)> => <java.awt.geom.Path2D: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkLineBorder: java.awt.Color getColor(java.awt.Component)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.border.DarkLineBorder: java.awt.Color getColor(java.awt.Component)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.util.Arrays: void fill(float[],float)>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.awt.image.Kernel: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.awt.Image: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.awt.image.BufferedImage: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: java.awt.image.BufferedImage[] getImages()> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: int getBorderHash(int,float,java.awt.Color)> => <java.lang.Float: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.border.DropShadowBorder: int getBorderHash(int,float,java.awt.Color)> => <java.lang.Float: int floatToIntBits(float)>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: com.github.weisj.darklaf.components.color.SmallColorChooser getChooser(java.awt.Color,java.util.function.Consumer)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: com.github.weisj.darklaf.components.color.SmallColorChooser getChooser(java.awt.Color,java.util.function.Consumer)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: com.github.weisj.darklaf.components.color.SmallColorChooser getChooser(java.awt.Color,java.util.function.Consumer)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser$lambda_new_0__21: java.lang.Object apply(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser$lambda_new_0__21: java.lang.Object apply(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser$lambda_new_0__21: java.lang.Object apply(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI$supportsNativeFontSize__108: java.lang.Object apply(java.lang.Object)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI$supportsNativeFontSize__108: java.lang.Object apply(java.lang.Object)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI$supportsNativeAccentColor__106: java.lang.Object apply(java.lang.Object)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI$supportsNativeAccentColor__106: java.lang.Object apply(java.lang.Object)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_exportProperties_8__48: java.lang.Object apply(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_exportProperties_8__48: java.lang.Object apply(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_exportProperties_8__48: java.lang.Object apply(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI$supportsNativeTheme__109: java.lang.Object apply(java.lang.Object)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI$supportsNativeTheme__109: java.lang.Object apply(java.lang.Object)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI$supportsNativeSelectionColor__107: java.lang.Object apply(java.lang.Object)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI$supportsNativeSelectionColor__107: java.lang.Object apply(java.lang.Object)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_exportProperties_18__55: java.lang.Object apply(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_exportProperties_18__55: java.lang.Object apply(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_exportProperties_18__55: java.lang.Object apply(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsUI: java.awt.Rectangle lambda$createFontSlider$8(javax.swing.JSlider,java.awt.event.MouseEvent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues$ThemeIconDefaults lambda$getIconDefaults$5(com.github.weisj.darklaf.theme.Theme,com.github.weisj.darklaf.theme.Theme)> => <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues$ThemeIconDefaults lambda$getIconDefaults$5(com.github.weisj.darklaf.theme.Theme,com.github.weisj.darklaf.theme.Theme)> => <java.util.Properties: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues$ThemeIconDefaults lambda$getIconDefaults$5(com.github.weisj.darklaf.theme.Theme,com.github.weisj.darklaf.theme.Theme)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void onColorChange(java.awt.Color,boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void onColorChange(java.awt.Color,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void onColorChange(java.awt.Color,boolean)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor$1$1$2: int clampDot(int,javax.swing.text.JTextComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor$1$1$2: int clampDot(int,javax.swing.text.JTextComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor$1$1$2: int clampDot(int,javax.swing.text.JTextComponent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createTopComponent()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createTopComponent()> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createTopComponent()> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createTopComponent()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createTopComponent()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createCenterComponent()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createCenterComponent()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createCenterComponent()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createCenterComponent()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createCenterComponent()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createBottomComponent()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createBottomComponent()> => <javax.swing.Box: java.awt.Component createGlue()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createBottomComponent()> => <javax.swing.Box: java.awt.Component createGlue()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createBottomComponent()> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createBottomComponent()> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createBottomComponent()> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createBottomComponent()> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createBottomComponent()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createBottomComponent()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean validateEmptyFlag(boolean)> => <java.nio.file.Files: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode: boolean validateEmptyFlag(boolean)> => <java.nio.file.Files: java.util.stream.Stream list(java.nio.file.Path)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: void init()> => <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: void init()> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeModel: com.github.weisj.darklaf.components.filetree.FileTreeNode createRoot(java.io.File[])> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeModel: com.github.weisj.darklaf.components.filetree.FileTreeNode createRoot(java.io.File[])> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeModel: com.github.weisj.darklaf.components.filetree.FileTreeNode createRoot(java.io.File[])> => <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeModel: com.github.weisj.darklaf.components.filetree.FileTreeNode createRoot(java.io.File[])> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: java.nio.file.WatchService createWatchService()> => <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeModel: com.github.weisj.darklaf.components.filetree.FileTreeNode createRoot(java.nio.file.Path[])> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeModel: com.github.weisj.darklaf.components.filetree.FileTreeNode createRoot(java.nio.file.Path[])> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeModel: com.github.weisj.darklaf.components.filetree.FileTreeNode createRoot(java.nio.file.Path[])> => <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeModel: com.github.weisj.darklaf.components.filetree.FileTreeNode createRoot(java.nio.file.Path[])> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode$RootNode: void init()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void init()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void init()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void init()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void init()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void init()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void init()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpButton: void init()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpMenuItem: void init()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpMenuItem: void init()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.help.HelpMenuItem: void init()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel addEditor(com.github.weisj.darklaf.theme.Theme,javax.swing.Icon)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel addEditor(com.github.weisj.darklaf.theme.Theme,javax.swing.Icon)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel addEditor(com.github.weisj.darklaf.theme.Theme,javax.swing.Icon)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void updateEditor()> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void updateEditor()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void updateEditor()> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void updateEditor()> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void updateEditor()> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void updateEditor()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_10__64: void accept(java.lang.Object,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_10__64: void accept(java.lang.Object,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_10__64: void accept(java.lang.Object,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_new_2__44: void accept(java.lang.Object,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_new_2__44: void accept(java.lang.Object,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_new_2__44: void accept(java.lang.Object,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_setShowEditorAddRemoveControls_7__47: void accept(java.lang.Object,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_setShowEditorAddRemoveControls_7__47: void accept(java.lang.Object,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_setShowEditorAddRemoveControls_7__47: void accept(java.lang.Object,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser$lambda_new_0__22: void accept(java.lang.Object,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser$lambda_new_0__22: void accept(java.lang.Object,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser$lambda_new_0__22: void accept(java.lang.Object,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: com.github.weisj.darklaf.components.tooltip.ToolTipContext getContext()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: com.github.weisj.darklaf.components.tooltip.ToolTipContext getContext()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: com.github.weisj.darklaf.components.tooltip.ToolTipContext getContext()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListCellRendererDelegate$init__228: java.lang.Object get()> => <javax.swing.DefaultListCellRenderer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListCellRendererDelegate$init__228: java.lang.Object get()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListCellRendererDelegate$init__228: java.lang.Object get()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListCellRendererDelegate$init__228: java.lang.Object get()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser$booleanValue__29: java.lang.Object get()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser$booleanValue__29: java.lang.Object get()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser$init__221: java.lang.Object get()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser$init__221: java.lang.Object get()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser$init__221: java.lang.Object get()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser$isSelected__103: java.lang.Object get()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser$isSelected__103: java.lang.Object get()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareButton$lambda_new_0__84: java.lang.Object get()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareButton$lambda_new_0__84: java.lang.Object get()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareButton$lambda_new_0__84: java.lang.Object get()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareButton$lambda_new_0__85: java.lang.Object get()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareButton$lambda_new_0__85: java.lang.Object get()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareButton$lambda_new_0__85: java.lang.Object get()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser$lambda_attackToComponent_0__19: java.lang.Object get()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser$lambda_attackToComponent_0__19: java.lang.Object get()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser$lambda_attackToComponent_0__19: java.lang.Object get()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareToggleButton$lambda_new_0__87: java.lang.Object get()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareToggleButton$lambda_new_0__87: java.lang.Object get()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareToggleButton$lambda_new_0__87: java.lang.Object get()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareToggleButton$lambda_new_0__86: java.lang.Object get()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareToggleButton$lambda_new_0__86: java.lang.Object get()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.TooltipAwareToggleButton$lambda_new_0__86: java.lang.Object get()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attachChooser_0__57: java.lang.Object get()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attachChooser_0__57: java.lang.Object get()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attachChooser_0__57: java.lang.Object get()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: java.lang.String lambda$notifyThemeChanged$1(com.github.weisj.darklaf.theme.Theme)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkMultiCellEditor: javax.swing.table.TableCellEditor lambda$new$0()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkMultiCellEditor: javax.swing.table.TableCellEditor lambda$new$0()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkMultiCellEditor: javax.swing.table.TableCellEditor lambda$new$0()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkMultiCellEditor: javax.swing.table.TableCellEditor lambda$new$0()> => <javax.swing.JSpinner: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: javax.swing.Icon lambda$static$0()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: javax.swing.Icon lambda$static$0()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkMultiCellEditor: javax.swing.table.TableCellEditor lambda$new$1()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkMultiCellEditor: javax.swing.table.TableCellEditor lambda$new$1()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkMultiCellEditor: javax.swing.table.TableCellEditor lambda$new$1()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkMultiCellEditor: javax.swing.table.TableCellEditor lambda$new$1()> => <javax.swing.JSpinner: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: java.lang.String lambda$install$0(com.github.weisj.darklaf.theme.Theme)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: com.github.weisj.darklaf.components.color.PopupColorChooser lambda$attackToComponent$0(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Consumer)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: com.github.weisj.darklaf.components.color.PopupColorChooser lambda$attackToComponent$0(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Consumer)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorChooser: com.github.weisj.darklaf.components.color.PopupColorChooser lambda$attackToComponent$0(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Consumer)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: java.awt.Color lambda$new$1(com.github.weisj.darklaf.components.ColoredRadioButton,java.util.function.Supplier)> => <java.util.Optional: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: java.awt.Color lambda$new$1(com.github.weisj.darklaf.components.ColoredRadioButton,java.util.function.Supplier)> => <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.graphics.StringPainter: java.lang.String lambda$drawStringImpl$0(javax.swing.JComponent)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser createOpacityChooser(com.github.weisj.darklaf.theme.Theme)> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser createOpacityChooser(com.github.weisj.darklaf.theme.Theme)> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser createOpacityChooser(com.github.weisj.darklaf.theme.Theme)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser createOpacityChooser(com.github.weisj.darklaf.theme.Theme)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser createOpacityChooser(com.github.weisj.darklaf.theme.Theme)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser createOpacityChooser(com.github.weisj.darklaf.theme.Theme)> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$ColorPaletteChooser createSwatchChooser(com.github.weisj.darklaf.theme.Theme)> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$ColorPaletteChooser createSwatchChooser(com.github.weisj.darklaf.theme.Theme)> => <java.util.stream.Collectors: java.util.stream.Collector toList()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$ColorPaletteChooser createSwatchChooser(com.github.weisj.darklaf.theme.Theme)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$ColorPaletteChooser createSwatchChooser(com.github.weisj.darklaf.theme.Theme)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$ColorPaletteChooser createSwatchChooser(com.github.weisj.darklaf.theme.Theme)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$ColorPaletteChooser createSwatchChooser(com.github.weisj.darklaf.theme.Theme)> => <java.util.stream.Collectors: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: javax.swing.JComponent createTabContainer()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: javax.swing.JComponent createTabContainer()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: javax.swing.JComponent createTabContainer()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: com.github.weisj.darklaf.components.tabframe.TabFrameContent createContentPane()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: com.github.weisj.darklaf.components.tabframe.TabFrameContent createContentPane()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: com.github.weisj.darklaf.components.tabframe.TabFrameContent createContentPane()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: void setUI(javax.swing.plaf.ComponentUI)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: com.github.weisj.darklaf.components.tabframe.TabFrameTab createDefaultTab(java.lang.String,javax.swing.Icon,com.github.weisj.darklaf.util.Alignment,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: com.github.weisj.darklaf.components.tabframe.TabFrameTab createDefaultTab(java.lang.String,javax.swing.Icon,com.github.weisj.darklaf.util.Alignment,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.JTabFrame: com.github.weisj.darklaf.components.tabframe.TabFrameTab createDefaultTab(java.lang.String,javax.swing.Icon,com.github.weisj.darklaf.util.Alignment,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: com.github.weisj.darklaf.components.tabframe.ToggleSplitPane createSplitPane(java.lang.String)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: com.github.weisj.darklaf.components.tabframe.ToggleSplitPane createSplitPane(java.lang.String)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: com.github.weisj.darklaf.components.tabframe.ToggleSplitPane createSplitPane(java.lang.String)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void init()> => <java.lang.Double: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void init()> => <java.lang.Double: java.lang.Double valueOf(double)>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void init()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void init()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.TabFrameContentPane: void init()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tabframe.ToggleSplitPane: int getLocationForRelativePosition(double)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.LineHighlighter: void resetHighlight()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.LineHighlighter: void resetHighlight()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext$1: void checkExit(java.awt.event.MouseEvent)> => <javax.swing.ToolTipManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext$1: void checkExit(java.awt.event.MouseEvent)> => <javax.swing.ToolTipManager: javax.swing.ToolTipManager sharedInstance()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext$1: void checkExit(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext$1: void checkExit(java.awt.event.MouseEvent)> => <javax.swing.ToolTipManager: javax.swing.ToolTipManager sharedInstance()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext$1: void checkExit(java.awt.event.MouseEvent)> => <javax.swing.ToolTipManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext$1: void checkExit(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.event.MouseEvent processEvent(java.awt.event.MouseEvent,java.awt.Point)> => <java.awt.event.MouseEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.event.MouseEvent processEvent(java.awt.event.MouseEvent,java.awt.Point)> => <java.lang.System: long currentTimeMillis()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.event.MouseEvent processEvent(java.awt.event.MouseEvent,java.awt.Point)> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.event.MouseEvent processEvent(java.awt.event.MouseEvent,java.awt.Point)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.event.MouseEvent processEvent(java.awt.event.MouseEvent,java.awt.Point)> => <java.awt.event.InputEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.Rectangle getTargetRect(java.awt.event.MouseEvent,boolean,boolean)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.Rectangle getTargetRect(java.awt.event.MouseEvent,boolean,boolean)> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_updateEditor_4__297: java.lang.Object apply(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_updateEditor_4__297: java.lang.Object apply(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_updateEditor_4__297: java.lang.Object apply(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_updateEditor_3__296: java.lang.Object apply(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_updateEditor_3__296: java.lang.Object apply(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_updateEditor_3__296: java.lang.Object apply(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: java.lang.String lambda$updateEditor$4(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tree.TristateTreeNode: void setState(com.github.weisj.darklaf.components.tristate.TristateState,boolean,boolean)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.DefaultTreeTableSelectionModel$TreeTableListSelectionModel: javax.swing.tree.TreePath[] getTreePaths(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.DefaultTreeTableSelectionModel$TreeTableListSelectionModel: javax.swing.tree.TreePath[] getTreePaths(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.treetable.model.DefaultTreeTableSelectionModel$TreeTableListSelectionModel: javax.swing.tree.TreePath[] getTreePaths(int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator$1: void <init>(com.github.weisj.darklaf.graphics.Animator)> => <java.util.concurrent.atomic.AtomicBoolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.DefaultInterpolator: float lambda$static$1(float)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.DefaultInterpolator: float lambda$static$1(float)> => <java.lang.Math: double cos(double)>
Found static invoke: <com.github.weisj.darklaf.graphics.DefaultInterpolator: float lambda$static$2(float)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.DefaultInterpolator: float lambda$static$2(float)> => <java.lang.Math: double sin(double)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: java.awt.Rectangle getLayoutRect(int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: java.awt.Rectangle getLayoutRect(int,int)> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: java.awt.Rectangle getLayoutRect(int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$1: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.layout.LayoutHelper$3: void <init>(javax.swing.JComponent,javax.swing.JComponent,java.util.function.BiFunction)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.listener.HoverListener: void scheduleRepaint()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.listener.HoverListener: void scheduleRepaint()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_8__61: void mouseClicked(java.awt.event.MouseEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_8__61: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_8__61: void mouseClicked(java.awt.event.MouseEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: com.github.weisj.darklaf.components.ColoredRadioButton createRadioButton(com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: com.github.weisj.darklaf.components.ColoredRadioButton createRadioButton(com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: com.github.weisj.darklaf.components.ColoredRadioButton createRadioButton(com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: boolean updateSelection(java.awt.Color)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: boolean updateSelection(java.awt.Color)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: javax.swing.JDialog createDialog(java.awt.Window)> => <javax.swing.JDialog: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: javax.swing.JDialog createDialog(java.awt.Window)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: javax.swing.JDialog createDialog(java.awt.Window)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: javax.swing.JDialog createDialog(java.awt.Window)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: javax.swing.JDialog createDialog(java.awt.Window)> => <java.awt.Window: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: javax.swing.JDialog createDialog(java.awt.Window)> => <java.awt.Dialog: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void applyTheme(com.github.weisj.darklaf.theme.Theme)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: void applyTheme(com.github.weisj.darklaf.theme.Theme)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JComponent createGeneralSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JComponent createGeneralSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JComponent createGeneralSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JComponent createGeneralSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JComponent createGeneralSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JComponent createGeneralSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <javax.swing.GroupLayout$Alignment: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JComponent createGeneralSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JComponent createGeneralSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: java.awt.Component createMonitorSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: java.awt.Component createMonitorSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: java.awt.Component createMonitorSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: java.awt.Component createMonitorSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: java.awt.Component createMonitorSettings(javax.swing.GroupLayout$Alignment,java.awt.Insets)> => <javax.swing.GroupLayout$Alignment: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JLabel createDynamicLabel(java.lang.String)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JLabel createDynamicLabel(java.lang.String)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: javax.swing.JLabel createDynamicLabel(java.lang.String)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.awt.GraphicsEnvironment: boolean isHeadless()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.util.Collections: java.util.Map emptyMap()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.awt.RenderingHints: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: void setupRenderingHints(javax.swing.UIDefaults)> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void initInputMapDefaults(javax.swing.UIDefaults)> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void initInputMapDefaults(javax.swing.UIDefaults)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void initInputMapDefaults(javax.swing.UIDefaults)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void initInputMapDefaults(javax.swing.UIDefaults)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void initInputMapDefaults(javax.swing.UIDefaults)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void initInputMapDefaults(javax.swing.UIDefaults)> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void initInputMapDefaults(javax.swing.UIDefaults)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.CSSBuilder: void <init>()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: java.lang.String pt(int)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: java.lang.String hex(java.lang.String)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.StyleSheetInitTask: java.lang.String px(int)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ThemeDefaultsInitTask: void loadThemeDefaults(com.github.weisj.darklaf.theme.Theme,javax.swing.UIDefaults)> => <java.util.Properties: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel$lambda_createDynamicLabel_0__320: void accept(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel$lambda_createDynamicLabel_0__320: void accept(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel$lambda_createDynamicLabel_0__320: void accept(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void lambda$createRadioButton$2(com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,com.github.weisj.darklaf.components.ColoredRadioButton)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.RadioColorChooser: void lambda$createRadioButton$2(com.github.weisj.darklaf.settings.RadioColorChooser$ColorSpec,com.github.weisj.darklaf.components.ColoredRadioButton)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.task.SystemDefaultsInitTask: void lambda$loadSystemOverwrites$1(java.util.Map$Entry)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.SystemDefaultsInitTask: void lambda$loadSystemOverwrites$1(java.util.Map$Entry)> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.task.SystemDefaultsInitTask: void lambda$loadSystemOverwrites$1(java.util.Map$Entry)> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createDynamicLabel$0(java.lang.String,javax.swing.JLabel)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createDynamicLabel$0(java.lang.String,javax.swing.JLabel)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.transfer.TransferUtil$1: void <init>(java.lang.Class,int,java.util.function.Function,java.util.function.Supplier,java.util.function.Consumer)> => <java.awt.datatransfer.DataFlavor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.transfer.TransferUtil$1: void <init>(java.lang.Class,int,java.util.function.Function,java.util.function.Supplier,java.util.function.Consumer)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.transfer.TransferUtil$1: void <init>(java.lang.Class,int,java.util.function.Function,java.util.function.Supplier,java.util.function.Consumer)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: com.github.weisj.darklaf.util.Pair getEffectivePopup(java.awt.Component,java.awt.Component,int,int)> => <javax.swing.PopupFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: com.github.weisj.darklaf.util.Pair getEffectivePopup(java.awt.Component,java.awt.Component,int,int)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupPopup(com.github.weisj.darklaf.ui.DarkPopupFactory$PopupType,java.awt.Component,int,int)> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupPopup(com.github.weisj.darklaf.ui.DarkPopupFactory$PopupType,java.awt.Component,int,int)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupPopup(com.github.weisj.darklaf.ui.DarkPopupFactory$PopupType,java.awt.Component,int,int)> => <javax.swing.SwingUtilities: javax.swing.JRootPane getRootPane(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupPopup(com.github.weisj.darklaf.ui.DarkPopupFactory$PopupType,java.awt.Component,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupPopup(com.github.weisj.darklaf.ui.DarkPopupFactory$PopupType,java.awt.Component,int,int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupPopup(com.github.weisj.darklaf.ui.DarkPopupFactory$PopupType,java.awt.Component,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: boolean mousePressedImpl(java.awt.event.MouseEvent)> => <java.awt.dnd.DragSource: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: boolean mousePressedImpl(java.awt.event.MouseEvent)> => <java.awt.dnd.DragSource: int getDragThreshold()>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: boolean mouseDraggedImpl(java.awt.event.MouseEvent,com.github.weisj.darklaf.ui.DragRecognitionSupport$BeforeDrag)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: boolean mouseDraggedImpl(java.awt.event.MouseEvent,com.github.weisj.darklaf.ui.DragRecognitionSupport$BeforeDrag)> => <java.lang.Math: int abs(int)>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: boolean mouseDraggedImpl(java.awt.event.MouseEvent,com.github.weisj.darklaf.ui.DragRecognitionSupport$BeforeDrag)> => <java.lang.Math: int abs(int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintNeighbourFocus(java.awt.Graphics2D,java.awt.Component,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintNeighbourFocus(java.awt.Graphics2D,java.awt.Component,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintNeighbourFocus(java.awt.Graphics2D,java.awt.Component,int,int)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintNeighbourFocus(java.awt.Graphics2D,java.awt.Component,int,int)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintNeighbourFocus(java.awt.Graphics2D,java.awt.Component,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintNeighbourFocus(java.awt.Graphics2D,java.awt.Component,int,int)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintNeighbourFocus(java.awt.Graphics2D,java.awt.Component,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: void paintNeighbourFocus(java.awt.Graphics2D,java.awt.Component,int,int)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: java.awt.Insets maskInsets(java.awt.Insets,java.awt.Component,int)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: java.awt.Insets maskInsets(java.awt.Insets,java.awt.Component,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonBorder: java.awt.Insets maskInsets(java.awt.Insets,java.awt.Component,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void prepareDelegate(javax.swing.AbstractButton)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI$DarkButtonLayout: java.lang.String layout(com.github.weisj.darklaf.delegate.AbstractButtonLayoutDelegate,javax.swing.AbstractButton,java.awt.FontMetrics,int,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI$DarkButtonLayout: java.lang.String layout(com.github.weisj.darklaf.delegate.AbstractButtonLayoutDelegate,javax.swing.AbstractButton,java.awt.FontMetrics,int,int)> => <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.lang.String)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: java.awt.Insets getMargins(javax.swing.AbstractButton)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.DarkCellRendererToggleButton: void setValue(java.lang.Object)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$PickResult pick(double,double)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$PickResult pick(double,double)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: com.github.weisj.darklaf.ui.colorchooser.ColorTriangle$PickResult pick(double,double)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: double getRotation(double,double,double,double)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: double getRotation(double,double,double,double)> => <java.lang.Math: double atan2(double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getSaturationAndValue(double,double)> => <java.lang.Math: double max(double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getSaturationAndValue(double,double)> => <java.lang.Math: double min(double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getSaturationAndValue(double,double)> => <java.lang.Math: double max(double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getSaturationAndValue(double,double)> => <java.lang.Math: double min(double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getSaturationAndValue(double,double)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getSaturationAndValue(double,double)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getSaturationAndValue(double,double)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getSaturationAndValue(double,double)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int getColorRGB(double,double,double)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: int getColorRGB(double,double,double)> => <java.awt.Color: int HSBtoRGB(float,float,float)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void updateDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void updateDefaults()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void updateDefaults()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void updateDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void updateDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void updateDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void updateDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void updateDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void setColorFromRGB(java.lang.Object,int,int,int)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void setColorFromRGB(java.lang.Object,int,int,int)> => <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape calculateCircleShape(double,double,int,int)> => <java.awt.geom.Area: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape calculateTriangleShape(double,double,int,int,java.awt.geom.AffineTransform)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape calculateTriangleShape(double,double,int,int,java.awt.geom.AffineTransform)> => <java.lang.Math: double cos(double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape calculateTriangleShape(double,double,int,int,java.awt.geom.AffineTransform)> => <java.awt.geom.Path2D: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape calculateTriangleShape(double,double,int,int,java.awt.geom.AffineTransform)> => <java.awt.geom.Path2D$Float: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape calculateTriangleShape(double,double,int,int,java.awt.geom.AffineTransform)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape calculateTriangleShape(double,double,int,int,java.awt.geom.AffineTransform)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape calculateTriangleShape(double,double,int,int,java.awt.geom.AffineTransform)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape createOuterIndicator(double,double,double,java.awt.geom.AffineTransform,int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape createOuterIndicator(double,double,double,java.awt.geom.AffineTransform,int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.Shape createOuterIndicator(double,double,double,java.awt.geom.AffineTransform,int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void error()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void error()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void <init>(com.github.weisj.darklaf.color.DarkColorModel,int,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void <init>(com.github.weisj.darklaf.color.DarkColorModel,int,boolean)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void checkRange(int,int,int)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void checkRange(int,int,int)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void <init>(java.lang.String,boolean,boolean)> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void <init>(java.lang.String,boolean,boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void <init>(java.lang.String,boolean,boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void <init>(java.lang.String,boolean,boolean)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void <init>(java.lang.String,boolean,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void <init>(java.lang.String,boolean,boolean)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComboBox createColorFormatChooser(com.github.weisj.darklaf.color.DarkColorModel[])> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComboBox createColorFormatChooser(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComboBox createColorFormatChooser(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.Box: java.awt.Component createHorizontalStrut(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.Box: java.awt.Component createHorizontalStrut(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JComponent buildTopPanel(boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void applyColorToFields(java.awt.Color)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void applyColorToFields(java.awt.Color)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: int getMaxFieldCount(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: int getMaxFieldCount(com.github.weisj.darklaf.color.DarkColorModel[])> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JFormattedTextField createColorField(boolean)> => <javax.swing.JFormattedTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JFormattedTextField createColorField(boolean)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JFormattedTextField createColorField(boolean)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JFormattedTextField createColorField(boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JFormattedTextField createColorField(boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JFormattedTextField createColorField(boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JFormattedTextField createColorField(boolean)> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JFormattedTextField createColorField(boolean)> => <javax.swing.JTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkPreviewPanel: int paintSquares(java.awt.Graphics,int)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkPreviewPanel: int paintText(java.awt.Graphics,int)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkPreviewPanel: javax.swing.JColorChooser getColorChooser()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkPreviewPanel: javax.swing.JColorChooser getColorChooser()> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkPreviewPanel: java.lang.String getSampleText()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkPreviewPanel: java.lang.String getSampleText()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: void initValues()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: void initValues()> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: void initValues()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.MainSwatchPanel: void initValues()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.MainSwatchPanel: void initValues()> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.MainSwatchPanel: void initValues()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser: void initValues()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser: void initValues()> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.components.color.PopupColorSwatchChooser: void initValues()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.MainSwatchPanel: void initColors()> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: void initColors()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: void initColors()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.RecentSwatchPanel: void initColors()> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI$1: void process(java.awt.event.KeyEvent)> => <javax.swing.plaf.basic.BasicComboBoxUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Rectangle rectangleForCurrentValue()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Rectangle rectangleForCurrentValue()> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Rectangle rectangleForCurrentValue()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Rectangle rectangleForCurrentValue()> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Rectangle rectangleForCurrentValue()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.combobox.DarkComboBoxUI: java.awt.Rectangle rectangleForCurrentValue()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge createFilePane(javax.swing.JFileChooser)> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge createFilePane(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge createFilePane(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge createFilePane(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createTopPanel(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createTopPanel(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createTopPanel(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void setupButtonPanel(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void setupButtonPanel(javax.swing.JFileChooser)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void setupButtonPanel(javax.swing.JFileChooser)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void setupButtonPanel(javax.swing.JFileChooser)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void setupButtonPanel(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void setupButtonPanel(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$AlignedLabel: int getMaxWidth()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$AlignedLabel: int getMaxWidth()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <sun.swing.FilePane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <sun.awt.shell.ShellFolder: sun.awt.shell.ShellFolder getShellFolder(java.io.File)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <sun.awt.shell.ShellFolder: java.io.File getNormalizedFile(java.io.File)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <sun.awt.shell.ShellFolder: java.lang.Object get(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <sun.swing.FilePane: boolean usesShellFolder(javax.swing.JFileChooser)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <sun.awt.shell.ShellFolder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <sun.awt.shell.ShellFolder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <sun.awt.shell.ShellFolder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge$DirectoryComboBoxModel: void addItem(java.io.File)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void updateDetailsColumnModel(javax.swing.JTable)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void updateDetailsColumnModel(javax.swing.JTable)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void editFileName(int)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void editFileName(int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void editFileName(int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void editFileName(int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void editFileName(int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableRowSorter getRowSorter()> => <javax.swing.table.TableRowSorter: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableRowSorter getRowSorter()> => <javax.swing.DefaultRowSorter: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void cancelEdit()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void cancelEdit()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void setFileSelected()> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void setFileSelected()> => <java.util.Arrays: void sort(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void setFileSelected()> => <java.util.Arrays: void sort(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: java.lang.Object getFileColumnValue(java.io.File,int)> => <java.lang.Long: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: java.lang.Object getFileColumnValue(java.io.File,int)> => <sun.awt.shell.ShellFolder: java.lang.Object getFolderColumnValue(java.io.File,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: java.lang.Object getFileColumnValue(java.io.File,int)> => <java.lang.Long: java.lang.Long valueOf(long)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: java.lang.Object getFileColumnValue(java.io.File,int)> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: java.lang.Object getFileColumnValue(java.io.File,int)> => <sun.awt.shell.ShellFolder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DelayedSelectionUpdater: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge,java.io.File)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DelayedSelectionUpdater: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge,java.io.File)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_updateEditor_2__295: int compare(java.lang.Object,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_updateEditor_2__295: int compare(java.lang.Object,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_updateEditor_2__295: int compare(java.lang.Object,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: int lambda$createSwatchChooser$9(com.github.weisj.darklaf.components.iconeditor.NamedColor,com.github.weisj.darklaf.components.iconeditor.NamedColor)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$IconValues: int lambda$createSwatchChooser$9(com.github.weisj.darklaf.components.iconeditor.NamedColor,com.github.weisj.darklaf.components.iconeditor.NamedColor)> => <java.lang.Boolean: int compare(boolean,boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <javax.swing.JOptionPane: void showMessageDialog(java.awt.Component,java.lang.Object,java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <javax.swing.JOptionPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.text.MessageFormat: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <javax.swing.JOptionPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void applyEdit()> => <java.text.MessageFormat: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePane: void installDefaults()> => <javax.swing.JTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void installDefaults()> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void createActionMap()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void createActionMap()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void createActionMap()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$2: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$2: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$2: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$4: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge,java.lang.String)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$4: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge,java.lang.String)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$4: void <init>(com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge,java.lang.String)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void doDirectoryChanged(java.beans.PropertyChangeEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void doDirectoryChanged(java.beans.PropertyChangeEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge: void doDirectoryChanged(java.beans.PropertyChangeEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: boolean useExternalMenuBar()> => <javax.swing.plaf.basic.BasicInternalFrameTitlePane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: boolean useExternalMenuBar()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: boolean useExternalMenuBar()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.internalframe.DarkInternalFrameTitlePane$DarkTitlePaneLayout: boolean useExternalMenuBar()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.label.DarkLabelUI: java.lang.String layout(javax.swing.JLabel,java.awt.FontMetrics,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUI: javax.swing.CellRendererPane createCellRendererPane()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUI: javax.swing.CellRendererPane createCellRendererPane()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getRowCount(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getRowCount(int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: int getNextColumnIndex(javax.swing.JList,com.github.weisj.darklaf.ui.list.DarkListUIBridge,int)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void changeSelection(javax.swing.JList,int,int,int)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: int getNextIndex(javax.swing.JList,com.github.weisj.darklaf.ui.list.DarkListUIBridge,int)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: int getNextPageIndex(javax.swing.JList,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: int getNextPageIndex(javax.swing.JList,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: int getNextPageIndex(javax.swing.JList,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: int getNextPageIndex(javax.swing.JList,int)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void selectAll(javax.swing.JList)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: boolean isNavigationKey(java.awt.event.KeyEvent)> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: boolean isNavigationKey(java.awt.event.KeyEvent)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStrokeForEvent(java.awt.event.KeyEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: boolean isNavigationKey(java.awt.event.KeyEvent)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: javax.swing.InputMap getInputMap(int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: javax.swing.InputMap getInputMap(int)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: javax.swing.InputMap getInputMap(int)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateIsFileList()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateIsFileList()> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUI$DarkHandler: void adjustSelection(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void adjustSelection(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Handler: void repaintCellFocus()> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUI: void paintImpl(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUI: void paintImpl(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUI: void paintImpl(java.awt.Graphics,javax.swing.JComponent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUI: void paintImpl(java.awt.Graphics,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUI: void paintImpl(java.awt.Graphics,javax.swing.JComponent)> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void paintDropLine(java.awt.Graphics)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void paintDropLine(java.awt.Graphics)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getCellBounds(javax.swing.JList,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installListeners()> => <javax.swing.plaf.basic.BasicListUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installKeyboardActions()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void installKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void uninstallDefaults()> => <javax.swing.LookAndFeel: void uninstallBorder(javax.swing.JComponent)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: void paintMenuItem(java.awt.Graphics,javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,java.awt.Color,java.awt.Color,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: int calculateMaxIconWidth()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: int calculateMaxIconWidth()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void installDefaults(javax.swing.JComponent)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void installDefaults(javax.swing.JComponent)> => <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void installDefaults(javax.swing.JComponent)> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void installDefaults(javax.swing.JComponent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void installDefaults(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void installDefaults(javax.swing.JComponent)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void installDefaults(javax.swing.JComponent)> => <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void installDefaults(javax.swing.JComponent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: int drawHighlightBackground(java.awt.Graphics,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void drawNumbering(java.awt.Graphics,int,int,int,javax.swing.text.Element,int)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.numberingpane.DarkNumberingPaneUI: void drawNumbering(java.awt.Graphics,int,int,int,javax.swing.text.Element,int)> => <java.lang.String: java.lang.String valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer getPopupMenuContainer()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer getPopupMenuContainer()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.DarkPopupMenuUI: com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer getPopupMenuContainer()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void grabWindow(javax.swing.MenuElement[])> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void grabWindow(javax.swing.MenuElement[])> => <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void grabWindow(javax.swing.MenuElement[])> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void grabWindow(javax.swing.MenuElement[])> => <java.security.AccessController: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void ungrabWindow()> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void ungrabWindow()> => <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void ungrabWindow()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void ungrabWindow()> => <java.security.AccessController: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void cancelPopupMenu()> => <javax.swing.plaf.basic.BasicPopupMenuUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void cancelPopupMenu()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void cancelPopupMenu()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void cancelPopupMenu()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$2: void onHide()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$2: void onHide()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$2: void onHide()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: void initComponents()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: void initComponents()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: void initComponents()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void installBorder(javax.swing.JRootPane)> => <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void installBorder(javax.swing.JRootPane)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void uninstallClientDecorations(javax.swing.JRootPane)> => <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void uninstallClientDecorations(javax.swing.JRootPane)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void uninstallClientDecorations(javax.swing.JRootPane)> => <javax.swing.plaf.basic.BasicRootPaneUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI$MacScrollBarListener: int getTrackFadeOutDelay()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI$MacScrollBarListener: int getTrackFadeOutDelay()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI$MacScrollBarListener: com.github.weisj.darklaf.graphics.Animator createTrackFadeoutAnimator()> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI$MacScrollBarListener: com.github.weisj.darklaf.graphics.Animator createTrackFadeinAnimator()> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI$MacScrollBarListener: boolean animateTrackOnScroll(javax.swing.JScrollBar)> => <javax.swing.plaf.basic.BasicScrollBarUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarUI: java.awt.Dimension getMinimumThumbSize()> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: void updateVisualPaddings()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: void updateVisualPaddings()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI$SnapTrackListener: int getSnappedValue(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI$SnapTrackListener: int getLocationForValue(int)> => <javax.swing.plaf.basic.BasicSliderUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: int getTickSpacing()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: int getTickSpacing()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: javax.swing.Icon getVolumeIcon()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: javax.swing.Icon getVolumeIcon()> => <java.lang.Math: double abs(double)>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: java.awt.Dimension preferredSize(java.awt.Component)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.spinner.DarkSpinnerLayout: java.awt.Insets getEditorInsets(java.awt.Container)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: java.awt.event.MouseEvent convertEvent(java.awt.event.MouseEvent)> => <java.awt.event.MouseEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: java.awt.event.MouseEvent convertEvent(java.awt.event.MouseEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: java.awt.event.MouseEvent convertEvent(java.awt.event.MouseEvent)> => <java.awt.event.InputEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.ScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge)> => <javax.swing.JViewport: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.ScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.ScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.ScrollableTabSupport: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void updateRollover()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void updateRollover()> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void updateRollover()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: void updateRollover()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: javax.swing.JMenuItem createMenuItem(int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: javax.swing.JMenuItem createMenuItem(int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: javax.swing.JMenuItem createMenuItem(int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateTabRects(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateTabRects(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateTabRects(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateTabRects(int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateTabRects(int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateTabRects(int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: java.awt.Component wrapClientComponent(java.awt.Component)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: java.awt.Component wrapClientComponent(java.awt.Component)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: java.awt.Component wrapClientComponent(java.awt.Component)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void stopDrag(java.awt.event.MouseEvent,boolean)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneHandler: void stopDrag(java.awt.event.MouseEvent,boolean)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateTabAreaWidth(int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateTabAreaWidth(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateTabAreaWidth(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateTabAreaWidth(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateTabAreaHeight(int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateTabAreaHeight(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateTabAreaHeight(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateTabAreaHeight(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutLeadingComponent(java.awt.Component,int,int,java.awt.Insets,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutLeadingComponent(java.awt.Component,int,int,java.awt.Insets,int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutLeadingComponent(java.awt.Component,int,int,java.awt.Insets,int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutTrailingComponent(java.awt.Component,int,int,java.awt.Insets,int,int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutTrailingComponent(java.awt.Component,int,int,java.awt.Insets,int,int,int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutTrailingComponent(java.awt.Component,int,int,java.awt.Insets,int,int,int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void navigateSelectedTab(int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void navigateSelectedTab(int)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void navigateSelectedTab(int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.LookAndFeel: void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installDefaults()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installKeyboardActions()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: java.lang.String getLabelString()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: java.lang.String getLabelString()> => <java.lang.String: java.lang.String valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: java.lang.String getLabelString()> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: java.lang.String getLabelString()> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabButtonContainer: void <init>(com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI)> => <javax.swing.UIManager: java.awt.Insets getInsets(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void paintTabArea(java.awt.Graphics,int,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void updateHtmlViews(int,boolean)> => <javax.swing.plaf.basic.BasicHTML: boolean isHTMLString(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneHandler: void updateHtmlViews(int,boolean)> => <javax.swing.plaf.basic.BasicHTML: javax.swing.text.View createHTMLView(javax.swing.JComponent,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installTabContainer()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installTabContainer()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void installTabContainer()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.awt.Dimension calculateSize(boolean)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: java.awt.Dimension calculateSize(boolean)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: java.awt.Dimension calculateSize(boolean)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: java.awt.Dimension calculateSize(boolean)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void assureRectsCreated(int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void assureRectsCreated(int)> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void assureRectsCreated(int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void assureRectsCreated(int)> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void assureRectsCreated(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void calculateTabRects(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void calculateTabRects(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void calculateTabRects(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void calculateTabRects(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabbedPaneDragGestureRecognizer: void <init>(java.awt.dnd.DragGestureListener)> => <java.awt.dnd.DragSource: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneTransferHandler$TabbedPaneDragGestureRecognizer: void <init>(java.awt.dnd.DragGestureListener)> => <java.awt.dnd.DragSource: java.awt.dnd.DragSource getDefaultDragSource()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installDefaults()> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installComponents()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installComponents()> => <javax.swing.UIManager: java.awt.Dimension getDimension(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installComponents()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installComponents()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: void installComponents()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installComponents()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installComponents()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void installComponents()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabContainerUI: void installDefaults(javax.swing.JPanel)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabContainerUI: void installDefaults(javax.swing.JPanel)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabContainerUI: void installDefaults(javax.swing.JPanel)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameTabLabelUI: void updateText()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installDefaults()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installDefaults()> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installDefaults()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installDefaults()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installDefaults()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installDefaults()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installListeners()> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void installListeners()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void uninstallListeners()> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: void uninstallListeners()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: com.github.weisj.darklaf.util.Pair getTabIndexAtImpl(com.github.weisj.darklaf.components.tabframe.JTabFrame,java.awt.Point)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: com.github.weisj.darklaf.util.Pair getTabIndexAtImpl(com.github.weisj.darklaf.components.tabframe.JTabFrame,java.awt.Point)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: com.github.weisj.darklaf.util.Pair getTabIndexAtImpl(com.github.weisj.darklaf.components.tabframe.JTabFrame,java.awt.Point)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: com.github.weisj.darklaf.util.Pair getTabIndexAtImpl(com.github.weisj.darklaf.components.tabframe.JTabFrame,java.awt.Point)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: com.github.weisj.darklaf.util.Pair getTabIndexAtImpl(com.github.weisj.darklaf.components.tabframe.JTabFrame,java.awt.Point)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: com.github.weisj.darklaf.util.Pair getTabIndexAtImpl(com.github.weisj.darklaf.components.tabframe.JTabFrame,java.awt.Point)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: com.github.weisj.darklaf.util.Pair getTabIndexAtImpl(com.github.weisj.darklaf.components.tabframe.JTabFrame,java.awt.Point)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: com.github.weisj.darklaf.util.Pair getTabIndexAtImpl(com.github.weisj.darklaf.components.tabframe.JTabFrame,java.awt.Point)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: java.awt.Rectangle getTabRect(com.github.weisj.darklaf.components.tabframe.TabFrameTab,com.github.weisj.darklaf.util.Alignment,java.awt.Component,boolean)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameUI: java.awt.Rectangle getTabRect(com.github.weisj.darklaf.components.tabframe.TabFrameTab,com.github.weisj.darklaf.util.Alignment,java.awt.Component,boolean)> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: java.lang.String lambda$updatePopup$1(java.lang.Object,java.awt.Rectangle)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: java.lang.String lambda$updatePopup$0(java.lang.Object,java.awt.Rectangle)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: int calculateMaxTabSize(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: int calculateMaxTabSize(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: int calculateMaxTabSize(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: int calculateMaxTabSize(com.github.weisj.darklaf.util.Alignment)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: void layoutLeftTab(java.awt.Dimension,int)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: void layoutRightTab(java.awt.Dimension,int)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void selectTab(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.util.Alignment,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void selectTab(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.util.Alignment,int)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabbedPaneDragGestureRecognizer: void <init>(java.awt.dnd.DragGestureListener)> => <java.awt.dnd.DragSource: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$TabbedPaneDragGestureRecognizer: void <init>(java.awt.dnd.DragGestureListener)> => <java.awt.dnd.DragSource: java.awt.dnd.DragSource getDefaultDragSource()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: javax.swing.JFileChooser getFileChooser()> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: java.lang.Integer getFileNameColumnIndex()> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void startEditing(int,int)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI$DarkHandler: void checkFocus()> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void mousePressedDND(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void mousePressedDND(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void setValueIsAdjusting(boolean)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void adjustSelection(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void adjustSelection(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void adjustSelection(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void mouseReleasedDND(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void mouseReleasedDND(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: boolean repostEvent(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.event.MouseEvent convertMouseEvent(java.awt.Component,java.awt.event.MouseEvent,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: boolean repostEvent(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: boolean repostEvent(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: void uninstallDefaults()> => <javax.swing.LookAndFeel: void uninstallBorder(javax.swing.JComponent)>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: void uninstallKeyboardActions()> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: java.awt.Dimension createTableSize(long)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: java.awt.Dimension createTableSize(long)> => <java.lang.Math: long abs(long)>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge: java.awt.Dimension createTableSize(long)> => <java.awt.Dimension: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: javax.swing.CellRendererPane createCellRendererPane()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.header.DarkTableHeaderUI: javax.swing.CellRendererPane createCellRendererPane()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: boolean insideBooleanRenderer(javax.swing.JTable,int,int,java.awt.Point)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkTableCellEditorDelegate: boolean insideBooleanRenderer(javax.swing.JTable,int,int,java.awt.Point)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void selectWord(java.awt.event.MouseEvent)> => <javax.swing.text.DefaultCaret: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void selectWord(java.awt.event.MouseEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: void selectWord(java.awt.event.MouseEvent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: boolean isPositionLTR(int,javax.swing.text.Position$Bias)> => <javax.swing.text.Position$Bias: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: boolean isPositionLTR(int,javax.swing.text.Position$Bias)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: boolean isPositionLTR(int,javax.swing.text.Position$Bias)> => <javax.swing.text.DefaultCaret: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: boolean isLeftToRight(javax.swing.text.Document,int,int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: boolean isLeftToRight(javax.swing.text.Document,int,int)> => <javax.swing.text.StyleConstants: int getBidiLevel(javax.swing.text.AttributeSet)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkCaret: boolean isLeftToRight(javax.swing.text.Document,int,int)> => <javax.swing.text.StyleConstants: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkPasswordFieldUI: boolean isOverEye(java.awt.Point)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: int getArcSize(java.awt.Component)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextBorder: int getFocusArcSize(java.awt.Component)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: java.awt.Dimension addIconSizes(java.awt.Dimension)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: java.awt.Dimension addIconSizes(java.awt.Dimension)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: java.awt.Dimension addIconSizes(java.awt.Dimension)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: java.awt.Dimension addIconSizes(java.awt.Dimension)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: com.github.weisj.darklaf.ui.text.DarkTextFieldUI$ClickAction getActionUnder(java.awt.Point)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkPasswordFieldUI: com.github.weisj.darklaf.ui.text.DarkTextFieldUI$ClickAction getActionUnder(java.awt.Point)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: void updateMargins()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: void installBorder()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: java.awt.Insets getBorderInsets(javax.swing.JComponent)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: void installDarkKeyBoardActions()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: void installDarkKeyBoardActions()> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: void installDarkKeyBoardActions()> => <javax.swing.SwingUtilities: javax.swing.InputMap getUIInputMap(javax.swing.JComponent,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: void installDarkKeyBoardActions()> => <javax.swing.SwingUtilities: javax.swing.ActionMap getUIActionMap(javax.swing.JComponent)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: void installDarkKeyBoardActions()> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: void installDarkKeyBoardActions()> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.action.SelectWordAction$EndWordAction: int getWordEnd(javax.swing.text.JTextComponent,int)> => <javax.swing.text.Utilities: int getWordEnd(javax.swing.text.JTextComponent,int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkEditorPaneUIBridge: com.github.weisj.darklaf.ui.text.dummy.DummyEditorPane createDummyEditorPane()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextPaneUIBridge: com.github.weisj.darklaf.ui.text.dummy.DummyEditorPane createDummyEditorPane()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkEditorPaneUIBridge: com.github.weisj.darklaf.ui.text.dummy.DummyTextUIMethods createDummyUI()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.bridge.DarkTextPaneUIBridge: com.github.weisj.darklaf.ui.text.dummy.DummyTextUIMethods createDummyUI()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.PasteMenuItem: void setupIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.PasteMenuItem: void setupIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.PasteMenuItem: void setupIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CopyMenuItem: void setupIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CopyMenuItem: void setupIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CopyMenuItem: void setupIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CutMenuItem: void setupIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CutMenuItem: void setupIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.CutMenuItem: void setupIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DeleteMenuItem: void setupIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DeleteMenuItem: void setupIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.text.popup.DeleteMenuItem: void setupIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: java.awt.Rectangle getSliderBounds(javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: void paintSlider(java.awt.Graphics2D,javax.swing.AbstractButton)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: void paintSlider(java.awt.Graphics2D,javax.swing.AbstractButton)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.DarkToggleButtonUI: void paintSlider(java.awt.Graphics2D,javax.swing.AbstractButton)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void installIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxMenuItemUI: void installIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxMenuItemUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxMenuItemUI: void installIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxMenuItemUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxMenuItemUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxMenuItemUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <javax.swing.plaf.metal.MetalRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <javax.swing.plaf.basic.BasicToggleButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI$DarkRadioButtonLayout: java.lang.String layout(javax.swing.AbstractButton,java.awt.FontMetrics)> => <javax.swing.plaf.basic.BasicRadioButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void installIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxUI: void installIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.tristate.DarkTristateCheckBoxUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: void installIcons()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: void installIcons()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: boolean isInside(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: boolean isInside(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: boolean isInside(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: boolean isInside(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void convertPointToScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: void paintText(java.awt.Graphics,javax.swing.JComponent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: void updateStyle()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: void updateStyle()> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: void updateStyle()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI: void updateStyle()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: int getDistanceToPointer()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkTooltipBorder: int getDistanceToPointer()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkDefaultTreeEditor: java.lang.Object getValue(javax.swing.JTree,int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkDefaultTreeEditor: java.lang.Object getValue(javax.swing.JTree,int)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellRendererDelegate: void patchIcon(javax.swing.JTree,javax.swing.tree.DefaultTreeCellRenderer,boolean,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeCellRendererDelegate: void patchIcon(javax.swing.JTree,javax.swing.tree.DefaultTreeCellRenderer,boolean,boolean)> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: boolean hasFocus(java.awt.Component)> => <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: boolean hasFocus(java.awt.Component)> => <java.awt.KeyboardFocusManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI$DarkTreeMouseListener: void handle(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI$DarkTreeMouseListener: void handle(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI$DarkTreeMouseListener: void handle(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_7__62: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_7__62: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_attackToComponent_7__62: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton$lambda_new_0__348: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton$lambda_new_0__348: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton$lambda_new_0__348: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_13__67: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_13__67: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_13__67: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_12__66: void actionPerformed(java.awt.event.ActionEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_12__66: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_showComponentImpl_12__66: void actionPerformed(java.awt.event.ActionEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$showComponentImpl$13(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,java.awt.event.ActionEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$showComponentImpl$13(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,java.awt.event.ActionEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$showComponentImpl$12(java.lang.Runnable,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,java.awt.event.ActionEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: void lambda$showComponentImpl$12(java.lang.Runnable,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicReference,java.awt.event.ActionEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: java.awt.Rectangle paintSingleRow(java.awt.Graphics,java.awt.Rectangle,java.awt.Insets,javax.swing.tree.TreePath,int)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: void addIconSize(java.awt.Dimension,java.awt.Dimension)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: void addIconSize(java.awt.Dimension,java.awt.Dimension)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: void addIconSize(java.awt.Dimension,java.awt.Dimension)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: void addIconSize(java.awt.Dimension,java.awt.Dimension)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: int calculateIconY(javax.swing.Icon)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: int calculateIconY(javax.swing.Icon)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.TreeRendererComponent: int calculateIconY(javax.swing.Icon)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane$lambda_getIconListeners_1__75: boolean test(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane$lambda_getIconListeners_1__75: boolean test(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane$lambda_getIconListeners_1__75: boolean test(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode$isReadable__282: boolean test(java.lang.Object)> => <java.nio.file.Files: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileNode$isReadable__282: boolean test(java.lang.Object)> => <java.nio.file.Files: boolean isReadable(java.nio.file.Path)>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane$lambda_getIconsInRange_0__74: boolean test(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane$lambda_getIconsInRange_0__74: boolean test(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.NumberingPane$lambda_getIconsInRange_0__74: boolean test(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_new_0__42: boolean test(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_new_0__42: boolean test(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditor$lambda_new_0__42: boolean test(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.SystemDefaultsInitTask: boolean lambda$loadSystemOverwrites$0(java.lang.Object)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.SystemDefaultsInitTask: boolean lambda$loadSystemOverwrites$0(java.lang.Object)> => <java.lang.System: java.lang.String getProperty(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.task.SystemDefaultsInitTask: boolean lambda$loadSystemOverwrites$0(java.lang.Object)> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void loadIfNecessary()> => <java.lang.Class: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void loadIfNecessary()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void loadIfNecessary()> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void loadIfNecessary()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.util.LazyActionMap: void loadIfNecessary()> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: org.jdesktop.jxlayer.JXLayer findJXLayer(javax.swing.JComponent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: org.jdesktop.jxlayer.JXLayer findJXLayer(javax.swing.JComponent)> => <javax.swing.SwingUtilities: java.awt.Container getAncestorOfClass(java.lang.Class,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI$TransformRepaintManager: org.jdesktop.jxlayer.JXLayer findJXLayer(javax.swing.JComponent)> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void setView(javax.swing.JComponent)> => <com.sun.java.swing.SwingUtilities3: void setDelegateRepaintManager(javax.swing.JComponent,javax.swing.RepaintManager)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void setView(javax.swing.JComponent)> => <com.sun.java.swing.SwingUtilities3: void setDelegateRepaintManager(javax.swing.JComponent,javax.swing.RepaintManager)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void setView(javax.swing.JComponent)> => <com.sun.java.swing.SwingUtilities3: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: void setView(javax.swing.JComponent)> => <com.sun.java.swing.SwingUtilities3: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.TransformUI: java.awt.geom.AffineTransform getTransform(org.jdesktop.jxlayer.JXLayer)> => <java.awt.geom.AffineTransform: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.DefaultTransformModel: java.awt.geom.AffineTransform transformNoScale(double,double)> => <java.awt.geom.AffineTransform: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.transform.TransformLayout: java.awt.Dimension transform(java.awt.Container,java.awt.Dimension)> => <java.awt.geom.Area: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler$lambda_selectTab_2__357: void run()> => <javax.swing.TransferHandler: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: java.lang.Thread lambda$createScheduler$0(java.lang.Runnable)> => <java.lang.Thread: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: java.lang.Thread lambda$createScheduler$0(java.lang.Runnable)> => <java.lang.Thread: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateCheckBoxMenuItem: void iterateState()> => <java.awt.EventQueue: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateCheckBoxMenuItem: void iterateState()> => <java.lang.System: long currentTimeMillis()>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateCheckBoxMenuItem: void iterateState()> => <java.awt.EventQueue: java.awt.AWTEvent getCurrentEvent()>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateCheckBoxMenuItem: void iterateState()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tristate.TristateCheckBoxMenuItem: void iterateState()> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void commit()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void commit()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void commit()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: void commit()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: boolean isValid(java.lang.String)> => <java.lang.Character: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: boolean isValid(java.lang.String)> => <java.lang.Character: int digit(char,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void processMouse(java.awt.event.MouseEvent)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void processMouse(java.awt.event.MouseEvent)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void processMouse(java.awt.event.MouseEvent)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.IconWrapper: void <init>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.IconWrapper: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.IconWrapper: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel getBase()> => <javax.swing.plaf.metal.MetalLookAndFeel: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel getBase()> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel getBase()> => <javax.swing.UIManager: void setLookAndFeel(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel getBase()> => <javax.swing.UIManager: javax.swing.LookAndFeel getLookAndFeel()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel getBase()> => <javax.swing.UIManager: java.lang.String getSystemLookAndFeelClassName()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel getBase()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel getBase()> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel getBase()> => <java.util.logging.Level: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel getBase()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void updateLafRecursively(java.awt.Window)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafInstaller: void updateLafRecursively(java.awt.Window)> => <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: javax.swing.JWindow createPickerWindow(java.awt.Window)> => <java.awt.Window: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: javax.swing.JWindow createPickerWindow(java.awt.Window)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.ColorPipetteBase: javax.swing.JWindow createPickerWindow(java.awt.Window)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: javax.swing.JWindow createPickerWindow(java.awt.Window)> => <java.awt.Window: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: javax.swing.JWindow createPickerWindow(java.awt.Window)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.DefaultColorPipette: javax.swing.JWindow createPickerWindow(java.awt.Window)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$1: void lambda$menuKeyPressed$0(javax.swing.event.MenuKeyEvent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$1: void lambda$menuKeyPressed$0(javax.swing.event.MenuKeyEvent)> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$1: void lambda$menuKeyPressed$0(javax.swing.event.MenuKeyEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$1: void lambda$menuKeyPressed$0(javax.swing.event.MenuKeyEvent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer$1: void lambda$menuKeyPressed$0(javax.swing.event.MenuKeyEvent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkFormattedTextFieldUI: void update()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkFormattedTextFieldUI: void update()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$2: void lambda$keyTyped$0()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$2: void lambda$keyTyped$0()> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$2: void lambda$keyTyped$0()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$2: void lambda$keyTyped$0()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI$2: void lambda$keyTyped$0()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkColorTableCellRendererEditor: void lambda$getTableCellEditorComponent$0()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkColorTableCellRendererEditor: void lambda$getTableCellEditorComponent$0()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.renderer.DarkColorTableCellRendererEditor: void lambda$getTableCellEditorComponent$0()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: void watch()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: void watch()> => <java.nio.file.StandardWatchEventKinds: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: java.lang.String lambda$watch$2(com.github.weisj.darklaf.components.filetree.FileTreeNode)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: java.lang.String lambda$watch$1(com.github.weisj.darklaf.components.filetree.FileTreeNode)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: com.github.weisj.darklaf.components.OverlayScrollPane$PopupScrollBar createScrollBar(int)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: com.github.weisj.darklaf.components.OverlayScrollPane$PopupScrollBar createScrollBar(int)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane: com.github.weisj.darklaf.components.OverlayScrollPane$PopupScrollBar createScrollBar(int)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.tooltip.ToolTipContext: java.awt.Rectangle lambda$setToolTipRectSupplier$0(java.awt.event.MouseEvent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SwatchPanel: java.awt.Rectangle getSwatchBounds(java.awt.event.MouseEvent)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: com.github.weisj.darklaf.ui.colorchooser.ColorTriangle createColorWheel()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: com.github.weisj.darklaf.ui.colorchooser.ColorTriangle createColorWheel()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: com.github.weisj.darklaf.ui.colorchooser.ColorTriangle createColorWheel()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void addColorModels(javax.swing.JTabbedPane,com.github.weisj.darklaf.color.DarkColorModel[])> => <java.lang.Throwable: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: com.github.weisj.darklaf.ui.colorchooser.ColorPreviewComponent createPreviewComponent()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: com.github.weisj.darklaf.ui.colorchooser.ColorPreviewComponent createPreviewComponent()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: com.github.weisj.darklaf.ui.colorchooser.ColorPreviewComponent createPreviewComponent()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createHexField()> => <javax.swing.JFormattedTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createHexField()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createHexField()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createHexField()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createHexField()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createHexField()> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createHexField()> => <javax.swing.JTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JButton createPipetteButton()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JButton createPipetteButton()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JButton createPipetteButton()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JButton createPipetteButton()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JButton createPipetteButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JButton createPipetteButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JButton createPipetteButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode$RootNode: java.util.stream.Stream createInitialDirectories()> => <java.nio.file.FileSystems: java.nio.file.FileSystem getDefault()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: void doInBackground(java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable)> => <javax.swing.SwingWorker: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: java.util.List lambda$getChildren$12(java.util.List)> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: java.util.List lambda$getChildren$12(java.util.List)> => <java.util.Collections: java.util.List synchronizedList(java.util.List)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: java.util.List lambda$getChildren$12(java.util.List)> => <java.util.Collections: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$lambda_createPipetteButton_6__376: void run()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$lambda_createPipetteButton_6__376: void run()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser$lambda_createPipetteButton_6__376: void run()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent: com.github.weisj.darklaf.components.tooltip.ToolTipContext createToolTipContext()> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser: void <init>(java.util.List)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser: void <init>(java.util.List)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser: void <init>(java.util.List)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$ColorPaletteChooser: void <init>(java.util.List)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$ColorPaletteChooser: void <init>(java.util.List)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$ColorPaletteChooser: void <init>(java.util.List)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser$lambda_new_0__384: java.lang.Object apply(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser$lambda_new_0__384: java.lang.Object apply(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser$lambda_new_0__384: java.lang.Object apply(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_createToolTipContext_15__382: java.lang.Object apply(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_createToolTipContext_15__382: java.lang.Object apply(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.popup.AttachedPopupComponent$lambda_createToolTipContext_15__382: java.lang.Object apply(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$OpacityChooser: java.lang.String lambda$new$0(com.github.weisj.darklaf.components.iconeditor.NamedInt)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: void animationDone()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: void animationDone()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void lambda$new$1(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonMenuItemUI: void lambda$new$1(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$initListeners$3()> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$initListeners$3()> => <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$initListeners$3()> => <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$initListeners$3()> => <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$initListeners$3()> => <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$initListeners$3()> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <java.util.Locale: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <javax.swing.Box: java.awt.Component createHorizontalGlue()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <java.util.Locale: java.util.Locale getDefault()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.awt.Component createButtonPanel()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ColorAdjustmentTask: void adjust(java.lang.String,java.util.Properties,java.util.function.Consumer)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void installCutCopyPasteShortcuts(javax.swing.InputMap,boolean)> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void installCutCopyPasteShortcuts(javax.swing.InputMap,boolean)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void installCutCopyPasteShortcuts(javax.swing.InputMap,boolean)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void installCutCopyPasteShortcuts(javax.swing.InputMap,boolean)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void installCutCopyPasteShortcuts(javax.swing.InputMap,boolean)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void installCutCopyPasteShortcuts(javax.swing.InputMap,boolean)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void installCutCopyPasteShortcuts(javax.swing.InputMap,boolean)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.task.InputDefaultsInitTask: void installCutCopyPasteShortcuts(javax.swing.InputMap,boolean)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ThemeDefaultsInitTask: void backupAccentColors(java.util.Properties)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.task.ThemeDefaultsInitTask: void backupAccentColors(java.util.Properties)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.task.ThemeDefaultsInitTask: void adjustPlatformSpecifics(java.util.Properties)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ThemeDefaultsInitTask: void adjustPlatformSpecifics(java.util.Properties)> => <java.lang.Boolean: boolean getBoolean(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.platform.ThemePreferencesHandler: void onChange(com.github.weisj.darklaf.theme.info.PreferredThemeStyle)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.platform.ThemePreferencesHandler: void onChange(com.github.weisj.darklaf.theme.info.PreferredThemeStyle)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createGeneralSettings$1(javax.swing.JPanel)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createGeneralSettings$1(javax.swing.JPanel)> => <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createGeneralSettings$1(javax.swing.JPanel)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createGeneralSettings$1(javax.swing.JPanel)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createMonitorSettings$2(javax.swing.JPanel)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createMonitorSettings$2(javax.swing.JPanel)> => <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createMonitorSettings$2(javax.swing.JPanel)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettingsPanel: void lambda$createMonitorSettings$2(javax.swing.JPanel)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: com.github.weisj.darklaf.ui.DarkPopupFactory$HeavyWeightParent getHeavyWeightParent(java.awt.Container)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: com.github.weisj.darklaf.ui.DarkPopupFactory$HeavyWeightParent getHeavyWeightParent(java.awt.Container)> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: com.github.weisj.darklaf.ui.DarkPopupFactory$HeavyWeightParent getHeavyWeightParent(java.awt.Container)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: com.github.weisj.darklaf.ui.DarkPopupFactory$HeavyWeightParent getHeavyWeightParent(java.awt.Container)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupHeavyWeightWindow(java.awt.Window,java.awt.Component,boolean,boolean)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupHeavyWeightWindow(java.awt.Window,java.awt.Component,boolean,boolean)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupHeavyWeightWindow(java.awt.Window,java.awt.Component,boolean,boolean)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: int mapDragOperationFromModifiers(java.awt.event.MouseEvent,javax.swing.TransferHandler)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DragRecognitionSupport: int mapDragOperationFromModifiers(java.awt.event.MouseEvent,javax.swing.TransferHandler)> => <javax.swing.SwingUtilities: boolean isLeftMouseButton(java.awt.event.MouseEvent)>
Found static invoke: <com.github.weisj.darklaf.ui.splitbutton.DarkSplitButtonUI$DarkSplitButtonLayout: void prepareContentRects(javax.swing.AbstractButton,int,int)> => <javax.swing.plaf.basic.BasicButtonUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI$DarkButtonLayout: void prepareContentRects(javax.swing.AbstractButton,int,int)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void paintBorderlessBackground(javax.swing.AbstractButton,java.awt.Graphics2D,int,int,int,java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void paintBorderlessBackground(javax.swing.AbstractButton,java.awt.Graphics2D,int,int,int,java.awt.Insets)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void paintBorderlessBackground(javax.swing.AbstractButton,java.awt.Graphics2D,int,int,int,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void paintBorderlessBackground(javax.swing.AbstractButton,java.awt.Graphics2D,int,int,int,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void paintBorderlessBackground(javax.swing.AbstractButton,java.awt.Graphics2D,int,int,int,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void paintBorderlessBackground(javax.swing.AbstractButton,java.awt.Graphics2D,int,int,int,java.awt.Insets)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void paintBorderlessBackground(javax.swing.AbstractButton,java.awt.Graphics2D,int,int,int,java.awt.Insets)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: void paintBorderlessBackground(javax.swing.AbstractButton,java.awt.Graphics2D,int,int,int,java.awt.Insets)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener$PopupComponent: void <init>(com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener$PopupComponent: void <init>(com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener$PopupComponent: void <init>(com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener$PopupComponent: void <init>(com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener$PopupComponent: void <init>(com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener$PopupComponent: void <init>(com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: boolean isDifferentPopupOpen()> => <javax.swing.MenuSelectionManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: boolean isDifferentPopupOpen()> => <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: java.awt.Rectangle calculatePopupBounds(java.awt.Rectangle,java.awt.Rectangle,boolean)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void enter(java.lang.Object,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void enter(java.lang.Object,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.PopupFactory: javax.swing.PopupFactory getSharedInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void enter(java.lang.Object,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void enter(java.lang.Object,java.awt.Rectangle,java.awt.Rectangle)> => <javax.swing.PopupFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void enter(java.lang.Object,java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void enter(java.lang.Object,java.awt.Rectangle,java.awt.Rectangle)> => <java.util.logging.Level: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void enter(java.lang.Object,java.awt.Rectangle,java.awt.Rectangle)> => <java.util.logging.Level: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void syncValues()> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: void syncValues()> => <java.awt.Color: java.awt.Color getHSBColor(float,float,float)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getTrianglePos(double,double)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getTrianglePos(double,double)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorTriangle: java.awt.geom.Point2D getTrianglePos(double,double)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JButton createPipetteButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JButton createPipetteButton()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JButton createPipetteButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: javax.swing.JButton createPipetteButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createDirectoryComboBox(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createDirectoryComboBox(javax.swing.JFileChooser)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createDirectoryComboBox(javax.swing.JFileChooser)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createDirectoryComboBox(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createDirectoryComboBox(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createTopButtonArea()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createTopButtonArea()> => <javax.swing.Box: java.awt.Component createGlue()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createTopButtonArea()> => <javax.swing.UIManager: boolean getBoolean(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createTopButtonArea()> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createTopButtonArea()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createTopButtonArea()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createTopButtonArea()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.JPanel getBottomPanel()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.JPanel getBottomPanel()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.JPanel getBottomPanel()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createFileNamePanel(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createFileNamePanel(javax.swing.JFileChooser)> => <javax.swing.text.JTextComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createFileNamePanel(javax.swing.JFileChooser)> => <javax.swing.JTextField: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createFileNamePanel(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createFileNamePanel(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeVerticalSpacer()> => <javax.swing.Box: java.awt.Component createRigidArea(java.awt.Dimension)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeVerticalSpacer()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeVerticalSpacer()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeVerticalSpacer()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeVerticalSpacer()> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createFileTypePanel(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createFileTypePanel(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component createFileTypePanel(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.JPanel getButtonPanel()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.JPanel getButtonPanel()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.JPanel getButtonPanel()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <java.util.Arrays: int[] copyOf(int[],int)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <sun.awt.shell.ShellFolder: sun.awt.shell.ShellFolderColumnInfo[] getFolderColumns(java.io.File)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <sun.awt.shell.ShellFolder: sun.awt.shell.ShellFolder getShellFolder(java.io.File)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <java.util.ArrayList: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <sun.awt.shell.ShellFolder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <java.io.File: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <sun.awt.shell.ShellFolder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFilePaneUIBridge$DetailsTableModel: void updateColumnInfo()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getModelIndex(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getModelIndex(int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getModelIndex(int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getModelIndex(int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: int getModelIndex(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge$Actions: void adjustScrollPositionIfNecessary(javax.swing.JList,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)> => <java.awt.geom.Point2D: double distance(double,double,double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)> => <java.awt.geom.Point2D: double distance(double,double,double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)> => <java.awt.geom.Point2D: double distance(double,double,double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)> => <java.awt.geom.Point2D: double distance(double,double,double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)> => <java.awt.geom.Point2D: double distance(double,double,double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)> => <java.awt.geom.Point2D: double distance(double,double,double,double)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: java.awt.Rectangle getDropLineRect(javax.swing.JList$DropLocation)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateLayoutState()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateLayoutState()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: sun.swing.MenuItemLayoutHelper getMenuItemLayoutHelper(javax.swing.Icon,javax.swing.Icon,int,javax.swing.JMenuItem,java.awt.Rectangle)> => <sun.swing.MenuItemLayoutHelper: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.menu.DarkMenuItemUIBase: sun.swing.MenuItemLayoutHelper getMenuItemLayoutHelper(javax.swing.Icon,javax.swing.Icon,int,javax.swing.JMenuItem,java.awt.Rectangle)> => <sun.swing.MenuItemLayoutHelper: boolean useCheckAndArrow(javax.swing.JMenuItem)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void realUngrabWindow()> => <java.awt.Toolkit: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void realUngrabWindow()> => <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void repaintPath(javax.swing.MenuElement[])> => <javax.swing.SwingUtilities: java.awt.Rectangle convertRectangle(java.awt.Component,java.awt.Rectangle,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.MouseGrabber: void repaintPath(javax.swing.MenuElement[])> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPane(javax.swing.JComponent)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPane(javax.swing.JComponent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPane(javax.swing.JComponent)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPane(javax.swing.JComponent)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.popupmenu.PopupMenuContainer: com.github.weisj.darklaf.components.OverlayScrollPane createScrollPane(javax.swing.JComponent)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void setTitlePane(javax.swing.JRootPane,com.github.weisj.darklaf.platform.decorations.CustomTitlePane)> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void setTitlePane(javax.swing.JRootPane,com.github.weisj.darklaf.platform.decorations.CustomTitlePane)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void setTitlePane(javax.swing.JRootPane,com.github.weisj.darklaf.platform.decorations.CustomTitlePane)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.rootpane.DarkRootPaneUI: void setTitlePane(javax.swing.JRootPane,com.github.weisj.darklaf.platform.decorations.CustomTitlePane)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: int getSnappedValue(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.slider.DarkSliderUI: int getSnappedValue(int)> => <java.lang.Math: int round(float)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void layoutLabel(int,java.awt.FontMetrics,int,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,boolean)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void layoutLabel(int,java.awt.FontMetrics,int,java.lang.String,javax.swing.Icon,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,boolean)> => <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: int getShift(int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: int getShift(int,int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: int getShift(int,int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: int getShift(int,int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: int getShift(int,int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkScrollableTabSupport: int getShift(int,int,int,int)> => <java.lang.Math: int abs(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateMaxTabWidth(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateMaxTabWidth(int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateMaxTabHeight(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int calculateMaxTabHeight(int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateRect(int,java.awt.Rectangle,java.awt.FontMetrics,boolean,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateRect(int,java.awt.Rectangle,java.awt.FontMetrics,boolean,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateRect(int,java.awt.Rectangle,java.awt.FontMetrics,boolean,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void calculateRect(int,java.awt.Rectangle,java.awt.FontMetrics,boolean,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void restoreHiddenTabsX(int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void restoreHiddenTabsX(int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void restoreHiddenTabsX(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void restoreHiddenTabsY(int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void restoreHiddenTabsY(int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void restoreHiddenTabsY(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutTabComponents()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutTabComponents()> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutTabComponents()> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: void layoutTabComponents()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int getFallBackSize()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int getFallBackSize()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int getFallBackSize()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: int getFallBackSize()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void shiftTabs(int,int,int,int,boolean,boolean)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void shiftTabs(int,int,int,int,boolean,boolean)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void shiftTabs(int,int,int,int,boolean,boolean)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void shiftTabs(int,int,int,int,boolean,boolean)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void shiftTabs(int,int,int,int,boolean,boolean)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void shiftTabs(int,int,int,int,boolean,boolean)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void shiftTabs(int,int,int,int,boolean,boolean)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: java.util.Vector createHTMLVector()> => <javax.swing.plaf.basic.BasicHTML: boolean isHTMLString(java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: java.util.Vector createHTMLVector()> => <javax.swing.plaf.basic.BasicHTML: javax.swing.text.View createHTMLView(javax.swing.JComponent,java.lang.String)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: javax.swing.InputMap getInputMap(int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: javax.swing.InputMap getInputMap(int)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: javax.swing.InputMap getInputMap(int)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: javax.swing.InputMap getInputMap(int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: javax.swing.JButton createButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: javax.swing.JButton createButton()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: javax.swing.JButton createButton()> => <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: javax.swing.JButton createButton()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: javax.swing.JButton createButton()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: javax.swing.JButton createButton()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: javax.swing.JButton createButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.MoreTabsButton: javax.swing.JButton createButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$TabFrameNewTabButton: javax.swing.JButton createButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$TabFrameNewTabButton: javax.swing.JButton createButton()> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$TabFrameNewTabButton: javax.swing.JButton createButton()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$TabFrameNewTabButton: javax.swing.JButton createButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI$TabFrameNewTabButton: javax.swing.JButton createButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton: javax.swing.JButton createButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton: javax.swing.JButton createButton()> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton: javax.swing.JButton createButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.NewTabButton: javax.swing.JButton createButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void addMnemonic(int,int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void addMnemonic(int,int)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void addMnemonic(int,int)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void addMnemonic(int,int)> => <javax.swing.KeyStroke: javax.swing.KeyStroke getKeyStroke(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void addMnemonic(int,int)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void addMnemonic(int,int)> => <java.awt.AWTKeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void addMnemonic(int,int)> => <javax.swing.KeyStroke: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int calculateMaxTabHeight(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int calculateMaxTabHeight(int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int calculateMaxTabWidth(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int calculateMaxTabWidth(int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void expandTabRunsArray()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void expandTabRunsArray()> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int calculateTabHeight(int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int calculateTabHeight(int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void rotateTabRuns(int,int)> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void rotateTabRuns(int,int)> => <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void padTabRun(int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void padTabRun(int,int,int,int)> => <java.lang.Math: int round(float)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void padTabRun(int,int,int,int)> => <java.lang.Math: int round(float)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.TabbedPaneLayout: void padTabRun(int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton createCloseButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton createCloseButton()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton createCloseButton()> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton createCloseButton()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton createCloseButton()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton createCloseButton()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton createCloseButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI$HeaderButton createCloseButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JLabel createLabel()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JLabel createLabel()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JLabel createLabel()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JPanel createHeader()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JPanel createHeader()> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JPanel createHeader()> => <javax.swing.Box: java.awt.Component createHorizontalStrut(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JPanel createHeader()> => <javax.swing.Box: java.awt.Component createGlue()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JPanel createHeader()> => <javax.swing.Box: java.awt.Component createHorizontalStrut(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JPanel createHeader()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JPanel createHeader()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: javax.swing.JPanel createHeader()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.components.border.MutableLineBorder createBorder()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: com.github.weisj.darklaf.components.border.MutableLineBorder createBorder()> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void setupTabbedPane()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void setupTabbedPane()> => <javax.swing.UIManager: javax.swing.border.Border getBorder(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void setupTabbedPane()> => <javax.swing.Box: java.awt.Component createHorizontalStrut(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void setupTabbedPane()> => <javax.swing.Box: java.awt.Component createHorizontalStrut(int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void setupTabbedPane()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void setupTabbedPane()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabbedPopupUI: void setupTabbedPane()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkPanelPopupUI: java.awt.Insets getBorderSize(com.github.weisj.darklaf.components.tabframe.JTabFrame,com.github.weisj.darklaf.util.Alignment,boolean[])> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.JMenuItem createMenuItem(com.github.weisj.darklaf.util.Alignment,java.util.Locale)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.JMenuItem createMenuItem(com.github.weisj.darklaf.util.Alignment,java.util.Locale)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.JMenuItem createMenuItem(com.github.weisj.darklaf.util.Alignment,java.util.Locale)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: java.lang.String lambda$save$6()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameLayout: int layoutTabArea(java.awt.Point,com.github.weisj.darklaf.util.Alignment,boolean,int)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: java.lang.String lambda$isPopupNeeded$2(java.lang.Object,java.awt.Dimension)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUIBridge: int viewIndexForColumn(javax.swing.table.TableColumn)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: boolean showVerticalLine(boolean,boolean,boolean,int,int,int,int)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: void paintDraggedArea(java.awt.Graphics,int,int,int,int,javax.swing.table.TableColumn,int)> => <java.awt.Color: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.DarkTableUI: void paintDraggedArea(java.awt.Graphics,int,int,int,int,javax.swing.table.TableColumn,int)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: boolean canStartDrag()> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void setDispatchComponent(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.Component getDeepestComponentAt(java.awt.Component,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void setDispatchComponent(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void setDispatchComponent(java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.table.TableUIBridge$Handler: void setDispatchComponent(java.awt.event.MouseEvent)> => <javax.swing.plaf.basic.BasicTableUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkPasswordFieldUI: boolean passwordEmpty()> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkPasswordFieldUI: boolean passwordEmpty()> => <java.util.Arrays: void fill(char[],char)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: boolean doPaintLeftIcon(javax.swing.text.JTextComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: boolean doPaintRightIcon(javax.swing.text.JTextComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkPasswordFieldUI: boolean doPaintRightIcon(javax.swing.text.JTextComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkPasswordFieldUI: javax.swing.Icon getRightIcon(javax.swing.text.JTextComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void showSearchPopup()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void showSearchPopup()> => <java.lang.System: long currentTimeMillis()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void showSearchPopup()> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: com.github.weisj.darklaf.ui.text.DarkCaret createDarkCaret()> => <javax.swing.text.DefaultCaret: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: com.github.weisj.darklaf.ui.text.DarkCaret createDarkCaret()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: com.github.weisj.darklaf.ui.text.DefaultTextRenderer createDefaultTextRenderer()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: com.github.weisj.darklaf.ui.text.DefaultTextRenderer createDefaultTextRenderer()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextUI: com.github.weisj.darklaf.ui.text.DefaultTextRenderer createDefaultTextRenderer()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserUI$lambda_new_0__120: void propertyChange(java.beans.PropertyChangeEvent)> => <javax.swing.plaf.basic.BasicColorChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: java.awt.geom.RectangularShape calculateHitArea()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: java.awt.geom.RectangularShape calculateHitArea()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.checkbox.DarkCheckBoxUI: java.awt.geom.RectangularShape calculateHitArea()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: java.awt.geom.RectangularShape calculateHitArea()> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: java.awt.geom.RectangularShape calculateHitArea()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.togglebutton.radiobutton.DarkRadioButtonUI: java.awt.geom.RectangularShape calculateHitArea()> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI$MacScrollBarListener: void lambda$new$0(javax.swing.JScrollBar,java.awt.event.ActionEvent)> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI$MacScrollBarListener: void lambda$new$0(javax.swing.JScrollBar,java.awt.event.ActionEvent)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI$MacScrollBarListener: void lambda$new$0(javax.swing.JScrollBar,java.awt.event.ActionEvent)> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkMacScrollBarUI$MacScrollBarListener: void lambda$new$0(javax.swing.JScrollBar,java.awt.event.ActionEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void lambda$new$1(java.util.function.BiConsumer,java.awt.event.ActionEvent)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.QuickColorChooser: void lambda$new$1(java.util.function.BiConsumer,java.awt.event.ActionEvent)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void lambda$new$0(java.awt.event.ActionEvent)> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void lambda$new$0(java.awt.event.ActionEvent)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void lambda$new$0(java.awt.event.ActionEvent)> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.TabFrameTransferHandler: void lambda$new$0(java.awt.event.ActionEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.text.SearchTextField: void lambda$new$0(java.awt.event.ActionEvent)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel$lambda_createPipetteButton_4__397: void run()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel$lambda_createPipetteButton_4__397: void run()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel$lambda_createPipetteButton_4__397: void run()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: void paintExpandControl(java.awt.Graphics,java.awt.Rectangle,javax.swing.tree.TreePath,int,boolean,boolean,boolean)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: void paintExpandControl(java.awt.Graphics,java.awt.Rectangle,javax.swing.tree.TreePath,int,boolean,boolean,boolean)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: void paintExpandControl(java.awt.Graphics,java.awt.Rectangle,javax.swing.tree.TreePath,int,boolean,boolean,boolean)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: void paintExpandControl(java.awt.Graphics,java.awt.Rectangle,javax.swing.tree.TreePath,int,boolean,boolean,boolean)> => <javax.swing.plaf.basic.BasicTreeUI: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.Point calculateTargetPoint(org.jdesktop.jxlayer.JXLayer,java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.Point calculateTargetPoint(org.jdesktop.jxlayer.JXLayer,java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.Point calculateTargetPoint(org.jdesktop.jxlayer.JXLayer,java.awt.event.MouseEvent)> => <javax.swing.SwingUtilities: void convertPointToScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.Component getTarget(org.jdesktop.jxlayer.JXLayer,java.awt.Point)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.Component getTarget(org.jdesktop.jxlayer.JXLayer,java.awt.Point)> => <javax.swing.SwingUtilities: java.awt.Component getDeepestComponentAt(java.awt.Component,int,int)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.Component getTarget(org.jdesktop.jxlayer.JXLayer,java.awt.Point)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.repaint.RepaintManagerUtils$DisplayAction: void appendClass(java.io.PrintWriter,java.lang.Object)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: int getLength()> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.ColorValueFormatter: int getLength()> => <java.lang.String: java.lang.String valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: int pointerValueToValue(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: int pointerValueToValue(int)> => <java.lang.Math: long round(double)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <javax.swing.ToolTipManager: javax.swing.ToolTipManager sharedInstance()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <java.awt.event.InputEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <java.awt.event.MouseEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <javax.swing.ToolTipManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: void fireValueChanged()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.DarkLaf: javax.swing.LookAndFeel currentOrFallback(javax.swing.LookAndFeel)> => <javax.swing.plaf.metal.MetalLookAndFeel: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <java.lang.Float: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <java.awt.Window: java.awt.Window[] getWindows()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <java.lang.Float: java.lang.Float valueOf(float)>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <javax.swing.JLayeredPane: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.LafTransition$AnimatedLafTransition: void <init>()> => <java.awt.Window: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$initListeners$2(java.awt.Color,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$initListeners$2(java.awt.Color,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$initListeners$2(java.awt.Color,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: void onTick()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: void onTick()> => <java.lang.System: long currentTimeMillis()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: void onTick()> => <java.lang.System: long currentTimeMillis()>
Found static invoke: <com.github.weisj.darklaf.graphics.Animator: void onTick()> => <java.lang.System: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void updateCursor(java.awt.Point)> => <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void updateCursor(java.awt.Point)> => <java.awt.Cursor: java.awt.Cursor getDefaultCursor()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void updateCursor(java.awt.Point)> => <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void updateCursor(java.awt.Point)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void updateCursor(java.awt.Point)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: void updateCursor(java.awt.Point)> => <java.awt.Cursor: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.String: java.lang.String valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <javax.swing.Box: javax.swing.Box createVerticalBox()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <javax.swing.BorderFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: javax.swing.JComponent createColorModelComponent(com.github.weisj.darklaf.color.DarkColorModel)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: com.github.weisj.darklaf.settings.ThemeSettingsPanel lambda$new$1()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: com.github.weisj.darklaf.settings.ThemeSettingsPanel lambda$new$1()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.settings.ThemeSettings: com.github.weisj.darklaf.settings.ThemeSettingsPanel lambda$new$1()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <javax.swing.JSpinner: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <javax.swing.JSpinner: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: javax.swing.JComponent createValueEditor(java.lang.String,java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener$ThumbFadeInAnimator: void paintCycleEnd()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener$ThumbFadeInAnimator: void paintCycleEnd()> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener$ThumbFadeInAnimator: void paintCycleEnd()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.scrollpane.DarkScrollBarListener$ThumbFadeInAnimator: void paintCycleEnd()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$FadeInAnimator: void paintCycleEnd()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tooltip.DarkToolTipUI$FadeInAnimator: void paintCycleEnd()> => <javax.swing.SwingUtilities: java.awt.Window getWindowAncestor(java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.WatchFileTreeModel: void register(com.github.weisj.darklaf.components.filetree.FileTreeNode)> => <java.nio.file.StandardWatchEventKinds: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_createValueEditor_11__422: void accept(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_createValueEditor_11__422: void accept(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_createValueEditor_11__422: void accept(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_createValueEditor_16__417: void accept(java.lang.Object)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_createValueEditor_16__417: void accept(java.lang.Object)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel$lambda_createValueEditor_16__417: void accept(java.lang.Object)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.FontDefaultsInitTask: java.awt.Font fontWithRule(java.awt.Font,com.github.weisj.darklaf.theme.info.FontSizeRule)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.AccentColorAdjustmentTask: void adjustColorList(java.util.Map,double[],java.util.Properties)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupWindowDecorations(java.awt.Window,javax.swing.JRootPane,boolean)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void setupWindowDecorations(java.awt.Window,javax.swing.JRootPane,boolean)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: java.awt.Rectangle getEffectiveRect(int,int,int,com.github.weisj.darklaf.util.AlignmentExt)> => <java.awt.Insets: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: java.awt.Rectangle getEffectiveRect(int,int,int,com.github.weisj.darklaf.util.AlignmentExt)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: java.awt.Rectangle getEffectiveRect(int,int,int,com.github.weisj.darklaf.util.AlignmentExt)> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.button.DarkButtonUI: java.awt.Rectangle getEffectiveRect(int,int,int,com.github.weisj.darklaf.util.AlignmentExt)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void calculatePopupWidth(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,boolean)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void calculatePopupWidth(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void calculatePopupWidth(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,boolean)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void calculatePopupHeight(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void calculatePopupHeight(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void calculatePopupHeight(java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void movePopup(java.awt.Rectangle)> => <javax.swing.PopupFactory: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.DefaultListCellRenderer createDirectoryComboBoxRenderer(javax.swing.JFileChooser)> => <javax.swing.DefaultListCellRenderer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.DefaultListCellRenderer createDirectoryComboBoxRenderer(javax.swing.JFileChooser)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.DefaultListCellRenderer createDirectoryComboBoxRenderer(javax.swing.JFileChooser)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: javax.swing.DefaultListCellRenderer createDirectoryComboBoxRenderer(javax.swing.JFileChooser)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JButton createUpFolderButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JButton createUpFolderButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JButton createUpFolderButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeHorizontalSpacer()> => <javax.swing.Box: java.awt.Component createRigidArea(java.awt.Dimension)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeHorizontalSpacer()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeHorizontalSpacer()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeHorizontalSpacer()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: java.awt.Component makeHorizontalSpacer()> => <javax.swing.plaf.basic.BasicFileChooserUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JButton createHomeButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JButton createHomeButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JButton createHomeButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JButton createNewDirectoryButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JButton createNewDirectoryButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JButton createNewDirectoryButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createViewButtonArea()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createViewButtonArea()> => <javax.swing.Box: javax.swing.Box createHorizontalBox()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createViewButtonArea()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComponent createViewButtonArea()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUIBridge: java.lang.String fileNameString(java.io.File[])> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createFilterComboBox(javax.swing.ComboBoxModel)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createFilterComboBox(javax.swing.ComboBoxModel)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createFilterComboBox(javax.swing.ComboBoxModel)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createFilterComboBox(javax.swing.ComboBoxModel)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JComboBox createFilterComboBox(javax.swing.ComboBoxModel)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateHorizontalLayoutState(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateHorizontalLayoutState(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateHorizontalLayoutState(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateHorizontalLayoutState(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateHorizontalLayoutState(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateHorizontalLayoutState(int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateHorizontalLayoutState(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateHorizontalLayoutState(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.list.DarkListUIBridge: void updateHorizontalLayoutState(int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getTabLabelShiftX(int,int,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getTabLabelShiftX(int,int,boolean)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getTabLabelShiftX(int,int,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getTabLabelShiftY(int,int,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getTabLabelShiftY(int,int,boolean)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getTabLabelShiftY(int,int,boolean)> => <javax.swing.UIManager: int getInt(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getTabLabelShiftY(int,int,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void commitShiftX(int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void commitShiftX(int,int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void commitShiftX(int,int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void commitShiftY(int,int,int,int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void commitShiftY(int,int,int,int)> => <java.lang.Math: int min(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: void commitShiftY(int,int,int,int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void navigateTo(int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void navigateTo(int)> => <javax.swing.UIManager: java.lang.Object get(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void navigateTo(int)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getPreviousTabIndex(int)> => <java.lang.Math: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getPreviousTabIndex(int)> => <java.lang.Math: int max(int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: int getBaseline(int)> => <javax.swing.plaf.basic.BasicHTML: int getHTMLBaseline(javax.swing.text.View,int,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: javax.swing.Icon getMoreTabsIcon()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUI: javax.swing.Icon getMoreTabsIcon()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void initMnemonics()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void initMnemonics()> => <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneUIBridge: void initMnemonics()> => <javax.swing.SwingUtilities: javax.swing.InputMap getUIInputMap(javax.swing.JComponent,int)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: java.lang.String getDescription(com.github.weisj.darklaf.util.Alignment,java.util.Locale)> => <javax.swing.UIManager: java.lang.String getString(java.lang.Object,java.util.Locale)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: java.lang.String getDescription(com.github.weisj.darklaf.util.Alignment,java.util.Locale)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: java.lang.String getDescription(com.github.weisj.darklaf.util.Alignment,java.util.Locale)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabframe.DarkTabFrameComponentPopupMenu: javax.swing.Icon createIcon(com.github.weisj.darklaf.util.Alignment,boolean)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: javax.swing.Icon getSearchIcon(javax.swing.text.JTextComponent)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI$DarkDragWindow createDarkDragWindow(javax.swing.JToolBar)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI$DarkDragWindow createDarkDragWindow(javax.swing.JToolBar)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI$DarkDragWindow createDarkDragWindow(javax.swing.JToolBar)> => <java.awt.Window: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void dragTo()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void dragTo()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: java.awt.Rectangle getKnobRect()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.SlideComponent: java.awt.Rectangle getKnobRect()> => <java.awt.Rectangle: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseEvent transformMouseEvent(org.jdesktop.jxlayer.JXLayer,java.awt.event.MouseEvent,java.awt.Component,java.awt.Point,int)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseEvent transformMouseEvent(org.jdesktop.jxlayer.JXLayer,java.awt.event.MouseEvent,java.awt.Component,java.awt.Point,int)> => <javax.swing.SwingUtilities: void convertPointFromScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseEvent transformMouseEvent(org.jdesktop.jxlayer.JXLayer,java.awt.event.MouseEvent,java.awt.Component,java.awt.Point,int)> => <javax.swing.SwingUtilities: void convertPointToScreen(java.awt.Point,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseEvent transformMouseEvent(org.jdesktop.jxlayer.JXLayer,java.awt.event.MouseEvent,java.awt.Component,java.awt.Point,int)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseEvent transformMouseEvent(org.jdesktop.jxlayer.JXLayer,java.awt.event.MouseEvent,java.awt.Component,java.awt.Point,int)> => <java.awt.event.InputEvent: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseEvent transformMouseEvent(org.jdesktop.jxlayer.JXLayer,java.awt.event.MouseEvent,java.awt.Component,java.awt.Point,int)> => <java.awt.event.MouseEvent: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseWheelEvent transformMouseWheelEvent(java.awt.event.MouseWheelEvent,java.awt.Component,org.jdesktop.jxlayer.JXLayer)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseWheelEvent transformMouseWheelEvent(java.awt.event.MouseWheelEvent,java.awt.Component,org.jdesktop.jxlayer.JXLayer)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: void processMouseWheelEvent(java.awt.event.MouseWheelEvent,org.jdesktop.jxlayer.JXLayer)> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: void processMouseWheelEvent(java.awt.event.MouseWheelEvent,org.jdesktop.jxlayer.JXLayer)> => <javax.swing.SwingUtilities: java.awt.Point convertPoint(java.awt.Component,java.awt.Point,java.awt.Component)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.lang.Boolean lambda$shiftTabs$0(int,int,int,java.lang.Integer)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.lang.Boolean lambda$shiftTabs$0(int,int,int,java.lang.Integer)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.lang.Boolean lambda$shiftTabs$1(int,int,int,java.lang.Integer)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tabbedpane.DarkTabbedPaneScrollLayout: java.lang.Boolean lambda$shiftTabs$1(int,int,int,java.lang.Integer)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.text.DarkTextFieldUI: java.awt.Rectangle getVisibleEditorRect(boolean)> => <javax.swing.plaf.basic.BasicTextUI: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane$PopupScrollBar: void <init>(int)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.OverlayScrollPane$PopupScrollBar: void <init>(int)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.components.filetree.FileTreeNode: void lambda$reload$1(java.util.List,java.util.function.Consumer,java.util.stream.Stream)> => <java.util.stream.Stream: java.util.stream.Stream concat(java.util.stream.Stream,java.util.stream.Stream)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void lambda$createValueEditor$13(java.lang.String,com.github.weisj.darklaf.components.iconeditor.NamedInt)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void lambda$createValueEditor$13(java.lang.String,com.github.weisj.darklaf.components.iconeditor.NamedInt)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.AccentColorAdjustmentTask: void setColorInfo(java.util.Map$Entry,com.github.weisj.darklaf.task.AccentColorAdjustmentTask$ColorInfo)> => <java.lang.Integer: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.AccentColorAdjustmentTask: void setColorInfo(java.util.Map$Entry,com.github.weisj.darklaf.task.AccentColorAdjustmentTask$ColorInfo)> => <java.util.Arrays: java.util.List asList(java.lang.Object[])>
Found static invoke: <com.github.weisj.darklaf.task.AccentColorAdjustmentTask: void setColorInfo(java.util.Map$Entry,com.github.weisj.darklaf.task.AccentColorAdjustmentTask$ColorInfo)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.AccentColorAdjustmentTask: void setColorInfo(java.util.Map$Entry,com.github.weisj.darklaf.task.AccentColorAdjustmentTask$ColorInfo)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.AccentColorAdjustmentTask: void setColorInfo(java.util.Map$Entry,com.github.weisj.darklaf.task.AccentColorAdjustmentTask$ColorInfo)> => <java.lang.Integer: java.lang.Integer valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.task.AccentColorAdjustmentTask: void setColorInfo(java.util.Map$Entry,com.github.weisj.darklaf.task.AccentColorAdjustmentTask$ColorInfo)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.AccentColorAdjustmentTask: void setColorInfo(java.util.Map$Entry,com.github.weisj.darklaf.task.AccentColorAdjustmentTask$ColorInfo)> => <java.util.Arrays: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void linuxOpacityFix(javax.swing.JRootPane)> => <java.lang.Class: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void linuxOpacityFix(javax.swing.JRootPane)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: void linuxOpacityFix(javax.swing.JRootPane)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: java.awt.Color getTranslucentPopupBackground(boolean)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.DarkPopupFactory: java.awt.Color getTranslucentPopupBackground(boolean)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.cell.hint.CellHintPopupListener: void moveHeavyWeightPopup(java.awt.Rectangle,java.awt.Window)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void setupButton(javax.swing.AbstractButton,java.lang.String,java.lang.String)> => <java.lang.Boolean: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void setupButton(javax.swing.AbstractButton,java.lang.String,java.lang.String)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: void setupButton(javax.swing.AbstractButton,java.lang.String,java.lang.String)> => <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createListViewButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createListViewButton()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createListViewButton()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createListViewButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createListViewButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createDetailsViewButton()> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createDetailsViewButton()> => <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createDetailsViewButton()> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createDetailsViewButton()> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.filechooser.DarkFileChooserUI: javax.swing.JToggleButton createDetailsViewButton()> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ForegroundColorGenerationTask: void lambda$adjustForegroundList$3(java.util.Properties,java.util.Map$Entry)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.task.ForegroundColorGenerationTask: void lambda$adjustForegroundList$3(java.util.Properties,java.util.Map$Entry)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI$DarkDragWindow: void <init>(com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI,java.awt.Window,javax.swing.JToolBar)> => <javax.swing.UIManager: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI$DarkDragWindow: void <init>(com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI,java.awt.Window,javax.swing.JToolBar)> => <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI$DarkDragWindow: void <init>(com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI,java.awt.Window,javax.swing.JToolBar)> => <java.awt.Component: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI$DarkDragWindow: void <init>(com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI,java.awt.Window,javax.swing.JToolBar)> => <java.awt.Container: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI$DarkDragWindow: void <init>(com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI,java.awt.Window,javax.swing.JToolBar)> => <javax.swing.JComponent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.colorchooser.DarkColorChooserPanel: void updateDescriptors()> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void showDragWindow()> => <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void showDragWindow()> => <javax.swing.SwingUtilities: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: boolean isChildOfSelectionPath(javax.swing.tree.TreePath)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <com.github.weisj.darklaf.ui.tree.DarkTreeUI: boolean isChildOfSelectionPath(javax.swing.tree.TreePath)> => <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseWheelEvent createMouseWheelEvent(java.awt.event.MouseWheelEvent,java.awt.Point,java.awt.Component)> => <java.awt.event.MouseEvent: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseWheelEvent createMouseWheelEvent(java.awt.event.MouseWheelEvent,java.awt.Point,java.awt.Component)> => <java.awt.AWTEvent: void <clinit>()>
Found static invoke: <org.pbjar.jxlayer.plaf.ext.MouseEventUI: java.awt.event.MouseWheelEvent createMouseWheelEvent(java.awt.event.MouseWheelEvent,java.awt.Point,java.awt.Component)> => <java.awt.event.InputEvent: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$createColorModelComponent$7(int,javax.swing.JSlider[],com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor,javax.swing.JSlider,com.github.weisj.darklaf.color.DarkColorModel,javax.swing.event.ChangeEvent)> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$createColorModelComponent$7(int,javax.swing.JSlider[],com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor,javax.swing.JSlider,com.github.weisj.darklaf.color.DarkColorModel,javax.swing.event.ChangeEvent)> => <java.lang.String: java.lang.String valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$createColorModelComponent$8(com.github.weisj.darklaf.color.DarkColorModel,int,javax.swing.JSlider[],com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor[])> => <java.lang.String: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.components.color.SmallColorChooser: void lambda$createColorModelComponent$8(com.github.weisj.darklaf.color.DarkColorModel,int,javax.swing.JSlider[],com.github.weisj.darklaf.components.color.SmallColorChooser$Descriptor[])> => <java.lang.String: java.lang.String valueOf(int)>
Found static invoke: <com.github.weisj.darklaf.components.iconeditor.IconEditorPanel: void put(java.lang.String,java.lang.Object)> => <java.lang.AbstractStringBuilder: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void floatAt()> => <java.awt.MouseInfo: void <clinit>()>
Found static invoke: <com.github.weisj.darklaf.ui.toolbar.DarkToolBarUI: void floatAt()> => <java.awt.MouseInfo: java.awt.PointerInfo getPointerInfo()>

Total static calls: 4380
